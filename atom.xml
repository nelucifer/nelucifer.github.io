<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coder立夏的笔记</title>
  <icon>https://www.gravatar.com/avatar/f0d08edbb92c84449cb9aa170181da16</icon>
  <subtitle>JavaWeb开发|热爱分享|开发学习笔记|码梦者学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wanglixia.top/"/>
  <updated>2019-07-13T12:53:14.791Z</updated>
  <id>https://www.wanglixia.top/</id>
  
  <author>
    <name>coder立夏</name>
    <email>ne_lucifer@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql数据库常用方式</title>
    <link href="https://www.wanglixia.top/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F.html"/>
    <id>https://www.wanglixia.top/Mysql数据库常用方式.html</id>
    <published>2019-06-30T08:07:07.000Z</published>
    <updated>2019-07-13T12:53:14.791Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要："><a href="#概要：" class="headerlink" title="概要："></a>概要：</h2><ul><li>修改数据库编码；</li><li>更改数据库名；<a id="more"></a><h2 id="修改数据库编码："><a href="#修改数据库编码：" class="headerlink" title="修改数据库编码："></a>修改数据库编码：</h2>utf8mb4的最低mysql版本支持版本为5.5.3+，若不是，请升级到较新版本。<h3 id="1-先修改my-ini"><a href="#1-先修改my-ini" class="headerlink" title="1. 先修改my.ini"></a>1. 先修改my.ini</h3>my.ini 文件，找到以下几项或者在[client]、[mysql]、[mysqld]下面按照如下位置添加对应编码，设置为utf8mb4；我的是MySQL5.6版本，my.ini没有再安装目录，在以下目录：<code>C:\ProgramData\MySQL\MySQL Server 5.6</code></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysql]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysqld]</span> </span><br><span class="line"><span class="attr">character-set-client-handshake</span> = <span class="literal">FALSE</span> </span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4 </span><br><span class="line"><span class="attr">collation-server</span> = utf8mb4_unicode_ci </span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8mb4'</span></span><br></pre></td></tr></table></figure><p>重启MySQL服务，查看编码的脚本：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">WHERE</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'character\_set\_%'</span> <span class="keyword">OR</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure></p><h3 id="2-数据库连接的配置"><a href="#2-数据库连接的配置" class="headerlink" title="2. 数据库连接的配置"></a>2. 数据库连接的配置</h3><p>数据库连接参数中:<br>characterEncoding=utf8会被自动识别为utf8mb4，也可以不加这个参数，会自动检测。<br>而autoReconnect=true是必须加上的。</p><h3 id="3-修改列编码"><a href="#3-修改列编码" class="headerlink" title="3. 修改列编码"></a>3. 修改列编码</h3><p>将数据库和已经建好的表也转换成utf8mb4<br>更改数据库编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> LX_NOTE <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>更改表编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME SYS_MENU <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 COLLATEutf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>如有必要，还可以更改列的编码</p><h2 id="更改数据库名"><a href="#更改数据库名" class="headerlink" title="更改数据库名"></a>更改数据库名</h2><h3 id="1-！！！备份数据库！！！"><a href="#1-！！！备份数据库！！！" class="headerlink" title="1. ！！！备份数据库！！！"></a><strong>1. ！！！备份数据库！！！</strong></h3><h3 id="2-脚本-mysql-rename-sh"><a href="#2-脚本-mysql-rename-sh" class="headerlink" title="2. 脚本 mysql_rename.sh"></a>2. 脚本 mysql_rename.sh</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mysql -uroot -p<span class="string">'lucifer'</span> --host=127.0.0.1 -e <span class="string">'create database if not exists LX_NOTE DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci'</span></span><br><span class="line"></span><br><span class="line">list_table=$(mysql -uroot -plucifer --host=127.0.0.1 -Nse <span class="string">"select table_name from information_schema.TABLES where TABLE_SCHEMA='SSM_NOTE'"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> table <span class="keyword">in</span> <span class="variable">$list_table</span>  </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="comment">#echo $TABLE</span></span><br><span class="line">    mysql -uroot -plucifer --host=127.0.0.1 -e <span class="string">"rename table SSM_NOTE.<span class="variable">$table</span> to LX_NOTE.<span class="variable">$table</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="3-cmd命令窗口运行该脚本，参考命令如下："><a href="#3-cmd命令窗口运行该脚本，参考命令如下：" class="headerlink" title="3. cmd命令窗口运行该脚本，参考命令如下："></a>3. cmd命令窗口运行该脚本，参考命令如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 5.6\bin&gt;e:mysql_rename.sh</span><br></pre></td></tr></table></figure><h3 id="4-完成后就发现数据库已经移动过去了。"><a href="#4-完成后就发现数据库已经移动过去了。" class="headerlink" title="4. 完成后就发现数据库已经移动过去了。"></a>4. 完成后就发现数据库已经移动过去了。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要：&quot;&gt;&lt;a href=&quot;#概要：&quot; class=&quot;headerlink&quot; title=&quot;概要：&quot;&gt;&lt;/a&gt;概要：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;修改数据库编码；&lt;/li&gt;
&lt;li&gt;更改数据库名；
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之界面配置（二）</title>
    <link href="https://www.wanglixia.top/quartz%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%95%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%EF%BC%88%E4%BA%8C%EF%BC%89.html"/>
    <id>https://www.wanglixia.top/quartz学习笔记之界面配置（二）.html</id>
    <published>2019-06-26T15:55:44.000Z</published>
    <updated>2019-07-18T14:42:23.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>通过xml配置一个调度器Scheduler，所有的任务通过该调度器来进行调度，结合官方提供的数据结构以及调度实现来达到前端控制定时器的目的。<br><a id="more"></a></p><h2 id="调度器Scheduler的作用"><a href="#调度器Scheduler的作用" class="headerlink" title="调度器Scheduler的作用"></a>调度器Scheduler的作用</h2><p>调度器是Quartz的核心组成部分，其作用是调度Job能够被Trigger触发，是Quartz的驱动。<br>下图是列出来的定时器的核心概念、组成部分以及<br><img src="http://img.wanglixia.top/Quartz-2019713202637.png" alt="Quartz-2019713202637"></p><h3 id="调度器的创建"><a href="#调度器的创建" class="headerlink" title="调度器的创建"></a>调度器的创建</h3><p>Scheduler的实现类有以下几个：<br><img src="http://img.wanglixia.top/Scheduler的实现类-201962701223.png" alt="Scheduler的实现类-201962701223"></p><ul><li>RemoteScheduler: 远程调度器；</li><li>StdScheduler：默认标准调度器（最为常用的）；</li><li>RemoteMBeanScheduler：抽象类，<ul><li>JBoss4RMIRemoteMBeanScheduler：是抽象类<code>RemoteMBeanScheduler</code> 的实现类<br>调度器的创建主要是通过其工厂模式创建的，创建方式有：</li></ul></li><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li><li>通过<code>new StdSchedulerFactory().getScheduler();</code> 来获取调度器。</li></ul></li><li>DirectSchedulerFactory；</li></ul><p>定时器创建以后，可以进行增加、删除以及显示Job和Trigger，对Job进行暂停/恢复等操作，调用了.start()方法后，Scheduler才正式开始执行Job和Trigger；</p><h4 id="StdSchedulerFactory"><a href="#StdSchedulerFactory" class="headerlink" title="StdSchedulerFactory"></a>StdSchedulerFactory</h4><p>StdSchedulerFactory依赖于一系列属性决定如何产生Scheduler，提供配置信息的方式如下：</p><ul><li>通过java.util.Properties属性实例；</li><li>通过外部属性文件提供；</li><li>通过含有属性文件内容的java.io.InputStream提供；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 无参方法，会优先加载当前工作目录的quartz.properties，如果未找到，则试图从系统的classpath中加载该配置文件。</span></span><br><span class="line">        factory.initialize();</span><br><span class="line"><span class="comment">// 2.通过外部属性文件提供</span></span><br><span class="line"><span class="comment">//        factory.initialize("lx-quartz-scheduler.properties");</span></span><br><span class="line"><span class="comment">// 3. 通过含有属性文件内容的java.io.InputStream提供</span></span><br><span class="line"><span class="comment">//        factory.initialize(new FileInputStream(new File("lx-quartz-scheduler.properties")));</span></span><br><span class="line">scheduler = factory.getScheduler(<span class="string">"quartzScheduler"</span>);</span><br></pre></td></tr></table></figure><h3 id="前端控制定时器暂停、恢复等核心方法"><a href="#前端控制定时器暂停、恢复等核心方法" class="headerlink" title="前端控制定时器暂停、恢复等核心方法"></a>前端控制定时器暂停、恢复等核心方法</h3><p>原理：配置定时器项目默认调度器名字，并结合quartz官方提供的表结构以及自动从数据库加载定时器配置的机制，使用调度器Scheduler的几个核心方法结合数据库配置达到使用前端界面控制定时器恢复、执行等操作。</p><ul><li>void start(); // 启动</li><li>void standby();// 挂起</li><li>void shutdown();// 关闭</li><li>void shutdown(true); //  等待所有正在执行的job执行完毕之后，再关闭scheduler；</li></ul><h4 id="暂停定时器核心方法"><a href="#暂停定时器核心方法" class="headerlink" title="暂停定时器核心方法"></a>暂停定时器核心方法</h4><p><em>修改数据库的执行器状态</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">updateJobStatus</span><span class="params">(QuartzJobInfo job)</span> </span>&#123;</span><br><span class="line">    QuartzTriggers triggers = <span class="keyword">new</span> QuartzTriggers();</span><br><span class="line">    triggers.setSchedName(job.getSchedName());</span><br><span class="line">    triggers.setTriggerGroup(job.getTriggerGroup());</span><br><span class="line">    triggers.setTriggerName(job.getTriggerName());</span><br><span class="line">    triggers.setTriggerState(job.getTriggerState());</span><br><span class="line">    quartzTriggersDao.updateByPrimaryKeySelective(triggers);</span><br><span class="line">    <span class="keyword">if</span> (QRTZ_TRIGGER_STATUS_WAITING.equals(job.getTriggerState())) &#123;</span><br><span class="line">        quartzManager.resumeJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        quartzManager.pauseJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Message.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 调度器暂停Job</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.pauseJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="恢复定时器核心方法"><a href="#恢复定时器核心方法" class="headerlink" title="恢复定时器核心方法"></a>恢复定时器核心方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调度器恢复Job</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.resumeJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://img.wanglixia.top/quartz界面-2019713204052.png" alt="quartz界面-2019713204052"></p><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><h4 id="定时器配置：SimpleTrigger和CronTrigger"><a href="#定时器配置：SimpleTrigger和CronTrigger" class="headerlink" title="定时器配置：SimpleTrigger和CronTrigger"></a>定时器配置：SimpleTrigger和CronTrigger</h4><p>spring-servlet.xml 中添加配置，用于托付给spring来管理；</p><ul><li>配置JobDetail；</li><li>配置Trigger；</li><li>配置Scheduler；<br>首先配置JobDetail，前面的概念中也了解到定义的方式，方式如下：</li><li>MethodInvokingJobDetailFactoryBean</li><li>JobDetailFactoryBean：可以传入参数jobDataMap；比较灵活；</li><li>extends QuartzJobBean</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式一： MethodInvokingJobDetailFactoryBean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetail"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetObject"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetMethod"</span> <span class="attr">value</span>=<span class="string">"init"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式二：JobDetailFactoryBean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetailBean1"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.JobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobClass"</span> <span class="attr">value</span>=<span class="string">"com.weyoung.platform.quartz.schedule.LxQuartzJobBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 传入自定义参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDataMap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"anotherBean"</span> <span class="attr">value-ref</span>=<span class="string">"anotherBean"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"durability"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式一：SimpleTriggerFactoryBean 距离当前时间1秒之后执行，之后每隔两秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxSimpleTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startDelay"</span> <span class="attr">value</span>=<span class="string">"1000"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"repeatInterval"</span> <span class="attr">value</span>=<span class="string">"2000"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式二：CronTriggerFactoryBean 每隔五秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxCronTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.CronTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cronExpression"</span> <span class="attr">value</span>=<span class="string">"0/5 * * ? * *"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetails"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"triggers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxSimpleTrigger"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxCronTrigger"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，定义的类lxJobDetailBean、lxJobDetailBean1、anotherBean代码如下：<br>LxJobDetailBean.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"lxJobDetailBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobDetailBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobDetailBean.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"-----------lxJobDetailBean.init-----------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>LxQuartzJobBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.entity.AnotherBean;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxQuartzJobBean</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个需要传入的参数，并给一个setter方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AnotherBean anotherBean;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxQuartzJobBean.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务逻辑</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobExecutionContext</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> JobExecutionException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"---------LxQuartzJobBean.executeInternal---------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAnotherBean</span><span class="params">(AnotherBean anotherBean)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.anotherBean = anotherBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AnotherBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"anotherBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">someMessage</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/定时器两种方式配置执行结果-2019629135035.png" alt="定时器两种方式配置执行结果-2019629135035"></p><h3 id="Quartz中作业存储方式"><a href="#Quartz中作业存储方式" class="headerlink" title="Quartz中作业存储方式"></a>Quartz中作业存储方式</h3><ul><li>RAMJobStore：作业、触发器、调度信息存储在内存中，这种方式存取速度比较快，但是如果定时器项目重启或者崩溃的话，存储的信息都会丢失；</li><li>JDBC作业存储：作业、触发器、调度信息存储在数据库中，支持事务，支持集群；</li></ul><p>前面的笔记里面记录了Quartz官方提供的表结构及创建脚本等，使用该脚本创建数据库；</p><h4 id="修改调度器信息及使用quartz-propertie文件配置"><a href="#修改调度器信息及使用quartz-propertie文件配置" class="headerlink" title="修改调度器信息及使用quartz.propertie文件配置"></a>修改调度器信息及使用quartz.propertie文件配置</h4><p>我的项目暂时是把定时器放在项目主程序中，也是使用同一个数据库，当然也可以分开。如果需要自己配置数据库的话，在quartz.properties中配置就行。<br>因此，修改<code>spring-quartz.xml</code>配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 调度器，调度器的id不要改，数据库中记录调度器名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用spring中配置的数据源，需要在这儿配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"masterDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"overwriteExistingJobs"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--覆盖JOB：true、以数据库中已经存在的为准： --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoStartup"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--自启动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startupDelay"</span> <span class="attr">value</span>=<span class="string">"20"</span>/&gt;</span> <span class="comment">&lt;!-- 定时任务延时启动，程序启动后20秒再启动定时任务 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 调度器配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/quartz.properties"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="quartz-properties文件的配置"><a href="#quartz-properties文件的配置" class="headerlink" title="quartz.properties文件的配置"></a>quartz.properties文件的配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName=lxQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid=AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export=false</span><br><span class="line">org.quartz.scheduler.rmi.proxy=false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction=false</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure ThreadPool 线程池属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount=10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority=5</span><br><span class="line">===========================================================================</span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold=60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">#org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore</span><br><span class="line">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line"># Mysql需要使用下面的链接</span><br><span class="line">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">#org.quartz.jobStore.useProperties = false</span><br><span class="line">## 我们采用程序中的数据源，因此这块不配置，在spring-quartz.xml中配置</span><br><span class="line">#org.quartz.jobStore.dataSource = masterDataSource</span><br><span class="line">org.quartz.jobStore.tablePrefix = QRTZ_</span><br><span class="line">#org.quartz.jobStore.isClustered = false</span><br><span class="line">#============================================================================</span><br><span class="line"># Configure Datasources</span><br><span class="line">#============================================================================</span><br><span class="line">#org.quartz.dataSource.myDS.driver=com.mysql.jdbc.Driver</span><br><span class="line">#org.quartz.dataSource.myDS.URL=jdbc:mysql://localhost:3306/SSM_NOTE</span><br><span class="line">#org.quartz.dataSource.myDS.user=root</span><br><span class="line">#org.quartz.dataSource.myDS.password=lucifer</span><br><span class="line">#org.quartz.dataSource.myDS.maxConnections=5</span><br><span class="line"></span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件</span><br><span class="line">org.quartz.plugin.triggHistory.class=org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage=Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage=Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;</span><br></pre></td></tr></table></figure><h3 id="qrtz-triggers表中的字段特别解析："><a href="#qrtz-triggers表中的字段特别解析：" class="headerlink" title="qrtz_triggers表中的字段特别解析："></a>qrtz_triggers表中的字段特别解析：</h3><h4 id="MISFIRE-INSTR：Misfire处理规则"><a href="#MISFIRE-INSTR：Misfire处理规则" class="headerlink" title="MISFIRE_INSTR：Misfire处理规则:"></a>MISFIRE_INSTR：Misfire处理规则:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder.simpleSchedule();</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionFireNow();</span><br><span class="line"><span class="comment">// -1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithExistingCount();</span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithRemainingCount();</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithExistingCount();</span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithRemainingCount();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1：withMisfireHandlingInstructionFireNow</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">-1：withMisfireHandlingInstructionIgnoreMisfires</span></span><br><span class="line"><span class="comment">——以错过的第一个频率时间立刻开始执行</span></span><br><span class="line"><span class="comment">——重做错过的所有频率周期</span></span><br><span class="line"><span class="comment">——当下一次触发频率发生时间大于当前时间以后，按照Interval的依次执行剩下的频率</span></span><br><span class="line"><span class="comment">——共执行RepeatCount+1次</span></span><br><span class="line"><span class="comment">2：withMisfireHandlingInstructionNowWithExistingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">3：withMisfireHandlingInstructionNowWithRemainingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">4：withMisfireHandlingInstructionNextWithRemainingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">5：withMisfireHandlingInstructionNextWithExistingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Cron的MisFire策略；使用最多的</span></span><br><span class="line"></span><br><span class="line">CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule(<span class="string">""</span>);</span><br><span class="line"><span class="comment">// -1: 以错过的第一个频率时间立刻开始执行,重做错过的所有频率周期后当下一次触发频率发生时间大于当前时间后，再按照正常的Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 2: 不触发立即执行，等待下次Cron触发频率到达时刻开始按照Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionDoNothing();</span><br><span class="line"><span class="comment">// 1:以当前时间为触发频率立刻触发一次执行，然后按照Cron频率依次执行</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionFireAndProceed();</span><br></pre></td></tr></table></figure><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.web.context.ContextLoader - Context initialization failed</span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzJobServiceImpl&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzManager&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;lxQuartzScheduler&apos; defined in class path resource [spring/spring-quartz.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: javax/transaction/UserTransaction</span><br></pre></td></tr></table></figure><p>是因为缺少jar包，添加如下依赖,即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本文内容&quot;&gt;&lt;a href=&quot;#本文内容&quot; class=&quot;headerlink&quot; title=&quot;本文内容&quot;&gt;&lt;/a&gt;本文内容&lt;/h2&gt;&lt;p&gt;通过xml配置一个调度器Scheduler，所有的任务通过该调度器来进行调度，结合官方提供的数据结构以及调度实现来达到前端控制定时器的目的。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之小试牛刀（一）</title>
    <link href="https://www.wanglixia.top/quartz-1.html"/>
    <id>https://www.wanglixia.top/quartz-1.html</id>
    <published>2019-06-23T14:12:46.000Z</published>
    <updated>2019-07-18T14:43:14.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>本文记录从数据库中加载定时任务的配置并运行的过程。<br><a id="more"></a></p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>官方提供的表结构:</p><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/</a>;</li><li>网盘下载官方文档及自己整理PDM结构链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a>,提取码：zqe0 </li></ul><p><img src="http://img.wanglixia.top/Quartz官方定时器相关表结构-201962322275.png" alt="Quartz官方定时器相关表结构-201962322275"></p><h2 id="Maven中使用"><a href="#Maven中使用" class="headerlink" title="Maven中使用"></a>Maven中使用</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.2.3<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Spring中配置方式"><a href="#Spring中配置方式" class="headerlink" title="Spring中配置方式"></a>Spring中配置方式</h2><h3 id="使用-Scheduled-注解；"><a href="#使用-Scheduled-注解；" class="headerlink" title="使用@Scheduled 注解；"></a>使用@Scheduled 注解；</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line">package com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line">import com.weyoung.framework.annotation.QuartzLog;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Mr.wang</span><br><span class="line"> * @Description</span><br><span class="line"> * @Date 2019/4/29</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class MainSchedule &#123;</span><br><span class="line"></span><br><span class="line">    private static final Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    public MainSchedule() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器MainSchedule创建成功-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Scheduled(cron = &quot;0/1 * *  * * ?&quot;)</span><br><span class="line">    @QuartzLog</span><br><span class="line">    public static void run() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器调度start-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用SchedulingConfigurer配置定时任务，使用工具类"><a href="#使用SchedulingConfigurer配置定时任务，使用工具类" class="headerlink" title="使用SchedulingConfigurer配置定时任务，使用工具类"></a>使用SchedulingConfigurer配置定时任务，使用工具类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 测试表数据</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line"></span><br><span class="line">-- qrtz_job_details 表数据</span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;测试任务&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob2.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;TestJob&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_triggers 触发器信息表数据</span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_cron_triggers 触发器的CRON表达式信息</span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;* * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;3 * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br></pre></td></tr></table></figure><h4 id="QuartzUtil-java-定时任务工具类"><a href="#QuartzUtil-java-定时任务工具类" class="headerlink" title="QuartzUtil.java 定时任务工具类"></a>QuartzUtil.java 定时任务工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务管理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/5/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"quartzUtil"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = <span class="keyword">new</span> StdSchedulerFactory().getScheduler();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"获取调度器实例异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String JOB_GROUP_NAME = <span class="string">"LX_JOB_GROUP_NAME"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TRIGGER_GROUP_NAME = <span class="string">"LX_TRIGGER_GROUP_NAME"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setScheduler</span><span class="params">(Scheduler scheduler)</span> </span>&#123;</span><br><span class="line">        QuartzUtil.scheduler = scheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个定时任务，使用默认的任务组名，触发器名，触发器组名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass       Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName        job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class jobClass, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        addJob(jobClass, jobName, <span class="keyword">null</span>, jobName, <span class="keyword">null</span>, cronExpression, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始一个simpleSchedule()调度(创建一个新的定时任务)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass         Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName          job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName     job组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression   cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName      trigger名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName triggerJob组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerPriority  trigger优先级</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(Class jobClass, String jobName, String jobGroupName, String triggerName, String triggerGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String cronExpression, <span class="keyword">int</span> triggerPriority)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1、创建一个JobDetail实例，指定Quartz</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder</span><br><span class="line">                <span class="comment">// 任务执行类</span></span><br><span class="line">                .newJob(jobClass)</span><br><span class="line">                <span class="comment">// 任务名，任务组</span></span><br><span class="line">                .withIdentity(jobName, jobGroupName)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 2、创建Trigger</span></span><br><span class="line">        <span class="comment">// 优先级默认是5，数字越高优先级越高</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(triggerName, triggerGroupName).startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(cronExpression))</span><br><span class="line">                .withPriority(triggerPriority)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断调度其中是否存在该任务，不存在时添加，否则会出现错误</span></span><br><span class="line">            <span class="keyword">if</span> (!scheduler.checkExists(JobKey.jobKey(jobName, jobGroupName))) &#123;</span><br><span class="line">                scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加任务["</span> + jobName + <span class="string">"]到调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、启动</span></span><br><span class="line">        <span class="keyword">this</span>.startSchedule();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (scheduler.isShutdown()) &#123;</span><br><span class="line">                <span class="comment">// 恢复</span></span><br><span class="line">                scheduler.resumeAll();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 启动</span></span><br><span class="line">                scheduler.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"开启任务调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂停Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.pauseJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 恢复Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.resumeJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改一个任务的触发时间(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String jobName, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        rescheduleJob(jobName, <span class="keyword">null</span>, cronExpression);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新任务表达式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName       trigger名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName  trigger组名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newCronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rescheduleJob</span><span class="params">(String triggerName, String triggerGroupName, String newCronExpression)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 获取trigger</span></span><br><span class="line">        CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 按新的cronExpression表达式重新构建trigger</span></span><br><span class="line">        trigger = trigger</span><br><span class="line">                .getTriggerBuilder()</span><br><span class="line">                .withIdentity(triggerKey)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(newCronExpression))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 按新的trigger重新设置job执行</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"更新任务调度策略出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String triggerName)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.removeJob(jobName, <span class="keyword">null</span>, triggerName, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String jobGroupName, String triggerName, String triggerGroupName)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 停止触发器</span></span><br><span class="line">        scheduler.pauseTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 移除触发器</span></span><br><span class="line">        scheduler.unscheduleJob(triggerKey);</span><br><span class="line">        <span class="comment">// 删除任务</span></span><br><span class="line">        scheduler.deleteJob(jobKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现SchedulingConfigurer接口的类"><a href="#实现SchedulingConfigurer接口的类" class="headerlink" title="实现SchedulingConfigurer接口的类"></a>实现SchedulingConfigurer接口的类</h4><p>作用是从数据库中加载定时器配置信息；<br><em>注：@PostConstruct注解使这个方法在项目启动后加载执行</em><br>LxJobConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.dao.QuartzJobDetailsDao;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.pojo.QuartzJobInfo;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.utils.QuartzUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.SchedulingConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.config.ScheduledTaskRegistrar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * @功能描述: 加载定时器列表</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/23 20:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobConfig</span> <span class="keyword">implements</span> <span class="title">SchedulingConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> QuartzJobDetailsDao quartzJobDetailsDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    QuartzUtil quartzUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureTasks</span><span class="params">(ScheduledTaskRegistrar taskRegistrar)</span> </span>&#123;</span><br><span class="line">        loadConfigsFromDb();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库中获取job配置信息并放入调度器中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadConfigsFromDb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"-----------------LxJobConfig------------------loadConfigsFromDb-----------------"</span>);</span><br><span class="line">        <span class="comment">// 从数据库加载Job配置信息</span></span><br><span class="line">        List&lt;QuartzJobInfo&gt; jobDetails = quartzJobDetailsDao.selectCronJobAndTriggerList(<span class="keyword">new</span> QuartzJobInfo());</span><br><span class="line">        jobDetails.stream().forEach(config -&gt; &#123;</span><br><span class="line">            String jobClassName = config.getJobClassName();</span><br><span class="line">            <span class="keyword">if</span> (jobClassName.indexOf(SPLIT_DOT) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名参数配置错误["</span> + jobClassName + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(config.getCronExpression())) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，CRON表达式配置错误["</span> + config.getCronExpression() + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> splitIdx = jobClassName.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">            String className = jobClassName.substring(<span class="number">0</span>, splitIdx);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; jobClass = Class.forName(className);</span><br><span class="line">                quartzUtil.addJob(jobClass, config.getJobName(), config.getJobGroup(), config.getTriggerName(),</span><br><span class="line">                        config.getTriggerGroup(), config.getCronExpression(), config.getPriority());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名["</span> + className + <span class="string">"]未找到！"</span>, e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加定时任务异常！"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类1：-TestJob-java"><a href="#测试任务类1：-TestJob-java" class="headerlink" title="测试任务类1： TestJob.java"></a>测试任务类1： TestJob.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/24 19:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String now = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"---------------&gt;TestJobMain execute"</span> + now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类2：TestJob2"><a href="#测试任务类2：TestJob2" class="headerlink" title="测试任务类2：TestJob2"></a>测试任务类2：TestJob2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务实现类-测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob2</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"TestJob2.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="执行结果信息"><a href="#执行结果信息" class="headerlink" title="执行结果信息"></a>执行结果信息</h4><p><img src="http://img.wanglixia.top/执行结果-2019624204452.png" alt="执行结果-2019624204452"></p><h4 id="只需要定时任务类实现Job接口重写其execute方法即可。"><a href="#只需要定时任务类实现Job接口重写其execute方法即可。" class="headerlink" title="只需要定时任务类实现Job接口重写其execute方法即可。"></a>只需要定时任务类实现Job接口重写其execute方法即可。</h4><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>上面的方式通过实现SchedulingConfigurer接口的configureTasks方法使加载数据库中定时任务的配置以及放入调度器的这一系列操作在应用启动后就开始自动执行，并使用QuartzUtil工具类将一个Job接口的实现类放入调度器中并进行调度，其核心在于QuartzUtil这个工具类。<br>后面的文章会将一个普通类变成一个定时调度的任务、以及通过界面管理调度器、触发器、任务等信息，包括不重启添加任务、暂停任务、恢复任务以及删除任务的方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本文内容&quot;&gt;&lt;a href=&quot;#本文内容&quot; class=&quot;headerlink&quot; title=&quot;本文内容&quot;&gt;&lt;/a&gt;本文内容&lt;/h2&gt;&lt;p&gt;本文记录从数据库中加载定时任务的配置并运行的过程。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之相关概念整理</title>
    <link href="https://www.wanglixia.top/quartz.html"/>
    <id>https://www.wanglixia.top/quartz.html</id>
    <published>2019-06-22T15:05:03.000Z</published>
    <updated>2019-07-18T14:43:32.120Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Quartz三个核心概念"><a href="#Quartz三个核心概念" class="headerlink" title="Quartz三个核心概念"></a>Quartz三个核心概念</h3><ul><li>调度器：Scheduler</li><li>任务：Job</li><li>触发器：Trigger<h3 id="Quartz体系结构"><a href="#Quartz体系结构" class="headerlink" title="Quartz体系结构"></a>Quartz体系结构</h3></li><li>JobDetail：包含任务的实现类以及类的信息；</li><li>Trigger：决定任务什么时候被调用；分为SimpleTrigger和CronTrigger（常用）；</li><li>scheduler：定时、周期地执行JobDetail的信息<h4 id="Quartz重要组成"><a href="#Quartz重要组成" class="headerlink" title="Quartz重要组成"></a>Quartz重要组成</h4></li><li>Job： 接口，只有一个参数；</li><li>JobDetail：Job的实现类；</li><li>JobBuilder：创建JobDetail的实例；</li><li>JobStore：保存Job数据；（保存到内存中、数据库中）；</li><li>Trigger：</li><li>TreadPool：</li><li>TriggerBuilder：</li><li>Scheduler：调度器；</li><li>Calender：一个Trigger可以和多个Calender关联，以排除或者包含某些时间点</li><li>监听器：JobListener、TriggerListener、SchedulerListener；<a id="more"></a><h3 id="代码示例（一）"><a href="#代码示例（一）" class="headerlink" title="代码示例（一）"></a>代码示例（一）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzJobInit</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(QuartzJobInit.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        run(format);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String format)</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">        System.out.println(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span> + format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/22 23:43</span></span><br><span class="line"><span class="comment"> * @作者: wanglixia</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class).withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>).build();</span><br><span class="line">        <span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger().withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br><span class="line">        <span class="comment">// 创建Scheduler实例，</span></span><br><span class="line">        StdSchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</span><br><span class="line">        Scheduler scheduler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = factory.getScheduler();</span><br><span class="line">            scheduler.start();</span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">            String format = sf.format(date);</span><br><span class="line">            System.out.println(<span class="string">"QuartzJobInit.main"</span> + format);</span><br><span class="line"><span class="comment">//            LOGGER.info("QuartzJobInit.main", format);</span></span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Job-接口的实现"><a href="#Job-接口的实现" class="headerlink" title="Job 接口的实现"></a>Job 接口的实现</h3><ul><li>Job接口中只有一个execute方法，然后在其中写业务逻辑；<ul><li>生命周期：每次调度器Scheduler在执行job时，会在调用execute方法之前创建一个新的job实例；调用完成后，关联的job对象实例会被释放，释放的实例会被垃圾回收机制回收。</li></ul></li><li>JobDetail为Job实例提供了许多设置属性，以及JobDataMap成员变量属性，用来存储特定Job实例的状态信息，调度器需要借助JobDetail对象来添加Job实例。重要属性如下：<ul><li>name</li><li>group 任务所在组</li><li>jobClass 任务实现类</li><li>jobDataMap </li></ul></li></ul><h3 id="JobExecutionContext"><a href="#JobExecutionContext" class="headerlink" title="JobExecutionContext"></a>JobExecutionContext</h3><ul><li>当Scheduler调用一个Job时，就会将JobExecutionContext传递给Job的execute方法；</li><li>Job能通过JobExecutionContext对象访问到Quartz运行时候的环境以及Job本身的明细数据。</li></ul><h3 id="JobDataMap"><a href="#JobDataMap" class="headerlink" title="JobDataMap"></a>JobDataMap</h3><ul><li>在进行任务调度时JobDataMap存储在JobExecutionContext中，非常方便获取；</li><li>JobDataMap可以用来装载任何可序列化的数据对象，当job实例对象被执行时这些参数对象会传递给它；</li><li>JobDataMap实现了JDK的Map接口，并且添加了一些非常方便的方法用来存取基本数据类型。<h4 id="JobDataMap获取方式："><a href="#JobDataMap获取方式：" class="headerlink" title="JobDataMap获取方式："></a>JobDataMap获取方式：</h4><h5 id="从Map中直接获取；"><a href="#从Map中直接获取；" class="headerlink" title="从Map中直接获取；"></a>从Map中直接获取；</h5></li><li>方式一：JobDataMap</li></ul><p>添加数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class)</span><br><span class="line">        .withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>)</span><br><span class="line">        <span class="comment">// 传参</span></span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myJob"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"FloatJobValue"</span>, <span class="number">3.14F</span>)</span><br><span class="line">        .build();</span><br><span class="line"><span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">        .withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myTrigger"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"DoubleTriggerValue"</span>, <span class="number">2.0</span>D)</span><br><span class="line">        .startNow()</span><br><span class="line">        .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br></pre></td></tr></table></figure></p><p>获取数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">JobKey key = context.getJobDetail().getKey();</span><br><span class="line">        System.out.println(<span class="string">"key============&gt;"</span> + key.getName()+<span class="string">":"</span> + key.getGroup());</span><br><span class="line">        TriggerKey triggerKey = context.getTrigger().getKey();</span><br><span class="line">        System.out.println(<span class="string">"triggerKey============&gt;"</span> + triggerKey.getName()+<span class="string">":"</span> + triggerKey.getGroup());</span><br><span class="line">        JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();</span><br><span class="line">        JobDataMap dataMap = context.getTrigger().getJobDataMap();</span><br><span class="line"></span><br><span class="line">        String message = jobDataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">float</span> floatJobValue = jobDataMap.getFloatValue(<span class="string">"FloatJobValue"</span>);</span><br><span class="line">        String triggerMsg = dataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">double</span> doubleJobValue = dataMap.getDoubleValue(<span class="string">"DoubleTriggerValue"</span>);</span><br></pre></td></tr></table></figure></p><ul><li>方式二：getMergedJobDataMap<ul><li>Trigger和JobDetail中有相同的key时，Trigger中的值就会覆盖掉JobDetail中的值。</li><li>Job实现类中添加setter方法对应JobDataMap的键值（Quartz框架默认的JobFactory实现类在初始化job实例对象时会自动调用这些setter方法）。</li><li>直接定义属性，添加getter和setter方法即可；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JobDataMap mergedJobDataMap = context.getMergedJobDataMap();</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="触发器-Trigger"><a href="#触发器-Trigger" class="headerlink" title="触发器 Trigger"></a>触发器 Trigger</h3><h4 id="重要的两个实现类"><a href="#重要的两个实现类" class="headerlink" title="重要的两个实现类"></a>重要的两个实现类</h4><ul><li>CronTriggerImpl<ul><li>基于日历的作业调度器，而不是像SimpleTrigger那样精确指定间隔时间，比SimpleTrigger更常用；</li><li>CRON表达式：L可以和W一起使用；周字段的英文字母不区分大小写；</li></ul></li><li>SimpleTriggerImpl<ul><li>在一个指定时间段内执行一次作业任务；或者在指定时间间隔内多次执行作业任务；</li><li>重复次数可以为0，正整数或是SimpleTrigger.REPEAT_INDEFINITELY常量值。</li><li>重复时间间隔必须是0或者长整数；</li><li>一旦制定了endAt，那么它就会覆盖重复次数参数的效果。endAt优先于withRepeatCount；<h4 id="重要属性"><a href="#重要属性" class="headerlink" title="重要属性"></a>重要属性</h4></li></ul></li><li>JobKey：job实例的标识，触发器被触发时，该jobkey指定的实例会被触发执行；</li><li>StartTime：触发器首次被触发的时间；类型java.util.Date；</li><li>EndTime：触发器不再被触发的时间；类型java.util.Date；</li></ul><h3 id="调度器Scheduler"><a href="#调度器Scheduler" class="headerlink" title="调度器Scheduler"></a>调度器Scheduler</h3><h4 id="Scheduler-工厂模式"><a href="#Scheduler-工厂模式" class="headerlink" title="Scheduler-工厂模式"></a>Scheduler-工厂模式</h4><ul><li>SchedulerFactory创建的；<ul><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li></ul></li><li>DirectSchedulerFactory；</li></ul></li></ul><h4 id="主要函数"><a href="#主要函数" class="headerlink" title="主要函数"></a>主要函数</h4><ul><li>Date scheduleJob(JobDetail jobDetail, Trigger trigger);绑定jobDetail和trigger注册进scheduler中；返回最近一次即将执行的时间；</li><li>void start(); // 启动</li><li>void standby();// 挂起，挂起后可通过start恢复</li><li>void shutdown();// 关闭，不能恢复执行，强行恢复报出异常<ul><li>shutdown(true):// 等待所有正在执行的job执行完毕之后，再关闭scheduler；</li><li>shutdown(false):// 表示直接关闭scheduler</li></ul></li></ul><h3 id="quartz-properties"><a href="#quartz-properties" class="headerlink" title="quartz.properties"></a>quartz.properties</h3><ul><li>文档的位置及加载顺序；优先读取工程中自定义的，没有的话去读quartz中的文件；</li><li>组成部分<ul><li>调度器属性<ul><li>org.quartz.scheduler.instanceName：用来区分特定的调度器实例，可以按照功能用途来给调度器起名；</li><li>org.quartz.scheduler.instanceId：和前者一样，也允许任何字符串，但这个值必须在所有调度器实例中是唯一的，尤其是在一个集群当中，作为集群的唯一key。如果想让Quartz生成这个值的话，可以设置为AUTO;</li></ul></li><li>线程池属性<ul><li>threadCount：指定线程数，至少为1；</li><li>threadPriority：线程的优先级；</li><li>org.quartz.threadPool.class：线程池的实现类；</li></ul></li><li>作业存储设置<ul><li>描述了在调度器实例的生命周期中，Job和Trigger的信息是如何被存储的；</li></ul></li><li>插件配置<ul><li>满足特定需求用到的Quartz插件的配置。</li></ul></li></ul></li></ul><p>详细配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># Default Properties file for use by StdSchedulerFactory</span><br><span class="line"># to create a Quartz Scheduler Instance, if a different</span><br><span class="line"># properties file is not explicitly specified.</span><br><span class="line">#</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName: DefaultQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid:AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export: false</span><br><span class="line">org.quartz.scheduler.rmi.proxy: false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction: false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure ThreadPool 线程池属性  </span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount: 10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority: 5</span><br><span class="line">#设置SimpleThreadPool的一些属性</span><br><span class="line">#设置是否为守护线程</span><br><span class="line">#org.quartz.threadpool.makethreadsdaemons = false</span><br><span class="line">#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true</span><br><span class="line">#org.quartz.threadpool.threadsinheritgroupofinitializingthread=false</span><br><span class="line">#线程前缀默认值是：[Scheduler Name]_Worker</span><br><span class="line">#org.quartz.threadpool.threadnameprefix=swhJobThead;</span><br><span class="line"># 配置全局监听(TriggerListener,JobListener) 则应用程序可以接收和执行 预定的事件通知</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global TriggerListener 配置全局的Trigger监听器</span><br><span class="line"># MyTriggerListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.triggerListener.NAME.class = com.swh.MyTriggerListenerClass</span><br><span class="line">#org.quartz.triggerListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.triggerListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global JobListener 配置全局的Job监听器</span><br><span class="line"># MyJobListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.jobListener.NAME.class = com.swh.MyJobListenerClass</span><br><span class="line">#org.quartz.jobListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.jobListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold: 60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件  </span><br><span class="line">#org.quartz.plugin.NAME.class = com.swh.MyPluginClass</span><br><span class="line">#org.quartz.plugin.NAME.propName = propValue</span><br><span class="line">#org.quartz.plugin.NAME.prop2Name = prop2Value</span><br><span class="line">#配置trigger执行历史日志（可以看到类的文档和参数列表）</span><br><span class="line">org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage = Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage = Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;  </span><br><span class="line">#配置job调度插件  quartz_jobs(jobs and triggers内容)的XML文档  </span><br><span class="line">#加载 Job 和 Trigger 信息的类   （1.8之前用：org.quartz.plugins.xml.JobInitializationPlugin）</span><br><span class="line">org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin</span><br><span class="line">#指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_jobs.xml</span><br><span class="line">org.quartz.plugin.jobInitializer.fileNames = my_quartz_job2.xml  </span><br><span class="line">#org.quartz.plugin.jobInitializer.overWriteExistingJobs = false  </span><br><span class="line">org.quartz.plugin.jobInitializer.failOnFileNotFound = true  </span><br><span class="line">#自动扫描任务单并发现改动的时间间隔,单位为秒</span><br><span class="line">org.quartz.plugin.jobInitializer.scanInterval = 10</span><br><span class="line">#覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况</span><br><span class="line">org.quartz.plugin.jobInitializer.wrapInUserTransaction = false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Sample configuration of ShutdownHookPlugin  ShutdownHookPlugin插件的配置样例</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.plugin.shutdownhook.class = \org.quartz.plugins.management.ShutdownHookPlugin</span><br><span class="line">#org.quartz.plugin.shutdownhook.cleanShutdown = true</span><br><span class="line">#</span><br><span class="line"># Configure RMI Settings 远程服务调用配置</span><br><span class="line">#</span><br><span class="line">#如果你想quartz-scheduler出口本身通过RMI作为服务器，然后设置“出口”标志true(默认值为false)。</span><br><span class="line">#org.quartz.scheduler.rmi.export = false</span><br><span class="line">#主机上rmi注册表(默认值localhost)</span><br><span class="line">#org.quartz.scheduler.rmi.registryhost = localhost</span><br><span class="line">#注册监听端口号（默认值1099）</span><br><span class="line">#org.quartz.scheduler.rmi.registryport = 1099</span><br><span class="line">#创建rmi注册，false/never：如果你已经有一个在运行或不想进行创建注册</span><br><span class="line"># true/as_needed:第一次尝试使用现有的注册，然后再回来进行创建</span><br><span class="line"># always:先进行创建一个注册，然后再使用回来使用注册</span><br><span class="line">#org.quartz.scheduler.rmi.createregistry = never</span><br><span class="line">#Quartz Scheduler服务端端口，默认是随机分配RMI注册表</span><br><span class="line">#org.quartz.scheduler.rmi.serverport = 1098</span><br><span class="line">#true:链接远程服务调度(客户端),这个也要指定registryhost和registryport，默认为false</span><br><span class="line"># 如果export和proxy同时指定为true，则export的设置将被忽略</span><br><span class="line">#org.quartz.scheduler.rmi.proxy = false</span><br></pre></td></tr></table></figure></p><h3 id="基于Maven的SpringMvc工程整合Quartz"><a href="#基于Maven的SpringMvc工程整合Quartz" class="headerlink" title="基于Maven的SpringMvc工程整合Quartz"></a>基于Maven的SpringMvc工程整合Quartz</h3><h4 id="使用Quartz配置作业"><a href="#使用Quartz配置作业" class="headerlink" title="使用Quartz配置作业"></a>使用Quartz配置作业</h4><ul><li>MethodInvokingJobDetailFactoryBean；</li><li>JobDetailFactoryBean：比较灵活，支持给作业传递数据；</li></ul><h3 id="Quartz相关文档"><a href="#Quartz相关文档" class="headerlink" title="Quartz相关文档"></a>Quartz相关文档</h3><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/</a></li><li>表结构下载地址：快速下载：链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a> 提取码：zqe0 </li></ul><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>本文整理自：慕课网教程<br>Java定时任务调度工具详解之Quartz篇:<a href="https://www.imooc.com/learn/846" target="_blank" rel="noopener">https://www.imooc.com/learn/846</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Quartz三个核心概念&quot;&gt;&lt;a href=&quot;#Quartz三个核心概念&quot; class=&quot;headerlink&quot; title=&quot;Quartz三个核心概念&quot;&gt;&lt;/a&gt;Quartz三个核心概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;调度器：Scheduler&lt;/li&gt;
&lt;li&gt;任务：Job&lt;/li&gt;
&lt;li&gt;触发器：Trigger&lt;h3 id=&quot;Quartz体系结构&quot;&gt;&lt;a href=&quot;#Quartz体系结构&quot; class=&quot;headerlink&quot; title=&quot;Quartz体系结构&quot;&gt;&lt;/a&gt;Quartz体系结构&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;JobDetail：包含任务的实现类以及类的信息；&lt;/li&gt;
&lt;li&gt;Trigger：决定任务什么时候被调用；分为SimpleTrigger和CronTrigger（常用）；&lt;/li&gt;
&lt;li&gt;scheduler：定时、周期地执行JobDetail的信息&lt;h4 id=&quot;Quartz重要组成&quot;&gt;&lt;a href=&quot;#Quartz重要组成&quot; class=&quot;headerlink&quot; title=&quot;Quartz重要组成&quot;&gt;&lt;/a&gt;Quartz重要组成&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;Job： 接口，只有一个参数；&lt;/li&gt;
&lt;li&gt;JobDetail：Job的实现类；&lt;/li&gt;
&lt;li&gt;JobBuilder：创建JobDetail的实例；&lt;/li&gt;
&lt;li&gt;JobStore：保存Job数据；（保存到内存中、数据库中）；&lt;/li&gt;
&lt;li&gt;Trigger：&lt;/li&gt;
&lt;li&gt;TreadPool：&lt;/li&gt;
&lt;li&gt;TriggerBuilder：&lt;/li&gt;
&lt;li&gt;Scheduler：调度器；&lt;/li&gt;
&lt;li&gt;Calender：一个Trigger可以和多个Calender关联，以排除或者包含某些时间点&lt;/li&gt;
&lt;li&gt;监听器：JobListener、TriggerListener、SchedulerListener；
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>Idea常用插件整理</title>
    <link href="https://www.wanglixia.top/Idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86.html"/>
    <id>https://www.wanglixia.top/Idea常用插件整理.html</id>
    <published>2019-05-11T03:22:21.000Z</published>
    <updated>2019-05-11T03:22:35.327Z</updated>
    
    <content type="html"><![CDATA[<h3 id="idea好用的插件"><a href="#idea好用的插件" class="headerlink" title="idea好用的插件"></a>idea好用的插件</h3><p>BashSupport、<br>.ignore、<br>Lombok、<br>Jrebel、<br>Database Navigator、<br>CSV Plugin、<br>Vue.js、<br>FindBugs-IDEA、<br>GsonFormat、<br>CMD Support、<br>Alibaba Java Coding Guidelines、<br>PlantUML integration、<br>Mongo Plugin、<br>YAML/Ansible support、<br>Git Flow Integration、<br>Swagger、<br>GitToolBox、<br>WakaTime、<br>Translation、<br>Free MyBatis plugin、<br>GenerateSerialVersionUID、<br>JavaDoc、<br>JUnitGenerator V2.​0、<br>nginx Support、<br>Jenkins Control Plugin、<br>QAPlug、QAPlug-FindBugs、<br>Bootstrap、<br>SQL Query Plugin、<br>SoapUI IntelliJ Plugin、<br>Sql Generator、<br>Jira Browser</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;idea好用的插件&quot;&gt;&lt;a href=&quot;#idea好用的插件&quot; class=&quot;headerlink&quot; title=&quot;idea好用的插件&quot;&gt;&lt;/a&gt;idea好用的插件&lt;/h3&gt;&lt;p&gt;BashSupport、&lt;br&gt;.ignore、&lt;br&gt;Lombok、&lt;br&gt;Jre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（十）注解方式配置Quartz定时器</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B09.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记9.html</id>
    <published>2019-04-30T16:00:00.000Z</published>
    <updated>2019-05-11T03:41:59.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quartz定时器介紹"><a href="#Quartz定时器介紹" class="headerlink" title="Quartz定时器介紹"></a>Quartz定时器介紹</h2><a id="more"></a><h2 id="Quartz定时器环境配置"><a href="#Quartz定时器环境配置" class="headerlink" title="Quartz定时器环境配置"></a>Quartz定时器环境配置</h2><ul><li>Quartz 2.3.0</li></ul><h3 id="pom-xml-添加依赖"><a href="#pom-xml-添加依赖" class="headerlink" title="pom.xml 添加依赖"></a>pom.xml 添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定时器调度类"><a href="#定时器调度类" class="headerlink" title="定时器调度类"></a>定时器调度类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainSchedule</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器MainSchedule创建成功-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/1 * *  * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度start-------------------------"</span>);</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度end-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="spring-quartz-xml配置文件添加"><a href="#spring-quartz-xml配置文件添加" class="headerlink" title="spring-quartz.xml配置文件添加"></a>spring-quartz.xml配置文件添加</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.platform.quartz.schedule"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启@Scheduled注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">task:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ssm项目从数据库中动态获取定时器配置；"><a href="#ssm项目从数据库中动态获取定时器配置；" class="headerlink" title="ssm项目从数据库中动态获取定时器配置；"></a>ssm项目从数据库中动态获取定时器配置；</h2><h3 id="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"><a href="#定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）" class="headerlink" title="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"></a>定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Quartz定时器介紹&quot;&gt;&lt;a href=&quot;#Quartz定时器介紹&quot; class=&quot;headerlink&quot; title=&quot;Quartz定时器介紹&quot;&gt;&lt;/a&gt;Quartz定时器介紹&lt;/h2&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工具" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="quartz" scheme="https://www.wanglixia.top/tags/quartz/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap-table使用</title>
    <link href="https://www.wanglixia.top/bootstrap-table-export%E4%BD%BF%E7%94%A8.html"/>
    <id>https://www.wanglixia.top/bootstrap-table-export使用.html</id>
    <published>2019-03-23T04:22:46.000Z</published>
    <updated>2019-05-11T03:41:08.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Bootstrap-Table导出插件bootstrap-table-export使用方式"><a href="#Bootstrap-Table导出插件bootstrap-table-export使用方式" class="headerlink" title="Bootstrap-Table导出插件bootstrap-table-export使用方式"></a>Bootstrap-Table导出插件bootstrap-table-export使用方式</h2><ul><li>一、Bootstrap-table-export插件使用</li><li>二、Bootstrap-table 表头和表格错位问题</li><li>三、表格添加自定义按钮</li><li>四、Bootstrap中tab页及插件使用<a id="more"></a></li></ul><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><h4 id="一、Bootstrap-table-export插件使用"><a href="#一、Bootstrap-table-export插件使用" class="headerlink" title="一、Bootstrap-table-export插件使用"></a>一、Bootstrap-table-export插件使用</h4><p>Bootstrap-table-export插件下载：<a href="https://bootstrap-table.com/docs" target="_blank" rel="noopener">https://bootstrap-table.com/docs</a>；<br>在该文档的extensions目录下，可以看到可以使用的依赖插件列表，其中就包括Export文件。<br><img src="http://img.wanglixia.top/bootstrap-table-1-2019323123635.png" alt="bootstrap-table-1-2019323123635"></p><p>导出支持以下格式：<br><code>[‘json’, ‘xml’, ‘png’, ‘csv’, ‘txt’, ‘sql’, ‘doc’, ‘excel’,’xlsx’, ‘pdf’]</code><br>默认支持，其他的需要单独引入插件：<br><code>[‘json’, ‘xml’, ‘csv’, ‘txt’, ‘sql’, ‘excel’]</code></p><ol><li>找到<code>dist\extensions\export\bootstrap-table-export.min.js</code>文件，引入项目中；</li><li>使用该插件还需要引入以下依赖：<ul><li>tableExport.jquery.plugin：下载地址：<a href="https://github.com/hhurz/tableExport.jquery.plugin" target="_blank" rel="noopener">https://github.com/hhurz/tableExport.jquery.plugin</a>；<ul><li>把<code>tableExport.min.js</code>文件引入项目中；</li></ul></li><li>解决bootstraptable导出excel提示文件名跟格式不匹配问题，还需要引入上面下载的项目中的<ul><li><code>\libs\FileSaver\FileSaver.min.js</code>；</li></ul></li><li>jquery.base64.js：下载地址：<a href="http://plugins.jquery.com/base64/" target="_blank" rel="noopener">http://plugins.jquery.com/base64/</a>，把<code>jquery.base64.js</code>文件引入项目中；</li><li>xlsx.full.min.js：支持的下载格式，如<code> [‘json’, ‘xml’, ‘csv’, ‘txt’, ‘sql’, ‘excel’]</code>，下载地址：<a href="https://github.com/handevelop/js-xlsx-master" target="_blank" rel="noopener">https://github.com/handevelop/js-xlsx-master</a>;</li></ul></li></ol><blockquote><p>TableExport插件依赖于jQuery（1.2.1+），FileSaver.js。为了支持.xlsx（Office Open XML SpreadsheetML Format）格式，你必须在 FileSaver.js 和 TableExport.js文件之前引入xlsx-core.js文件。为了使旧的浏览器（Firefox &lt; 20, Opera &lt; 15, Safari &lt; 6）支持.xlsx，需要在 FileSaver.js 文件之前引入 Blob.js文件。</p></blockquote><h4 id="二、Bootstrap-table-表头和表格错位问题"><a href="#二、Bootstrap-table-表头和表格错位问题" class="headerlink" title="二、Bootstrap-table 表头和表格错位问题"></a>二、Bootstrap-table 表头和表格错位问题</h4><p>在bootstrap-table.js源码中找到以下位置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$tableHeader.show();</span><br><span class="line"><span class="comment">// 注释掉下面两行 取消表头初始化，解决表头和内容不对齐问题</span></span><br><span class="line"><span class="comment">// this.resetHeader();</span></span><br><span class="line"><span class="comment">// padding += this.$header.outerHeight(true);</span></span><br></pre></td></tr></table></figure><h4 id="三、-表格添加自定义按钮"><a href="#三、-表格添加自定义按钮" class="headerlink" title="三、 表格添加自定义按钮"></a>三、 表格添加自定义按钮</h4><p>如下：</p><p><img src="http://img.wanglixia.top/bootstrap-table-2-2019323233029.png" alt="bootstrap-table-2-2019323233029"></p><p>第一步：<code>table</code> 表格上方添加一个div，里面自定义按钮，为了和自带的按钮放到一排，需要设置该div的id为toolbar：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"toolbar"</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">id</span>=<span class="string">"btn_add"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-plus"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            新增</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"btn_del"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            批量删除</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span> <span class="attr">id</span>=<span class="string">"btn_import"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-import"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            批量导入</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn_search"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            查询</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二步：使用js初始化表格时，需要添加设置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">toolbar: <span class="string">"#toolbar"</span>,             <span class="comment">//指定工具栏</span></span><br><span class="line">toolbarAlign: <span class="string">"left"</span>,            <span class="comment">//工具栏对齐方式</span></span><br></pre></td></tr></table></figure><h4 id="四、Bootstrap中tab页及插件使用"><a href="#四、Bootstrap中tab页及插件使用" class="headerlink" title="四、Bootstrap中tab页及插件使用"></a>四、Bootstrap中tab页及插件使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $.extend($, &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加标签页</span></span><br><span class="line"><span class="comment">         * @param tabItem &#123;id: '标签页id', name: '标签页name', url: 'iframe要加载的url',closable 是否可关闭&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        addTab: <span class="function"><span class="keyword">function</span> (<span class="params">tabItem</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> theOriginalId = tabItem.id;</span><br><span class="line">            <span class="keyword">var</span> newId = theOriginalId.replace(<span class="regexp">/\./g</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="keyword">var</span> tabId = <span class="string">'tab_title_'</span> + newId;</span><br><span class="line">            <span class="keyword">var</span> panelId = <span class="string">'tab_panel_'</span> + newId;</span><br><span class="line">            <span class="keyword">var</span> iframeId = <span class="string">'tab_iframe_'</span> + newId;</span><br><span class="line">            <span class="keyword">if</span> (!$(<span class="string">'#'</span> + tabId)[<span class="number">0</span>]) &#123;</span><br><span class="line">                $(<span class="string">"li[id^=tab_title_]"</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .tab-content'</span>).children($(<span class="string">"div[id^=tab_panel_]"</span>)).removeClass(<span class="string">'active'</span>);</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .nav.nav-tabs'</span>).append(</span><br><span class="line">                    $(<span class="string">'&lt;li&gt;'</span>).attr(&#123;<span class="string">'id'</span>: tabId&#125;).addClass(<span class="string">'active'</span>)</span><br><span class="line">                        .append($(<span class="string">'&lt;a&gt;'</span>).attr(&#123;<span class="string">'href'</span>: <span class="string">'#'</span> + panelId, <span class="string">'data-toggle'</span>: <span class="string">'tab'</span>&#125;)</span><br><span class="line">                            .append($(<span class="string">'&lt;span&gt;'</span>).text(tabItem.name))</span><br><span class="line">                            .append(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">if</span> (tabItem.closable) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> $(<span class="string">'&lt;i&gt;'</span>).addClass(<span class="string">'glyphicon glyphicon-remove small'</span>).attr(&#123;<span class="string">'tabclose'</span>: tabId&#125;)</span><br><span class="line">                                        .css(&#123;<span class="attr">position</span>: <span class="string">'absolute'</span>, <span class="attr">right</span>: <span class="string">'4px'</span>, <span class="attr">top</span>: <span class="string">'4px'</span>, <span class="string">'cursor'</span>: <span class="string">'pointer'</span>&#125;)</span><br><span class="line">                                        .on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                            $.closeTab(tabId);</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;))</span><br><span class="line">                )</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .tab-content'</span>).append(</span><br><span class="line">                    $(<span class="string">'&lt;div&gt;'</span>).attr(&#123;<span class="string">'role'</span>: <span class="string">'tabpanel'</span>, <span class="string">'id'</span>: panelId&#125;).addClass(<span class="string">'tab-pane active'</span>)</span><br><span class="line">                        .append($(<span class="string">'&lt;iframe&gt;'</span>).attr(&#123;<span class="string">'id'</span>: iframeId, <span class="attr">frameborder</span>: <span class="string">'0'</span>, <span class="string">'src'</span>: tabItem.url&#125;)</span><br><span class="line">                            .css(&#123;<span class="string">'overflow-x'</span>: <span class="string">'hidden'</span>, <span class="string">'overflow-y'</span>: <span class="string">'hidden'</span>, <span class="string">'width'</span>: <span class="string">'100%'</span>, <span class="string">'height'</span>: <span class="string">'100%'</span>&#125;)</span><br><span class="line">                            .on(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                $(<span class="keyword">this</span>).parent().height($.ContentHeight());</span><br><span class="line">                            &#125;))</span><br><span class="line">                )</span><br><span class="line">                $(<span class="string">'#'</span> + tabId).children(<span class="string">'a[data-toggle=tab]'</span>).tab(<span class="string">'show'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        closeTab: <span class="function"><span class="keyword">function</span> (<span class="params">tabId</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> closeId = tabId;</span><br><span class="line">            <span class="keyword">var</span> panelId = <span class="string">'tab_panel_'</span> + closeId.substring(<span class="number">10</span>);</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="string">'#'</span> + panelId).hasClass(<span class="string">'active'</span>)) &#123;</span><br><span class="line">                $(<span class="string">'#'</span> + closeId).prev().children(<span class="string">'a'</span>).tab(<span class="string">'show'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">"#"</span> + closeId).remove();</span><br><span class="line">            $(<span class="string">"#"</span> + panelId).remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>使用：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$.addTab(&#123;</span><br><span class="line">    id: <span class="string">'bootstrap_tab_id_'</span>,</span><br><span class="line">    name: <span class="string">'标签页名称'</span>,</span><br><span class="line">    url: <span class="string">'标签页加载的url'</span>,</span><br><span class="line">    closable: <span class="literal">true</span>  <span class="comment">// 是否可关闭</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="相关文档："><a href="#相关文档：" class="headerlink" title="相关文档："></a>相关文档：</h2><ul><li>bootstrap-table文档和相关插件：<a href="https://bootstrap-table.com/docs/extensions/export/" target="_blank" rel="noopener">https://bootstrap-table.com/docs/extensions/export/</a></li><li>Bootstrap可关闭标签页，主要参考bootstrap-closable-tab：<a href="https://github.com/zyqwst/bootstrap-closable-tab" target="_blank" rel="noopener">https://github.com/zyqwst/bootstrap-closable-tab</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Bootstrap-Table导出插件bootstrap-table-export使用方式&quot;&gt;&lt;a href=&quot;#Bootstrap-Table导出插件bootstrap-table-export使用方式&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap-Table导出插件bootstrap-table-export使用方式&quot;&gt;&lt;/a&gt;Bootstrap-Table导出插件bootstrap-table-export使用方式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一、Bootstrap-table-export插件使用&lt;/li&gt;
&lt;li&gt;二、Bootstrap-table 表头和表格错位问题&lt;/li&gt;
&lt;li&gt;三、表格添加自定义按钮&lt;/li&gt;
&lt;li&gt;四、Bootstrap中tab页及插件使用
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="bootstrap-table-export" scheme="https://www.wanglixia.top/tags/bootstrap-table-export/"/>
    
  </entry>
  
  <entry>
    <title>springmvc使用常见问题</title>
    <link href="https://www.wanglixia.top/springmvc%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html"/>
    <id>https://www.wanglixia.top/springmvc使用常见问题.html</id>
    <published>2019-03-19T15:00:16.000Z</published>
    <updated>2019-05-11T03:56:40.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在SpringMvc中使用@PathVariable有句号或小数点时，会导致最后一个小数点以及后面的值丢失；<br>处理办法，在{id}中添加<code>:.+</code>，在@RequestMapping的value中使用SpEL来表示，value中的{id}换成{id:.+} ：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/queryById/&#123;id:.+&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">queryById</span><span class="params">(@PathVariable String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    SysMenu sysMenu = sysMenuService.queryById(id);</span><br><span class="line">    <span class="keyword">return</span> Message.success(sysMenu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_35852328/article/details/81204316" target="_blank" rel="noopener">SpringMvc的@PathVariable有句号或小数点时，取值不全解决办法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在SpringMvc中使用@PathVariable有句号或小数点时，会导致最后一个小数点以及后面的值丢失；&lt;br&gt;处理办法，在{id}中添
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="springmvc" scheme="https://www.wanglixia.top/tags/springmvc/"/>
    
  </entry>
  
  <entry>
    <title>Nosql使用笔记-windows下安装MongoDB</title>
    <link href="https://www.wanglixia.top/nosql-mongodb.html"/>
    <id>https://www.wanglixia.top/nosql-mongodb.html</id>
    <published>2019-03-13T13:07:53.000Z</published>
    <updated>2019-07-03T13:58:36.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载mongodb解压缩版并解压，目录D:\DevTools\mongodb\;</li><li>上述目录下创建文件夹：data\,data目录下创建目录db和目录logs;</li><li><p>mongodb根目录下创建文件mongo.config，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dbpath=D:\DevTools\mongodb\data\db</span><br><span class="line"></span><br><span class="line">logpath=D:\DevTools\mongodb\data\logs\mongo.log</span><br></pre></td></tr></table></figure></li><li><p>打开命令行，进入到D:\DevTools\mongodb\bin\目录下，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --dbpath D:\DevTools\mongodb\data</span><br></pre></td></tr></table></figure></li><li><p>测试，在浏览器中输入：<a href="http://localhost:27017/；" target="_blank" rel="noopener">http://localhost:27017/；</a></p></li></ol><h2 id="配置windows服务"><a href="#配置windows服务" class="headerlink" title="配置windows服务"></a>配置windows服务</h2><ol><li>[管理员权限]命令行进入bin目录下，执行命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod.exe --config D:\DevTools\mongodb\mongo.config --install --serviceName <span class="string">"MongoDB"</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载mongodb解压缩版并解压，目录D:\DevTools\mongodb\;&lt;/li&gt;
&lt;li&gt;上述目录下创建文件夹：dat
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="数据库" scheme="https://www.wanglixia.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NoSQL" scheme="https://www.wanglixia.top/tags/NoSQL/"/>
    
      <category term="nosql" scheme="https://www.wanglixia.top/tags/nosql/"/>
    
      <category term="mongodb" scheme="https://www.wanglixia.top/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（九）配置Activiti</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B08.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记8.html</id>
    <published>2019-03-13T05:38:09.000Z</published>
    <updated>2019-07-03T13:58:36.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工作流" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
      <category term="activiti" scheme="https://www.wanglixia.top/tags/activiti/"/>
    
  </entry>
  
  <entry>
    <title>linux安装jdk环境-CentOS</title>
    <link href="https://www.wanglixia.top/linux%E4%BD%BF%E7%94%A81.html"/>
    <id>https://www.wanglixia.top/linux使用1.html</id>
    <published>2019-03-12T12:15:53.000Z</published>
    <updated>2019-03-12T14:57:31.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CentOS系统下各文件夹的作用"><a href="#CentOS系统下各文件夹的作用" class="headerlink" title="CentOS系统下各文件夹的作用"></a>CentOS系统下各文件夹的作用</h3><ul><li>/： 根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中</li><li>/bin:/usr/bin: 可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</li><li>/boot： 放置linux系统启动时用到的一些文件。<ul><li>/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可</li></ul></li><li>/dev： 存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。</li><li>/etc： 系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。注：/etc/X11存放与x windows有关的设置。</li><li>/home： 系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据</li><li>/lib:/usr/lib:<ul><li>/usr/local/lib： 系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。</li></ul></li><li>/lost+fount： 系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found</li><li>/mnt:/media： 光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。</li><li>/opt： 给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下</li><li>/proc： 此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等</li><li>/root： 系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。</li><li>/sbin:/usr/sbin:/usr/local/sbin： 放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</li><li>/tmp： 一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</li><li>/srv： 服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内</li><li>/usr： 应用程序存放目录，<ul><li>/usr/bin 存放应用程序， </li><li>/usr/share 存放共享数据，</li><li>/usr/lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。</li><li>/usr/local:存放软件升级包。</li><li>/usr/share/doc: 系统说明文件存放目录。</li><li>/usr/share/man: 程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间</li></ul></li><li>/var： 放置系统执行过程中经常变化的文件，如随时更改的日志文件 /var/log，/var/log/message： 所有的登录文件存放目录，/var/spool/mail： 邮件存放的目录， /var/run: 程序或服务启动</li></ul><h2 id="linux-Java开发常用命令"><a href="#linux-Java开发常用命令" class="headerlink" title="linux Java开发常用命令"></a>linux Java开发常用命令</h2><h3 id="安装开发工具包"><a href="#安装开发工具包" class="headerlink" title="安装开发工具包"></a>安装开发工具包</h3><p>英文系统安装： # yum -y groupinstall “Development tools”<br>中文系统安装： # yum -y groupinstall “开发工具”</p><h3 id="Linux安装jdk"><a href="#Linux安装jdk" class="headerlink" title="Linux安装jdk"></a>Linux安装jdk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看yum库中都有哪些jdk版本</span></span><br><span class="line">yum search java|grep jdk</span><br><span class="line"><span class="comment"># 选择指定的版本安装</span></span><br><span class="line">yum install java-1.8.0-openjdk</span><br><span class="line"><span class="comment"># 查看安装版本信息</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="comment">#######安装rz/sz命令#######</span></span><br><span class="line">yum install -y lrzsz</span><br><span class="line"></span><br><span class="line"><span class="comment">#######解压/压缩.tar.gz#######</span></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xvzf apache-tomcat-8.5.23.tar.gz</span><br><span class="line"><span class="comment">#压缩</span></span><br><span class="line">tar -zcvf 文件名.tar.gz 要压缩的文件/文件夹</span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line">tar -zcvf webfile.tar.gz webfile</span><br></pre></td></tr></table></figure><h3 id="安装netstat"><a href="#安装netstat" class="headerlink" title="安装netstat"></a>安装netstat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><h3 id="安装lsof命令"><a href="#安装lsof命令" class="headerlink" title="安装lsof命令"></a>安装lsof命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lsof</span><br></pre></td></tr></table></figure><h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><p>安装jdk，上传tomcat压缩包，并解压，然后：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">cd</span> /etc/</span><br><span class="line"><span class="comment"># 编辑profile文件：</span></span><br><span class="line">vi profile</span><br><span class="line"><span class="comment">###配置java环境变量</span></span><br><span class="line"><span class="comment">############################Java start##############################</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment">############################Java end################################</span></span><br><span class="line"><span class="comment">#保存之后，使用下面命令是环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line"><span class="built_in">cd</span> apache-tomcat-8.5.23/bin/</span><br><span class="line">sh startup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动日志</span></span><br><span class="line"><span class="built_in">cd</span> apache-tomcat-8.5.23/logs/</span><br><span class="line">cat catalina.out</span><br></pre></td></tr></table></figure></p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看ip地址</span></span><br><span class="line">ip addr</span><br><span class="line"><span class="comment"># 查看占用端口的进程</span></span><br><span class="line">netstat -lnp|grep 8080</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">lsof -i:8080</span><br><span class="line"><span class="comment"># 根据进程ID查看进程的具体信息</span></span><br><span class="line">ps axu|grep 2643 </span><br><span class="line"><span class="comment"># 列出所有端口</span></span><br><span class="line">netstat -ntlp</span><br><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ps -ef|grep nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 进程号</span><br><span class="line"></span><br><span class="line">killall -9 进程名字</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除文件或文件夹</span></span><br><span class="line"><span class="comment"># 删除目录</span></span><br><span class="line">rm /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># -r是递归的删除参数表中的目录及子目录</span></span><br><span class="line">rm -r /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># f是不提示用户，删除目录下的所有文件</span></span><br><span class="line">rm -rf /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># -i是交互模式</span></span><br><span class="line">rm -ir /home/<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装Nginx的yum源</span></span><br><span class="line">sudo yum install yum-utils</span><br><span class="line"><span class="comment">#在/etc/yum.repos.d/路径下创建文件nginx.repo</span></span><br></pre></td></tr></table></figure><h4 id="内容如下"><a href="#内容如下" class="headerlink" title="内容如下"></a>内容如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><h4 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> nginx-mainline</span><br></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><h4 id="查看nginx"><a href="#查看nginx" class="headerlink" title="查看nginx"></a>查看nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info nginx</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure><h4 id="修改配置，添加映射"><a href="#修改配置，添加映射" class="headerlink" title="修改配置，添加映射"></a>修改配置，添加映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d</span><br><span class="line"><span class="comment"># 修改default.conf</span></span><br><span class="line">vi default.conf</span><br></pre></td></tr></table></figure><h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CentOS系统下各文件夹的作用&quot;&gt;&lt;a href=&quot;#CentOS系统下各文件夹的作用&quot; class=&quot;headerlink&quot; title=&quot;CentOS系统下各文件夹的作用&quot;&gt;&lt;/a&gt;CentOS系统下各文件夹的作用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;/： 根目录，一
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="https://www.wanglixia.top/tags/java/"/>
    
      <category term="系统" scheme="https://www.wanglixia.top/tags/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="linux" scheme="https://www.wanglixia.top/tags/linux/"/>
    
      <category term="Linux" scheme="https://www.wanglixia.top/tags/Linux/"/>
    
      <category term="jdk" scheme="https://www.wanglixia.top/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（八）配置Swagger</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B07.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记7.html</id>
    <published>2019-03-11T14:07:53.000Z</published>
    <updated>2019-05-11T03:43:52.692Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Swagger 是一款RESTFUL接口的、基于YAML、JSON语言的文档在线自动生成、代码自动生成的工具。</p></blockquote><a id="more"></a><h2 id="Swagger介绍"><a href="#Swagger介绍" class="headerlink" title="Swagger介绍"></a>Swagger介绍</h2><p>官网介绍：最好的API是使用Swagger工具构建的。</p><blockquote><p>Swagger是一套围绕OpenAPI规范构建的开源工具，可以帮助您设计，构建，记录和使用REST API。<br>主要的Swagger工具包括：</p><ul><li>Swagger Editor - 基于浏览器的编辑器，在其中编写OpenAPI规范。</li><li>Swagger UI - 将OpenAPI规范呈现为交互式API文档。</li><li>Swagger Codegen - 从OpenAPI规范生成服务端和客户端库。</li></ul></blockquote><p>官网：<a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></p><p>官方文档：<a href="https://swagger.io/docs/specification/about/" target="_blank" rel="noopener">https://swagger.io/docs/specification/about/</a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>配置完成后的效果<br><img src="http://img.wanglixia.top/swagger-配置成功-2019511104721.png" alt="swagger-配置成功-2019511104721"></p><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>添加依赖：<code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- swagger --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mangofactory<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-springmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加SwaggerConfig.java文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.framework.config;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> Swagger2配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.weyoung.platform"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">systemApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select() <span class="comment">// 选择生成文档的路径</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.weyoung.platform"</span>))    <span class="comment">// 扫描com.weyoung.platform路径下的api文档</span></span><br><span class="line">                .paths(PathSelectors.any())      <span class="comment">// 扫描所有路径</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> Api文件的说明</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Param</span> []</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> springfox.documentation.service.ApiInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"Swagger配置"</span>) <span class="comment">//文档标题</span></span><br><span class="line">                .description(<span class="string">"SSM-NOTE项目的Swagger文档配置"</span>)    <span class="comment">// 文档描述</span></span><br><span class="line">                .termsOfServiceUrl(<span class="string">"https://www.wanglixia.top/"</span>)</span><br><span class="line">                .version(<span class="string">"v1.0.0"</span>)<span class="comment">// 版本号</span></span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RequestMappingInfoHandlerMapping <span class="title">requestMappingInfoHandlerMapping</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RequestMappingHandlerMapping();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将 springSwaggerConfig加载到spring容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将自定义的swagger配置类加载到spring容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.weyoung.framework.config.SwaggerConfig"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"swagger-ui.html"</span> <span class="attr">location</span>=<span class="string">"classpath:/META-INF/resources/"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/webjars"</span> <span class="attr">location</span>=<span class="string">"classpath:/META-INF/resources/webjars/"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>访问URL：<a href="http://localhost:8080/ssm-note/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/ssm-note/swagger-ui.html</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"获取用户组列表-分页"</span>, notes = <span class="string">"获取用户组列表-分页"</span>, response = SysGroup.class)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/queryList"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageInfo&lt;SysGroup&gt; <span class="title">querySysGroupList4Paging</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                    HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                    @RequestBody SysGroup sysGroup)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Page&lt;SysGroup&gt; page = <span class="keyword">new</span> Page&lt;&gt;(sysGroup.getOffset(), sysGroup.getLimit());</span><br><span class="line">    PageInfo&lt;SysGroup&gt; groupList = sysGroupService.queryUserList4Paging(page, sysGroup);</span><br><span class="line">    <span class="keyword">return</span> groupList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>点击页面出现的一项条目，看到<br><img src="http://img.wanglixia.top/swagger-条目详情-2019511104827.png" alt="swagger-条目详情-2019511104827"></p><p><img src="http://img.wanglixia.top/swagger-参数详情-2019511104957.png" alt="swagger-参数详情-2019511104957"></p><p>点击<code>Try It Out!</code>修改参数后点击<code>Exexute</code>，在下方查看返回结果。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Swagger 是一款RESTFUL接口的、基于YAML、JSON语言的文档在线自动生成、代码自动生成的工具。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工具" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="Swagger" scheme="https://www.wanglixia.top/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（七）配置Mybatis Generator</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B06.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记6.html</id>
    <published>2019-03-09T07:42:23.000Z</published>
    <updated>2019-05-11T04:36:19.257Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Mybatis-Generator"><a href="#什么是Mybatis-Generator" class="headerlink" title="什么是Mybatis Generator"></a>什么是Mybatis Generator</h2><p>&emsp;&emsp; MyBatis Generator（MBG）是MyBatis和iBATIS的代码生成器。能够为所有版本的MyBatis以及版本2.2.0之后的iBATIS版本生成代码。它将内省数据库表（或许多表），并将生成可用于访问表的工件。这减少了设置对象和配置文件以与数据库表交互的初始麻烦。</p><p>MyBatis Generator能够生成：</p><ul><li>与表结构匹配的Java POJO;</li><li>MyBatis/iBATIS兼容的SQL Map XML文件;</li><li>适用于MyBatis3.x Mapper基础结构的Dao接口;</li></ul><a id="more"></a><h2 id="怎么配置MBG"><a href="#怎么配置MBG" class="headerlink" title="怎么配置MBG"></a>怎么配置MBG</h2><p>本文中使用的工具是IDEA，使用Maven构建项目。</p><ul><li>IDE：IDEA；</li><li>构建工具：Maven；</li><li>项目结构：Spring、SpringMVC、Mybatis</li></ul><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis自动生成实体代码的插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 构建项目需要的信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>ssm-note<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 子项目可以引用的默认插件信息。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 。。。其他的一些配置。。。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意这个配置的结构在&lt;build&gt;&lt;/build&gt;中的位置，不然会不能引入插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG配置文件--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/config/mybatis-generator.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--dependencies依赖的组件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库驱动，你自己项目的数据库驱动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG生成器--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**注意：plugins中配置的结构，不是在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### mybatis-generator.xml</span><br><span class="line"></span><br><span class="line">在pom.xml中配置了这个文件的路径，```src/main/resources/config/mybatis-generator.xml``` ，创建```mybatis-generator.xml```文件，其内容以及详细内容如下：</span><br><span class="line">**因为我的jdbc.properties文件是在resources/config/jdbc.properties这个位置配置的，因此你需要修改成你自己的。**</span><br><span class="line">```xml</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!--数据库驱动--&gt;</span><br><span class="line">    &lt;properties resource=&quot;config/jdbc.properties&quot;/&gt;</span><br><span class="line">    &lt;!-- 在MBG工作的时候，需要额外加载的依赖包 location属性指明加载jar/zip包的全路径--&gt;</span><br><span class="line">    &lt;classPathEntry</span><br><span class="line">            location=&quot;C:\Users\Mr.wang\.m2\repository\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar&quot;/&gt;</span><br><span class="line">    &lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line">        &lt;!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；</span><br><span class="line">            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;autoDelimitKeywords&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;!-- 生成的Java文件的编码 --&gt;</span><br><span class="line">        &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot;/&gt;</span><br><span class="line">        &lt;!-- 格式化java代码 --&gt;</span><br><span class="line">        &lt;property name=&quot;javaFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultJavaFormatter&quot;/&gt;</span><br><span class="line">        &lt;!-- 格式化XML代码 --&gt;</span><br><span class="line">        &lt;property name=&quot;xmlFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultXmlFormatter&quot;/&gt;</span><br><span class="line">        &lt;!-- 配置是否生成注释 --&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line">        &lt;!--数据库链接地址账号密码--&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;$&#123;jdbc.mysql.driver&#125;&quot;</span><br><span class="line">                        connectionURL=&quot;$&#123;jdbc.mysql.url&#125;&quot;</span><br><span class="line">                        userId=&quot;$&#123;jdbc.mysql.username&#125;&quot;</span><br><span class="line">                        password=&quot;$&#123;jdbc.mysql.password&#125;&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line">        &lt;!-- java类型处理器</span><br><span class="line">            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；</span><br><span class="line">            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaTypeResolver type=&quot;org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line">        &lt;!-- java模型创建器，是必须要的元素</span><br><span class="line">            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类</span><br><span class="line">            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；</span><br><span class="line">            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成Model类存放位置--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.weyoung.generator.pojo&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;!--  for MyBatis3/MyBatis3Simple</span><br><span class="line">                自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- for MyBatis3 / MyBatis3Simple</span><br><span class="line">                是否创建一个不可变的类，如果为true，</span><br><span class="line">                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置一个根对象，</span><br><span class="line">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：</span><br><span class="line">                    1，属性名相同，类型相同，有相同的getter/setter方法；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;rootClass&quot; value=&quot;com._520it.mybatis.domain.BaseDomain&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!-- 生成SQL map的XML文件生成器，</span><br><span class="line">            注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），</span><br><span class="line">                或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置</span><br><span class="line">            targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成映射文件存放位置--&gt;</span><br><span class="line">        &lt;sqlMapGenerator</span><br><span class="line">                targetPackage=&quot;com.weyoung.generator.mappers&quot;</span><br><span class="line">                targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line">        &lt;!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口</span><br><span class="line">            targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：</span><br><span class="line">                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；</span><br><span class="line">                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；</span><br><span class="line">                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；</span><br><span class="line">            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;!--生成Dao类存放位置--&gt;</span><br><span class="line">        &lt;javaClientGenerator</span><br><span class="line">                type=&quot;XMLMAPPER&quot;</span><br><span class="line">                targetPackage=&quot;com.weyoung.generator.dao&quot;</span><br><span class="line">                targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line">        &lt;!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素</span><br><span class="line">            选择的table会生成一下文件：</span><br><span class="line">            1，SQL map文件</span><br><span class="line">            2，生成一个主键类；</span><br><span class="line">            3，除了BLOB和主键的其他字段的类；</span><br><span class="line">            4，包含BLOB的类；</span><br><span class="line">            5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；</span><br><span class="line">            6，Mapper接口（可选）</span><br><span class="line"></span><br><span class="line">            tableName（必要）：要生成对象的表名；</span><br><span class="line">            注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会</span><br><span class="line">                根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：</span><br><span class="line">                1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；</span><br><span class="line">                2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；</span><br><span class="line">                3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；</span><br><span class="line">                4，否则，使用指定的大小写格式查询；</span><br><span class="line">            另外的，如果在创建表的时候，使用的&quot;&quot;把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；</span><br><span class="line">            这个时候，请设置delimitIdentifiers=&quot;true&quot;即可保留大小写格式；</span><br><span class="line"></span><br><span class="line">            可选：</span><br><span class="line">            1，schema：数据库的schema；</span><br><span class="line">            2，catalog：数据库的catalog；</span><br><span class="line">            3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName</span><br><span class="line">            4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；</span><br><span class="line">            5，enableInsert（默认true）：指定是否生成insert语句；</span><br><span class="line">            6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；</span><br><span class="line">            7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；</span><br><span class="line">            8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；</span><br><span class="line">            9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；</span><br><span class="line">            10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；</span><br><span class="line">            11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；</span><br><span class="line">            12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；</span><br><span class="line">            13，modelType：参考context元素的defaultModelType，相当于覆盖；</span><br><span class="line">            14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）</span><br><span class="line">            15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性</span><br><span class="line"></span><br><span class="line">            注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成对应表及类名--&gt;</span><br><span class="line">        &lt;table tableName=&quot;sys_menu&quot;</span><br><span class="line">               domainObjectName=&quot;SysMenu&quot;</span><br><span class="line">               enableCountByExample=&quot;true&quot;</span><br><span class="line">               enableUpdateByExample=&quot;true&quot;</span><br><span class="line">               enableDeleteByExample=&quot;true&quot;</span><br><span class="line">               enableSelectByExample=&quot;true&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;true&quot;&gt;</span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 constructorBased属性--&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;ignoreQualifiersAtRuntime&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 immutable 属性 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;modelOnly&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 rootClass 属性</span><br><span class="line">            &lt;property name=&quot;rootClass&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考javaClientGenerator 的  rootInterface 属性</span><br><span class="line">            &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog</span><br><span class="line">            &lt;property name=&quot;runtimeCatalog&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema</span><br><span class="line">            &lt;property name=&quot;runtimeSchema&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename</span><br><span class="line">            &lt;property name=&quot;runtimeTableName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 注意，该属性只针对MyBatis3Simple有用；</span><br><span class="line">                如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;selectAllOrderByClause&quot; value=&quot;age desc,username asc&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;!-- generatedKey用于生成生成主键的方法，</span><br><span class="line">                如果设置了该元素，MBG会在生成的&lt;insert&gt;元素中生成一条正确的&lt;selectKey&gt;元素，该元素可选</span><br><span class="line">                column:主键的列名；</span><br><span class="line">                sqlStatement：要生成的selectKey语句，有以下可选项：</span><br><span class="line">                    Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1</span><br><span class="line">                    Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()</span><br><span class="line">                    Informix  :相当于selectKey的SQL为：select dbinfo(&apos;sqlca.sqlerrd1&apos;) from systables where tabid=1</span><br><span class="line">                    MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()</span><br><span class="line">                    SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()</span><br><span class="line">                    SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY</span><br><span class="line">                    JDBC      :相当于在生成的insert元素上添加useGeneratedKeys=&quot;true&quot;和keyProperty属性</span><br><span class="line">            &lt;generatedKey column=&quot;&quot; sqlStatement=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--</span><br><span class="line">                该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，</span><br><span class="line">                比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；</span><br><span class="line">                那么就可以设置searchString为&quot;^CUST_&quot;，并使用空白替换，那么生成的Customer对象中的属性名称就不是</span><br><span class="line">                custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；</span><br><span class="line"></span><br><span class="line">                注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，</span><br><span class="line">                如果使用了columnOverride元素，该属性无效；</span><br><span class="line"></span><br><span class="line">            &lt;columnRenamingRule searchString=&quot;&quot; replaceString=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；</span><br><span class="line">                column:要重新设置的列名；</span><br><span class="line">                注意，一个table元素中可以有多个columnOverride元素哈~</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;columnOverride column=&quot;username&quot;&gt;--&gt;</span><br><span class="line">            &lt;!-- 使用property属性来指定列要生成的属性名称 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;property&quot; value=&quot;userName&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名</span><br><span class="line">            &lt;property name=&quot;javaType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- jdbcType用于指定该列的JDBC类型</span><br><span class="line">            &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名</span><br><span class="line">                注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler</span><br><span class="line">                只会生成类似：where id = #&#123;id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler&#125;的参数描述</span><br><span class="line">            &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line">            &lt;property name=&quot;delimitedColumnName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;/columnOverride&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现</span><br><span class="line">                column:指定要忽略的列的名字；</span><br><span class="line">                delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line"></span><br><span class="line">                注意，一个table元素中可以有多个ignoreColumn元素</span><br><span class="line">            &lt;ignoreColumn column=&quot;deptId&quot; delimitedColumnName=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></p><h3 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h3><p>配置完成之后，在如下位置，双击<code>mybatis-generator:generate</code>即可执行<br><img src="http://img.wanglixia.top/MBG安装-1-201939192516.png" alt="MBG安装-1-201939192516"></p><p>生成的代码在src/main/java/com.weyoung.generator里面，如下：<br><img src="http://img.wanglixia.top/生成内容如下-201939194822.png" alt="生成内容如下-201939194822"></p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是Mybatis-Generator&quot;&gt;&lt;a href=&quot;#什么是Mybatis-Generator&quot; class=&quot;headerlink&quot; title=&quot;什么是Mybatis Generator&quot;&gt;&lt;/a&gt;什么是Mybatis Generator&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; MyBatis Generator（MBG）是MyBatis和iBATIS的代码生成器。能够为所有版本的MyBatis以及版本2.2.0之后的iBATIS版本生成代码。它将内省数据库表（或许多表），并将生成可用于访问表的工件。这减少了设置对象和配置文件以与数据库表交互的初始麻烦。&lt;/p&gt;
&lt;p&gt;MyBatis Generator能够生成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与表结构匹配的Java POJO;&lt;/li&gt;
&lt;li&gt;MyBatis/iBATIS兼容的SQL Map XML文件;&lt;/li&gt;
&lt;li&gt;适用于MyBatis3.x Mapper基础结构的Dao接口;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工具" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="Mybatis Generator" scheme="https://www.wanglixia.top/tags/Mybatis-Generator/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（六）缓存配置Ehcache</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B05.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记5.html</id>
    <published>2019-03-08T14:25:53.000Z</published>
    <updated>2019-07-03T13:58:36.681Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 缓存（Caching）可以存储经常会用到的信息，在需要的时候，直接返回这些信息。Spring对缓存的支持有两种方式：1）注解驱动的缓存；2）XML声明的缓存；本文使用第二种方式来实际进行配置。</p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><ul><li>缓存内容详解</li><li>配置Ehcache缓存</li><li>配置Mybatis Generator</li></ul><h2 id="缓存内容详解"><a href="#缓存内容详解" class="headerlink" title="缓存内容详解"></a>缓存内容详解</h2><p>&emsp;&emsp; 使用<code>@EnableCaching</code>和<code><a href="cache:annotation-driven/" target="_blank" rel="noopener">cache:annotation-driven/</a></code> 的工作方式是相同的，都会创建一个切面并触发Spring缓存注解的切点。根据所使用的注解以及缓存的状态，这个切面会从缓存中获取数据，将数据添加到缓存之中或者从缓存中移除某个值。在启用注解驱动的缓存时，还声明了一个缓存管理器的bean。缓存管理器是Spring缓存抽象的核心，能够与多个流行的缓存实现进行集成。</p><a id="more"></a><h3 id="如何启用缓存"><a href="#如何启用缓存" class="headerlink" title="如何启用缓存"></a>如何启用缓存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 使用<span class="doctag">@EnableCaching</span>启用注解驱动的缓存</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span>  <span class="comment">// 启用缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">()</span> </span>&#123;    <span class="comment">// 声明缓存管理器</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ConcurrentMapCacheManager();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>XML方式配置方式如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Ehcache配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 启用缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 声明缓存管理器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.concurrent.ConcurrentMapCacheManager"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>ConcurrentMapCacheManager 使用 java.util.concurrent.ConcurrentHashMap 作为缓存存储，这个缓存存储是基于内存的，因此其生命周期是与应用关联的，不太适合于生产级别的大型企业级应用程序，因此有其他的缓存管理器方案可供使用。</p><h3 id="配置缓存管理器"><a href="#配置缓存管理器" class="headerlink" title="配置缓存管理器"></a>配置缓存管理器</h3><p>Spring中内置了如下几种缓存管理器实现：</p><ol><li>SimpleCacheManager</li><li>NoOpCacheManager</li><li>ConcurrentMapCacheManager</li><li>CompositeCacheManager</li><li>EhCacheCacheManager<br>…</li></ol><p>SpringData提供的缓存管理器：</p><ol><li>RedisCacheManager（来自于Spring Data Redis项目）</li><li>GemfireCacheManager（来自于Spring Data GemFire项目）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> net.sf.ehcache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.ehcache.EhCacheCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.ehcache.EhCacheManagerFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 使用<span class="doctag">@EnableCaching</span>启用注解驱动的缓存</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span>  <span class="comment">// 启用缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheCacheManager <span class="title">cacheManager</span><span class="params">(CacheManager cm)</span> </span>&#123;    <span class="comment">// 配置EhCacheCacheManager</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> EhCacheCacheManager(cm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManagerFactoryBean <span class="title">ehcache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        EhCacheManagerFactoryBean ehCacheFactoryBean = <span class="keyword">new</span> EhCacheManagerFactoryBean();</span><br><span class="line">        ehCacheFactoryBean.setConfigLocation(<span class="keyword">new</span> ClassPathResource(<span class="string">""</span>));</span><br><span class="line">        <span class="keyword">return</span> ehCacheFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过CompositeCacheManager使用多个缓存管理器。</p><h3 id="一、为方法添加注解支持缓存"><a href="#一、为方法添加注解支持缓存" class="headerlink" title="一、为方法添加注解支持缓存"></a>一、为方法添加注解支持缓存</h3><p>以下注解如果放在单独的方法上时，注解所描述的缓存行为只作用于这个方法上，如果放在类级别，那么缓存行为就会应用到这个类的所有方法上。</p><table><thead><tr><th style="text-align:left">注解</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">@Cacheable</td><td style="text-align:left">Spring在调用方法之前，首先应该在缓存中查找方法的返回值。如果这个值能够找到，就会返回缓存的值。否则，这个方法就会被调用，返回值就会放到缓存之中</td></tr><tr><td style="text-align:left">@CachePut</td><td style="text-align:left">Spring应该将方法的返回值放到缓存中，在方法的调用前并不会检查缓存，方法始终会被调用</td></tr><tr><td style="text-align:left">@CacheEvict</td><td style="text-align:left">Spring应该在缓存中清除一个或多个条目</td></tr><tr><td style="text-align:left">@Caching</td><td style="text-align:left">一个分组的注解，能够同时应用多个其他的缓存注解</td></tr></tbody></table><h4 id="填充缓存"><a href="#填充缓存" class="headerlink" title="填充缓存"></a>填充缓存</h4><p>@Cacheable和@CachePut注解都可以填充缓存。</p><p>示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="自定义缓存key"><a href="#自定义缓存key" class="headerlink" title="自定义缓存key"></a>自定义缓存key</h4><p>默认的缓存key要基于方法的参数来确定，参数是一个map，那么其缓存的key也是这个map，因此需要把默认的key改为map的key，而不是这个map，所以需要自定义缓存key。 </p><p>Spring 提供了多个用来定义缓存规则的SpEL扩展<br>|表达式|描述|<br>|:—|:—|<br>|#root.args|传递给缓存方法的参数，形式为数组|<br>|#root.caches|该方法执行时所对应的缓存，形式为数组|<br>|#root.target|目标对象|<br>|#root.targetClass|目标对象的类，是#root.target.class的简写形式|<br>|#root.method|缓存方法|<br>|#root.methodName|缓存方法的名字，是#root.method.name的简写形式|<br>|#result|方法调用的返回值（不能用在@Cacheable主街上）|<br>|#Argument|任意的方法参数名（如#argName）或参数索引（如#a0或#p0）|</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> key=<span class="string">"#result.id"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">save</span><span class="params">(Spittle spittle)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="条件化缓存"><a href="#条件化缓存" class="headerlink" title="条件化缓存"></a>条件化缓存</h4><blockquote><p>前面说的是通过为方法添加Spring的缓存注解，Spring就会围绕着这个方法创建一个缓存切面。条件化缓存是说将缓存功能关闭的一些场景。@Cacheable和@CachePut提供两个属性用以实现条件化缓存：unless和condition。如果unless属性的SpEL表达式计算结果为true，缓存方法返回的数据不会放到缓存中。如果condition属性的SpEL表达式计算结果为false，对于这个方法缓存就会被禁用掉。</p></blockquote><p>unless属性只能阻止将对象放进缓存，但是在这个方法调用的时候，依然会去缓存中进行查找。如果condition的表达式计算结果为false，这个方法调用时，缓存是被禁用的，也就不会去缓存中查找，返回值也不会放进缓存中。</p><p>例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// unless用法，对于属性中包含NoCache的Spittle对象，不对其进行缓存</span></span><br><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> unless=<span class="string">"#result.message.contains('NoCache')"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// condition用法，如果findOne方法调用时，参数值小于10，不会在缓存中进行查找，返回的数据也不会放进缓存中</span></span><br><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> </span><br><span class="line">    unless=<span class="string">"#result.message.contains('NoCache')"</span></span><br><span class="line">    condition=<span class="string">"#id &gt;= 10"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br></pre></td></tr></table></figure></p><h4 id="移除缓存条目"><a href="#移除缓存条目" class="headerlink" title="移除缓存条目"></a>移除缓存条目</h4><p>@CacheEvict不会往缓存中添加任何东西，且如果带有该注解的方法被调用的话，缓存中的一个或更多的条目会被移除。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheEvict</span>(<span class="string">"spittleCache"</span>)</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">long</span> spittleId)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>注意：@Cacheable和@CacheEvict必须应用在返回值非void的方法上，@CacheEvict可以放在任意的方法上，甚至void方法</strong></p><p><strong>@Cacheable注解的属性，指定哪些缓存条目应该被移除掉</strong><br>|属性|类型|描述|<br>|:—|:—|:—|<br>|value|String[]|要使用的缓存名称|<br>|key|String|SpEL表达式，用来计算自定义的缓存key|<br>|condition|String|SpEL表达式，如果得到的值是false的话，缓存不会应用到方法调用上|<br>|allEntries|boolean|如果为true的话，特定缓存的所有条目都会被移除掉|<br>|beforeInvoication|boolean|如果为true的话，在方法调用之前移除条目，如果为false（默认值）的话，在方法成功调用之后再移除条目|</p><h3 id="二、使用XML声明缓存"><a href="#二、使用XML声明缓存" class="headerlink" title="二、使用XML声明缓存"></a>二、使用XML声明缓存</h3><table><thead><tr><th style="text-align:left">元素</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="cache:annotation-driven" target="_blank" rel="noopener">cache:annotation-driven</a></td><td style="text-align:left">启用注解驱动的缓存，等同于Java配置中的@EnableCaching</td></tr><tr><td style="text-align:left"><a href="cache:advice" target="_blank" rel="noopener">cache:advice</a></td><td style="text-align:left">定义缓存通知。结合<a href="aop:advisor" target="_blank" rel="noopener">aop:advisor</a>，将通知应用到切点上</td></tr><tr><td style="text-align:left"><a href="cache:caching" target="_blank" rel="noopener">cache:caching</a></td><td style="text-align:left">在缓存通知中定义缓存规则</td></tr><tr><td style="text-align:left"><a href="cache:cacheable" target="_blank" rel="noopener">cache:cacheable</a></td><td style="text-align:left">指明某个方法要进行缓存。等同于@Cacheable注解</td></tr><tr><td style="text-align:left"><a href="cache:cache-put" target="_blank" rel="noopener">cache:cache-put</a></td><td style="text-align:left">指明某个方法要填充缓存，但不会考虑缓存中时候已有匹配的值，等同于@CachePut注解</td></tr><tr><td style="text-align:left"><a href="cache:cache-evict" target="_blank" rel="noopener">cache:cache-evict</a></td><td style="text-align:left">指明某个方法要从缓存中移除一项或多项，等同于@CacheEvict注解</td></tr></tbody></table><h4 id="填充缓存-1"><a href="#填充缓存-1" class="headerlink" title="填充缓存"></a>填充缓存</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cacheable</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache:cacheable</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"findRecent"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义缓存key-1"><a href="#自定义缓存key-1" class="headerlink" title="自定义缓存key"></a>自定义缓存key</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cache-put</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"save"</span> <span class="attr">key</span>=<span class="string">"#result.id"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="移除缓存条目-1"><a href="#移除缓存条目-1" class="headerlink" title="移除缓存条目"></a>移除缓存条目</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cache-evict</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"remove"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置Ehcache缓存"><a href="#配置Ehcache缓存" class="headerlink" title="配置Ehcache缓存"></a>配置Ehcache缓存</h2><p>Ehcache的主要特性有:</p><ol><li>快速、精干，简单；</li><li>多种缓存策略；</li><li>缓存数据有两级:内存和磁盘，因此无需担心容量问题；</li><li>缓存数据会在虚拟机重启的过程中写入磁盘；</li><li>可以通过RMI、可插入API等方式进行分布式缓存；</li><li>具有缓存和缓存管理器的侦听借口；</li><li>支持多缓存管理器实例，以及一个实例的多个缓存区域；</li><li>提供Hibernate 的缓存实现；</li></ol><p>上面的声明应该改为以下方式</p><p>pom.xml添加配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加spring-ehcache.xml并配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/cache/spring-cache.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Ehcache缓存配置文件<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Ehcache配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 启用缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache:annotation-driven</span> <span class="attr">cache-manager</span>=<span class="string">"cacheManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明缓存管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"ehcache"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.ehcache.EhCacheManagerFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/ehcache.xml"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- true:一个cacheManager对象共享，false：多个对象独立 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shared"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span> <span class="comment">&lt;!-- 这里是关键！！！没有必错 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.ehcache.EhCacheCacheManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cacheManager"</span> <span class="attr">ref</span>=<span class="string">"ehcache"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>spring-config.xml中添加配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加载Ehcache缓存配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:config/spring-ehcache.xml"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>在resources/config文件夹下添加ehcache.xml并添加配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="comment">&lt;!-- 这个name和updateCheck 都按这样配置最好，不然启动时会在前台报错403，IOException--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">name</span>=<span class="string">"ehcache"</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存位置 java.io.tmpdir:Java临时目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir/ehcache"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 默认缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">"100"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalDisk</span>=<span class="string">"10000000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--name：Cache的唯一标识</span></span><br><span class="line"><span class="comment">        maxElementsInMemory：内存中最大缓存对象数。</span></span><br><span class="line"><span class="comment">        maxElementsOnDisk：磁盘中最大缓存对象数，若是0表示无穷大。</span></span><br><span class="line"><span class="comment">        eternal：Element是否永久有效，一但设置了，timeout将不起作用。</span></span><br><span class="line"><span class="comment">        overflowToDisk：配置此属性，当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到磁盘中。</span></span><br><span class="line"><span class="comment">        timeToIdleSeconds：设置Element在失效前的允许闲置时间。仅当element不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。</span></span><br><span class="line"><span class="comment">        timeToLiveSeconds：设置Element在失效前允许存活时间。最大时间介于创建时间和失效时间之间。仅当element不是永久有效时使用，默认是0.，也就是element存活时间无穷大。</span></span><br><span class="line"><span class="comment">        diskPersistent：是否缓存虚拟机重启期数据。（Server重启时将缓存序列化到本地，后再加载，保证缓存在重启后依然有效）。</span></span><br><span class="line"><span class="comment">        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。</span></span><br><span class="line"><span class="comment">        diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。</span></span><br><span class="line"><span class="comment">        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。这里比较遗憾，Ehcache并没有提供一个用户定制策略的接口，仅仅支持三种指定策略，感觉做的不够理想。--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 系统缓存，用来缓存菜单、字典等 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"systemCatch"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"30"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这三个文件配置完了之后，Ehcache的配置也就完成了，下面我们说一下测试的方法。</p><h3 id="测试缓存配置"><a href="#测试缓存配置" class="headerlink" title="测试缓存配置"></a>测试缓存配置</h3><p>SysMenuServiceImpl.java 中添加如下代码。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysMenuServiceImpl</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">SysMenu</span>&gt; <span class="keyword">implements</span> <span class="title">SysMenuService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(SysMenuServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SysMenuDao sysMenuDao;</span><br><span class="line">    <span class="comment">// value对应ehcache.xml中的cache name，key就是这个缓存条目的key</span></span><br><span class="line">    <span class="meta">@Cacheable</span>(value=<span class="string">"systemCatch"</span>, key=<span class="string">"'SysMenuServiceImpl.systemCatch'"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SysMenu&gt; <span class="title">findMenuList</span><span class="params">(SysMenu sysMenu)</span> </span>&#123;</span><br><span class="line">        List&lt;SysMenu&gt; sysMenus = sysMenuDao.queryMenuList(sysMenu);</span><br><span class="line">        Long timestamp = System.currentTimeMillis();</span><br><span class="line">        logger.error(<span class="string">"timestamp&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span> + timestamp);</span><br><span class="line">        <span class="keyword">return</span> sysMenus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>SysMenuController.java 中添加如下代码，观察start 和 end方法之间会不会打印sql以及中间打印时间的日志。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"sysMenuList"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SysMenu&gt; <span class="title">getSysMenuList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SysMenu sysMenu = <span class="keyword">new</span> SysMenu();</span><br><span class="line">    sysMenu.setMenuId(<span class="string">"01"</span>);</span><br><span class="line">    logger.info(<span class="string">"-----------------------------------------------findMenuList start-----------------------------------"</span>);</span><br><span class="line">    List&lt;SysMenu&gt; menuList = sysMenuService.findMenuList(sysMenu);</span><br><span class="line">    logger.info(<span class="string">"-----------------------------------------------findMenuList end-----------------------------------"</span>);</span><br><span class="line">    <span class="keyword">return</span> menuList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>具体效果如下：</p><p><img src="http://img.wanglixia.top/ehcache-1-20193103302.png" alt="ehcache-1-20193103302"></p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.webresources.Cache.backgroundProcess The background cache eviction process was unable to free [10] percent of the cache for Context [/lx_note] - consider increasing the maximum size of the cache. After eviction approximately [9,686] KB of data remained in the cache.</span><br></pre></td></tr></table></figure><p>并没有报错，只是Console打印出来信息，提示不能自动释放10%的缓存，需要调大cache的最大容量；</p><p>解决方法：<br>Tomcat8 的conf/目录下的context.xml添加配置,默认大小是10240即10M，这边给调大了10倍。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resources cachingAllowed=&quot;true&quot; cacheMaxSize=&quot;102400&quot; /&gt;</span><br></pre></td></tr></table></figure></p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; 缓存（Caching）可以存储经常会用到的信息，在需要的时候，直接返回这些信息。Spring对缓存的支持有两种方式：1）注解驱动的缓存；2）XML声明的缓存；本文使用第二种方式来实际进行配置。&lt;/p&gt;
&lt;h2 id=&quot;本文内容&quot;&gt;&lt;a href=&quot;#本文内容&quot; class=&quot;headerlink&quot; title=&quot;本文内容&quot;&gt;&lt;/a&gt;本文内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;缓存内容详解&lt;/li&gt;
&lt;li&gt;配置Ehcache缓存&lt;/li&gt;
&lt;li&gt;配置Mybatis Generator&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;缓存内容详解&quot;&gt;&lt;a href=&quot;#缓存内容详解&quot; class=&quot;headerlink&quot; title=&quot;缓存内容详解&quot;&gt;&lt;/a&gt;缓存内容详解&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; 使用&lt;code&gt;@EnableCaching&lt;/code&gt;和&lt;code&gt;&lt;a href=&quot;cache:annotation-driven/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;cache:annotation-driven/&lt;/a&gt;&lt;/code&gt; 的工作方式是相同的，都会创建一个切面并触发Spring缓存注解的切点。根据所使用的注解以及缓存的状态，这个切面会从缓存中获取数据，将数据添加到缓存之中或者从缓存中移除某个值。在启用注解驱动的缓存时，还声明了一个缓存管理器的bean。缓存管理器是Spring缓存抽象的核心，能够与多个流行的缓存实现进行集成。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="异常" scheme="https://www.wanglixia.top/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（五）统一异常处理</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B04.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记4.html</id>
    <published>2019-03-04T14:20:52.000Z</published>
    <updated>2019-03-11T11:58:25.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 在Java项目中，在控制器、业务层、数据库操作的过程中，总是会遇到各种可控和不可控的异常需要处理，如果我们在每一个异常可能出现的地方都手动使用try{}catch{}单独处理异常的话，会产生的最大的问题就是：异常处理过程中的返回错误信息、日志打印都可能不统一，导致代码冗余和不可维护。因此我们使用统一的方式处理异常：</p><a id="more"></a><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><h3 id="一、SpringMVC处理异常方式："><a href="#一、SpringMVC处理异常方式：" class="headerlink" title="一、SpringMVC处理异常方式："></a>一、SpringMVC处理异常方式：</h3><ol><li>使用@ExceptionHandler注解：弊端：进行异常处理的方法必须与出错的方法在同一个Controller里面；</li><li>实现HandlerExceptionResolver接口：可以进行全局的异常控制。</li><li>使用@ControllerAdvice注解：使用了该注解之后，需要进行异常处理的方法与出错的方法就不必须在同一个Controller中了。@ControllerAdvice + @ExceptionHandler也可以实现全局的异常捕捉。</li></ol><h3 id="二、为控制器添加通知"><a href="#二、为控制器添加通知" class="headerlink" title="二、为控制器添加通知"></a>二、为控制器添加通知</h3><blockquote><p>如果要在多个控制器中处理异常，使用@ExceptionHandler注解是很有用的，但是如果多个控制器类中都会抛出异常，那么所有的控制器中都有重复相同的@ExceptionHandler方法。因此，需要创建一个基础的控制器类，所有的控制器要扩展这个类，从而继承通用的@ExceptionHandler方法。</p></blockquote><p>&emsp;&emsp; Spring3.2引入了一个新的解决方案：控制器通知。控制器通知是所有带有@ControllerAdvice注解的类，这个类会包含一个或多个如下类型的方法：</p><ul><li>@ExceptionHandler注解标注的方法；</li><li>@InitBinder注解标注的方法；</li><li>@ModelAttribute注解标注的方法；</li></ul><p>&emsp;&emsp; @ControllerAdvice可以将所有的@ExceptionHandler方法收集到一个类中，把所有的控制器异常进行一致的处理。</p><p>添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```java</span><br><span class="line">package com.weyoung.framework.config;</span><br><span class="line"></span><br><span class="line">import com.weyoung.framework.exception.BusinessException;</span><br><span class="line">import com.weyoung.framework.web.Message;</span><br><span class="line">import com.weyoung.platform.pojo.UserInfo;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line">import org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line">import org.springframework.web.bind.annotation.ModelAttribute;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">import static com.weyoung.framework.common.Constants.SESSION_DEFAULT;</span><br><span class="line">import static com.weyoung.framework.common.ErrorConstants.EXCEPTION_SYSTEM_MSG;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @作者 weyoung</span><br><span class="line"> * @功能描述 给控制器请求添加默认常用参数，统一处理异常</span><br><span class="line"> * @日期 2019/3/4</span><br><span class="line"> */</span><br><span class="line">@ControllerAdvice</span><br><span class="line">public class ControllerAdviceHandler &#123;</span><br><span class="line"></span><br><span class="line">    private static final Logger logger = Logger.getLogger(ControllerAdviceHandler.class);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @Description // 添加用户信息，可以在Controller中获取</span><br><span class="line">     **/</span><br><span class="line">    @ModelAttribute(&quot;BasUser&quot;)</span><br><span class="line">    public UserInfo basUser(HttpServletRequest request) &#123;</span><br><span class="line">        HttpSession session = request.getSession(true);</span><br><span class="line">        UserInfo user = (UserInfo) session.getAttribute(SESSION_DEFAULT);</span><br><span class="line">        return user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(value = Exception.class)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public Message exceptionHandler(Exception ex) &#123;</span><br><span class="line">        // 处理业务异常</span><br><span class="line">        if (ex instanceof BusinessException) &#123;</span><br><span class="line">            logger.error(&quot;BusinessException&quot;, ex);</span><br><span class="line">            // 返回业务异常code和message;</span><br><span class="line">            return Message.failed(((BusinessException) ex).getCode(), ex.getMessage());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            logger.error(&quot;Exception&quot;, ex);</span><br><span class="line">            return Message.failed(Message.FAILED_CODE, EXCEPTION_SYSTEM_MSG);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="三、处理业务异常"><a href="#三、处理业务异常" class="headerlink" title="三、处理业务异常"></a>三、处理业务异常</h3><p>BusinessException.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.framework.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.web.Message;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @作者 weyoung</span></span><br><span class="line"><span class="comment"> * @功能描述 业务异常处理</span></span><br><span class="line"><span class="comment"> * @日期 2019/3/4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BusinessException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">        <span class="keyword">this</span>.code = Message.FAILED_CODE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，在Controller中throw一个Exception，发现可以进入该通知了，配置成功。</p><p>在业务处理类中遇到可预知或不可预知的错误，直接由程序拦截处理，我们开发时只管throw Exception即可，控制器通知可以帮助我们处理和返回异常信息。</p><p>个人认为使用消息实体比如本文的Message类来统一规范地处理异常，不同的业务异常最好定义单独的error code，产生异常的信息和具体原因整理成文档，这样可以在上线之后不至于把敏感的错误信息返回到前端，又便于运维、实施同事能够快速地定位异常。</p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; 在Java项目中，在控制器、业务层、数据库操作的过程中，总是会遇到各种可控和不可控的异常需要处理，如果我们在每一个异常可能出现的地方都手动使用try{}catch{}单独处理异常的话，会产生的最大的问题就是：异常处理过程中的返回错误信息、日志打印都可能不统一，导致代码冗余和不可维护。因此我们使用统一的方式处理异常：&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="异常" scheme="https://www.wanglixia.top/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Git基本使用</title>
    <link href="https://www.wanglixia.top/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html"/>
    <id>https://www.wanglixia.top/Git基本使用.html</id>
    <published>2019-03-04T11:45:33.000Z</published>
    <updated>2019-03-09T19:45:14.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; Git是一个开源的分布式版本控制系统，也是个内容管理系统(CMS),工作管理系统等。常见的网站如Github、Gitee、coding使用的都是Git。Git能够帮助我们记录每一次的修改和提交，创建分支、合并分支等。<br>本文主要介绍Git的基本操作和Git 图形化界面</p><h2 id="Windows版安装"><a href="#Windows版安装" class="headerlink" title="Windows版安装"></a>Windows版安装</h2><ol><li>下载链接：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></li></ol><p>打开-&gt;安装-&gt;一路next-&gt;finish。<br><img src="http://img.wanglixia.top/git_install_1-20193420129.png" alt="git_install_1-20193420129"></p><ol start="2"><li>安装完成后空白界面右键，如下图示，出现<figure class="highlight plain"><figcaption><span>GUI Here```和 ```Git Bash Here```两个选项：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![git_install_2-201934201420](http://img.wanglixia.top/git_install_2-201934201420.png)</span><br><span class="line"></span><br><span class="line">3. 点击```Git Bash Here```选项，弹出Git命令窗口，可以在该窗口进行Git操作；</span><br><span class="line"></span><br><span class="line">## 配置</span><br><span class="line"></span><br><span class="line">使用Git命令窗口，输入以下命令配置全局参数用户名和邮箱地址，使用该参数表示本地所有Git仓库都使用这个配置：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">git config --global user.name &quot;weyoung&quot;</span><br><span class="line">git config --global user.email &quot;ne_lucifer@163.com&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p><img src="http://img.wanglixia.top/git_工作流程-201934204551.png" alt="git_工作流程-201934204551"></p><h3 id="Git的相关概念"><a href="#Git的相关概念" class="headerlink" title="Git的相关概念"></a>Git的相关概念</h3><ul><li>远程仓库（remote）：Git的远程仓库；</li><li>工作空间（workspace）： 仓库文件夹里面除了.git目录以外的内容；</li><li>本地仓库（Repository）：使用commit命令将缓存区文件提交到本地仓库；</li><li>缓存区（stage或者index）：本地修改完文件之后需要add到缓存区，一般存放在.get目录下的index文件中；</li></ul><h2 id="一、Git常用命令"><a href="#一、Git常用命令" class="headerlink" title="一、Git常用命令"></a>一、Git常用命令</h2><h3 id="1-创建仓库和初始化"><a href="#1-创建仓库和初始化" class="headerlink" title="1. 创建仓库和初始化"></a>1. 创建仓库和初始化</h3><p><strong>这个操作主要用于本地创建源码或源文档，然后提交推送到远程仓库。</strong><br>新建目录localRepo执行以下命令初始化为Git仓库，.git是一个隐藏的目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init localRepo</span><br></pre></td></tr></table></figure></p><p>localRepo 为本地仓库<br><img src="http://img.wanglixia.top/git-init-1-201934211129.png" alt="git-init-1-201934211129"></p><h3 id="2-将文件添加到版本控制"><a href="#2-将文件添加到版本控制" class="headerlink" title="2. 将文件添加到版本控制"></a>2. 将文件添加到版本控制</h3><p>在localRepo中新建一个文件README.txt，使用以下命令可以将文件添加到缓存区（暂存区）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add README.txt</span><br><span class="line">git add *.java <span class="comment"># 这个命令就是把.java结尾的文件提交到暂存区</span></span><br></pre></td></tr></table></figure></p><h3 id="3-将暂存区文件提交到本地仓库"><a href="#3-将暂存区文件提交到本地仓库" class="headerlink" title="3. 将暂存区文件提交到本地仓库"></a>3. 将暂存区文件提交到本地仓库</h3><p>使用如下命令将暂存区文件提交到本地仓库，-m 后面的就是提交的说明内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;这里填写提交信息&apos;</span><br></pre></td></tr></table></figure></p><p><img src="http://img.wanglixia.top/git-commit-201934212219.png" alt="git-commit-201934212219"></p><h3 id="4-取消已缓存的内容"><a href="#4-取消已缓存的内容" class="headerlink" title="4. 取消已缓存的内容"></a>4. 取消已缓存的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD README.txt</span><br></pre></td></tr></table></figure><h3 id="5-Git分支管理"><a href="#5-Git分支管理" class="headerlink" title="5. Git分支管理"></a>5. Git分支管理</h3><h4 id="5-1-创建分支命令"><a href="#5-1-创建分支命令" class="headerlink" title="5.1. 创建分支命令"></a>5.1. 创建分支命令</h4><p>创建分支：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名称</span><br></pre></td></tr></table></figure></p><p>列出本地所有分支：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></p><h4 id="5-2-切换分支命令"><a href="#5-2-切换分支命令" class="headerlink" title="5.2. 切换分支命令"></a>5.2. 切换分支命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 分支名称</span><br></pre></td></tr></table></figure><h4 id="5-3-删除分支"><a href="#5-3-删除分支" class="headerlink" title="5.3. 删除分支"></a>5.3. 删除分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支名称</span><br></pre></td></tr></table></figure><h4 id="5-4-分支合并"><a href="#5-4-分支合并" class="headerlink" title="5.4. 分支合并"></a>5.4. 分支合并</h4><p>本地有多个分支且非当前分支有了更改的内容，通过以下命令合并到当前分支中。<br>如：本地有两个分支，一个newbranch、一个master（当前分支），可以将newbranch合并到master分支中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge newbranch</span><br></pre></td></tr></table></figure><h4 id="5-5-查看提交历史"><a href="#5-5-查看提交历史" class="headerlink" title="5.5. 查看提交历史"></a>5.5. 查看提交历史</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="6-从远程仓库克隆代码到本地（常用）"><a href="#6-从远程仓库克隆代码到本地（常用）" class="headerlink" title="6. 从远程仓库克隆代码到本地（常用）"></a>6. 从远程仓库克隆代码到本地（常用）</h3><p>这个是在日常工作中比较常用的命令，如已经有了现成的Git服务器和远程仓库，我们需要把远程仓库的项目克隆到本地。<br>使用以下命令：</p><p>git clone &lt;远程仓库路径&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/nelucifer/ssm-note.git</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/git-clone-201934215050.png" alt="git-clone-201934215050"></p><h3 id="7-从远程仓库获取更新"><a href="#7-从远程仓库获取更新" class="headerlink" title="7. 从远程仓库获取更新"></a>7. 从远程仓库获取更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class="line"><span class="comment"># 示例如下：</span></span><br><span class="line">git pull origin next:master</span><br></pre></td></tr></table></figure><h3 id="8-推送代码到远程仓库"><a href="#8-推送代码到远程仓库" class="headerlink" title="8. 推送代码到远程仓库"></a>8. 推送代码到远程仓库</h3><p>本地新增了一个文件，</p><ul><li>需要使用 <figure class="highlight plain"><figcaption><span>add``` 命令添加到缓存区；</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 然后使用 ```git commit``` 命令提交到本地仓库；</span><br><span class="line">* 最后使用 ```git push``` 命令推送到远程仓库。</span><br><span class="line"></span><br><span class="line">示例代码如下：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"># 示例如下</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h3><ul><li><code>git commit</code>：是将本地修改过的文件提交到本地库中；</li><li><code>git push</code>：是将本地库中的最新信息发送给远程库；</li><li><code>git pull</code>：是从远程获取最新版本到本地，并自动merge；</li><li><code>git fetch</code>：是从远程获取最新版本到本地，不会自动merge；</li><li><code>git merge</code>：是用于从指定的commit(s)合并到当前分支，用来合并两个分支；</li></ul><h2 id="二、Git图形化工具Source-Tree"><a href="#二、Git图形化工具Source-Tree" class="headerlink" title="二、Git图形化工具Source Tree"></a>二、Git图形化工具Source Tree</h2><p>Source Tree号称是最好用的Git GUI工具，很适合上手，如下：<br>包含拉取、提交、推送、获取、添加标签、添加分支，无需使用命令，基本可满足日常开发使用：</p><p><img src="http://img.wanglixia.top/SourceTree使用-20193422519.png" alt="SourceTree使用-20193422519"></p><h3 id="SourceTree-下载"><a href="#SourceTree-下载" class="headerlink" title="SourceTree 下载"></a>SourceTree 下载</h3><p>SourceTree 下载地址：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><h3 id="SourceTree-安装配置"><a href="#SourceTree-安装配置" class="headerlink" title="SourceTree 安装配置"></a>SourceTree 安装配置</h3><p>双击下载的exe文件进行安装，发现强制使用Bitbucket登录，目前免密登录的方式已经失效。老老实实注册Bitbucket吧。如果嫌比较繁琐的话，可以使用Git自带的GUI工具、tortoisegit等，也可以使用IDEA相关的软件可以使用IDEA自带的GIT工具吧。</p><p><img src="http://img.wanglixia.top/SourceTree-1-201934232613.png" alt="SourceTree-1-201934232613"></p><p>选择 Create one for free链接，注册账户，完成之后点击Bitbucket授权，点击下一步。</p><p><img src="http://img.wanglixia.top/SourceTree-3-201934232739.png" alt="SourceTree-3-201934232739"></p><p><img src="http://img.wanglixia.top/SourceTree-4-201934232850.png" alt="SourceTree-4-201934232850"></p><p><img src="http://img.wanglixia.top/SourceTree-5-201934234343.png" alt="SourceTree-5-201934234343"></p><p>安装完成之后，输入我们的项目的远程仓库地址：</p><p><img src="http://img.wanglixia.top/SourceTree-6-201934234631.png" alt="SourceTree-6-201934234631"></p><p>拉取该项目，完成项目修改之后暂存-&gt;修改描述-&gt;提交，提交时会弹出账号密码框，输入账号密码即可。<br>可以看到账户密码已经被添加了：</p><p><img src="http://img.wanglixia.top/SourceTree-10-2019350734.png" alt="SourceTree-10-2019350734"></p><p>完成。</p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li>易百教程-Git教程：<a href="https://www.yiibai.com/git/" target="_blank" rel="noopener">https://www.yiibai.com/git/</a></li></ul><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>觉得好看的话，请点击下方二维码扫描加关注，或者点个好看哦~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; Git是一个开源的分布式版本控制系统，也是个内容管理系统(CMS),工作管理系统等。常见的网站如Github、Gi
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工具" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Git" scheme="https://www.wanglixia.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（四）使用注解配置切面</title>
    <link href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html"/>
    <id>https://www.wanglixia.top/SSM框架-整合笔记3.html</id>
    <published>2019-03-02T17:54:42.000Z</published>
    <updated>2019-03-09T19:45:14.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 面向切面编程（aspect-oriented programming，AOP），前面的文章里面描述AOP主要的作用是：日志记录，性能统计，安全控制，事务处理，异常处理，权限登录等等。本文中，我们使用切面来配置日志记录，其他的使用方式基本和这个一样。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><a id="more"></a><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><h3 id="一、注解"><a href="#一、注解" class="headerlink" title="一、注解"></a>一、注解</h3><p>&emsp;&emsp; 注解(Annotation)：一个注解就是一个类，@interface用来声明一个注解，其中的每一个方法实际上是声明了一个配置参数。方法的名称就是参数的名称，返回值类型就是参数的类型（返回值类型只能是基本类型、Class、String、enum）。可以通过default来声明参数的默认值。</p><ul><li>定义注解格式： public @interface 注解名 {定义体，定义体中的方法名称就是注解参数名称}</li><li>注解参数的可支持数据类型：<ol><li>所有基本数据类型（int、float、boolean、byte、double、char、long、short）；</li><li>String 类型；</li><li>Class 类型；</li><li>enum 枚举类型；</li><li>Annotation类型；</li><li>以上所有类型的数组</li></ol></li></ul><h3 id="二、面向切面编程"><a href="#二、面向切面编程" class="headerlink" title="二、面向切面编程"></a>二、面向切面编程</h3><p>&emsp;&emsp;面向切面编程（AOP）：利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。可以参考本文内容：<a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a>；切面就是为了实现各个业务模块通用功能的复用，比如业务操作（Service）中我们需要记录日志，就使用切面来织入各业务模块。5种通知类型：前置通知、后置通知、环绕通知、返回通知、异常通知。</p><p>Spring 提供</p><h2 id="配置注解驱动的切面"><a href="#配置注解驱动的切面" class="headerlink" title="配置注解驱动的切面"></a>配置注解驱动的切面</h2><h3 id="一、添加依赖"><a href="#一、添加依赖" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h3><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置注解类"><a href="#二、配置注解类" class="headerlink" title="二、配置注解类"></a>二、配置注解类</h3><p>这个类是为了打印日志的时候声明该方法作用，也就是方法的注释。</p><p><code>Log.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.weyoung.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Log &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该注解的使用方式，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法名</span></span><br><span class="line"><span class="meta">@Log</span>(<span class="string">"登录"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">systemLogin</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String viewName = <span class="string">"/welcome"</span>;</span><br><span class="line">    <span class="keyword">return</span> viewName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、配置切面"><a href="#三、配置切面" class="headerlink" title="三、配置切面"></a>三、配置切面</h3><p><code>LogAspect.java</code>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.weyoung.aspect;</span><br><span class="line"><span class="comment">//import ...; 导入包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> // 配置业务处理-系统日志切面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/3 2:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    LoggerService loggerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // 异常日志打印到日志文件中</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(LogAspect.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // Controller层切点</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.weyoung.annotation.Log)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // 环绕通知</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"logPointCut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">aroundMethod</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"进入切点..."</span>);</span><br><span class="line">        StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">        stopWatch.start();</span><br><span class="line">        MethodSignature signature = (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        Method method = signature.getMethod();</span><br><span class="line">        <span class="comment">// 获取注解上的描述</span></span><br><span class="line">        Log log = method.getAnnotation(Log.class);</span><br><span class="line">        String description = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (log != <span class="keyword">null</span>) &#123;</span><br><span class="line">            description = log.value();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 类名</span></span><br><span class="line">        String className = joinPoint.getTarget().getClass().getName();</span><br><span class="line">        <span class="comment">// 方法名</span></span><br><span class="line">        String methodName = signature.getName();</span><br><span class="line">        <span class="comment">// 方法参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="comment">// 进入方法</span></span><br><span class="line">        logger.info(<span class="string">"进入方法..."</span>);</span><br><span class="line">        Object returnValue = joinPoint.proceed(args);</span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        logger.info(<span class="string">"执行之后..."</span>);</span><br><span class="line">        stopWatch.getTotalTimeMillis()</span><br><span class="line">        <span class="comment">// 方法执行之后</span></span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (attributes != <span class="keyword">null</span>) &#123;</span><br><span class="line">            HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> returnValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、Spring装配该日志切面"><a href="#四、Spring装配该日志切面" class="headerlink" title="四、Spring装配该日志切面"></a>四、Spring装配该日志切面</h3><p><code>spring-mvc.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 启动AOP AspectJ注解自动代理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.weyoung.aspect.LogAspect"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 在spring-mvc中添加如上配置即可，不需要再添加其他扫描。配置的日志执行后如下：</p><p><img src="http://img.wanglixia.top/ssm配置切面-201933133640.png" alt="ssm配置切面-201933133640"></p><h2 id="使用AOP方式配置事务"><a href="#使用AOP方式配置事务" class="headerlink" title="使用AOP方式配置事务"></a>使用AOP方式配置事务</h2><p>使用xml方式管理AOP事务；</p><h3 id="一、添加依赖-1"><a href="#一、添加依赖-1" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h3><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置AOP事务"><a href="#二、配置AOP事务" class="headerlink" title="二、配置AOP事务"></a>二、配置AOP事务</h3><p><code>spring-config.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事务管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"MySQLDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务通知属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义事务传播属性，添加事务的方法名，因此service命名时需要遵循该原则 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"edit*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"new*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"set*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"remove*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"change*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"load*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"serviceOperation"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.weyoung.service.*.*Impl.*(..))"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"serviceOperation"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、测试事务配置"><a href="#三、测试事务配置" class="headerlink" title="三、测试事务配置"></a>三、测试事务配置</h3><ol><li>代码添加保存方法，确保该保存方法能够正常保存。</li><li>添加两条参数，确保一条可以成功一条不能成功，在一个符合事务配置格式的service方法中调用该方法；</li><li>查询数据库：无数据插入，后台报错；</li><li>添加两条参数，确保一条可以成功一条不能成功，注释掉事务配置切面，再调用方法进行测试；</li><li>查询数据库：有一条数据插入，后台报错；</li><li>结论：事务配置成功，可正常回滚。</li></ol><p>service中方法示例代码如下，具体内容可在文首查看源码或留言讨论：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map1 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map1.put(<span class="string">"userId"</span>, <span class="string">"007"</span>);</span><br><span class="line">    map1.put(<span class="string">"petname"</span>, <span class="string">"genius"</span>);</span><br><span class="line">    map1.put(<span class="string">"name"</span>, <span class="string">"weyoung"</span>);</span><br><span class="line">    map1.put(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">    map1.put(<span class="string">"birth"</span>, <span class="string">"2019-03-03"</span>);</span><br><span class="line">    map1.put(<span class="string">"icon"</span>, <span class="string">"icon"</span>);</span><br><span class="line">    map1.put(<span class="string">"phone"</span>, <span class="string">"phone"</span>);</span><br><span class="line">    map1.put(<span class="string">"email"</span>, <span class="string">"ne_lucifer@163.com"</span>);</span><br><span class="line">    map1.put(<span class="string">"address"</span>, <span class="string">""</span>);</span><br><span class="line">    map1.put(<span class="string">"level"</span>, <span class="number">0</span>);</span><br><span class="line">    map1.put(<span class="string">"signature"</span>, <span class="string">"signature"</span>);</span><br><span class="line">    map1.put(<span class="string">"brief"</span>, <span class="string">"brief"</span>);</span><br><span class="line">    loginDao.saveUserInfo(map1);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"userId"</span>, <span class="string">"001"</span>);</span><br><span class="line">    map.put(<span class="string">"petname"</span>, <span class="string">"weyoug"</span>);</span><br><span class="line">    map.put(<span class="string">"name"</span>, <span class="string">"lixia"</span>);</span><br><span class="line">    map.put(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">    map.put(<span class="string">"birth"</span>, <span class="string">"2019-03-03"</span>);</span><br><span class="line">    map.put(<span class="string">"icon"</span>, <span class="string">"icon"</span>);</span><br><span class="line">    map.put(<span class="string">"phone"</span>, <span class="string">"phone"</span>);</span><br><span class="line">    map.put(<span class="string">"email"</span>, <span class="string">"ne_lucifer@163.com"</span>);</span><br><span class="line">    map.put(<span class="string">"address"</span>, <span class="string">""</span>);</span><br><span class="line">    map.put(<span class="string">"level"</span>, <span class="number">0</span>);</span><br><span class="line">    map.put(<span class="string">"signature"</span>, <span class="string">"signature"</span>);</span><br><span class="line">    map.put(<span class="string">"brief"</span>, <span class="string">"brief"</span>);</span><br><span class="line">    loginDao.saveUserInfo(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日志切面和事务切面配置成功!</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; 面向切面编程（aspect-oriented programming，AOP），前面的文章里面描述AOP主要的作用是：日志记录，性能统计，安全控制，事务处理，异常处理，权限登录等等。本文中，我们使用切面来配置日志记录，其他的使用方式基本和这个一样。&lt;/p&gt;
&lt;h2 id=&quot;相关文章&quot;&gt;&lt;a href=&quot;#相关文章&quot; class=&quot;headerlink&quot; title=&quot;相关文章&quot;&gt;&lt;/a&gt;相关文章&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more&quot;&gt;Spring系列学习之IoC与AOP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more&quot;&gt;SSM框架整合笔记（一）详细注释&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more&quot;&gt;SSM框架整合笔记（二）配置Druid和Webservice&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more&quot;&gt;SSM框架整合笔记（三）配置Tiles、FreeMarker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more&quot;&gt;Spring系列学习之IoC与AOP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="AOP，日志" scheme="https://www.wanglixia.top/tags/AOP%EF%BC%8C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（三）视图解析器Tiles、FreeMarker配置</title>
    <link href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html"/>
    <id>https://www.wanglixia.top/SSM框架-整合笔记2.html</id>
    <published>2019-02-28T16:00:36.000Z</published>
    <updated>2019-03-09T19:45:14.868Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;在MVC开发模式下，View离不开模板引擎，在Java中模板引擎使用最多的就是JSP、Velocity和FreeMarker。在配置框架的过程中，一般的系统中的前端页面中总是有一些通用的头部、底部或者菜单栏，最原始的方法当然是为每个HTML页面添加需要引入的css或者js等公用资源，但是这种方式似乎太难以维护。<br><a id="more"></a><br>使用JSP的话，尽管JSP存在的时间很长、也特别像HTML，但是由于夹杂了各种标签库，显得特别混乱，因此在传统的单机应用中，在了解了常用的几个前端模板引擎（视图解析器），如Freemarker、Thymeleaf、Velocity、Tiles等：</p><ul><li>Velocity：自面世以来就以语法简单著称，其写法非常接近Java语法，学习成本低，而且其简单的语法给开发人员带来了很大的自由度，能够自由发挥；</li><li>FreeMarker： 使用后缀为ftl（FreeMarker Template Language，FTL）和html 的模板，处理动态网页优势比较强，由于不能写Java代码，可以实现严格的MVC分离；</li><li>Thymeleaf： 该模板会改变普通HTML的写法，需要在HTML中添加一些属性，能够按照原始的方式进行编辑甚至渲染，而不必经过任何类型的处理器；</li><li>JSP： JSP不是真正的HTML，但是JSP规范和Servlet规范是紧密耦合的，这也限制了它只能用在基于Servlet的Web应用之中。</li><li>Tiles：Apache Tiles，定义适用于所有页面的通用页面布局。但是Tiles的模板是需要和jsp结合的，内容页和模板页是独立的页面，因此不会影响HTML内容页的写法。</li></ul><p>本文内容：使用Tiles、FreeMarker配置前端模板引擎。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="demo下载地址"><a href="#demo下载地址" class="headerlink" title="demo下载地址"></a>demo下载地址</h2><p>该项目持续更新中，会在代码以及该文档里面详细注释和介绍。<br>项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：</p><p><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p><p>本文描述的项目版本为<code>v1.0.1</code>，版本源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note/releases/v1.0.1" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note/releases/v1.0.1</a></p><p><strong>注意：如果项目代码内容有变化和本例不太一样的话，请查看项目标签，标签会具体说明，使用方式如下：</strong></p><p><img src="http://img.wanglixia.top/ssm在码云上的tags-201932162926.png" alt="ssm在码云上的tags-201932162926"></p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>在一个项目中可以配置多个视图解析器，如Tiles、FreeMarker等可以同时配置，为了使得模板简洁和统一，本文仅介绍Tiles和FreeMarker的单独配置。</p><ul><li>一、XML方式配置Tiles；</li><li>二、配置FreeMarker模板引擎；</li><li>三、FreeMarker拆分和复用页面；</li></ul><h2 id="一、配置Tiles"><a href="#一、配置Tiles" class="headerlink" title="一、配置Tiles"></a>一、配置Tiles</h2><h3 id="0-pom-xml引入依赖"><a href="#0-pom-xml引入依赖" class="headerlink" title="0. pom.xml引入依赖"></a>0. <code>pom.xml</code>引入依赖</h3><p><code>pom.xml</code> 添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles.version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">tiles.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tiles --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-extras<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-jsp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-spring-mvc-xml"><a href="#1-spring-mvc-xml" class="headerlink" title="1. spring-mvc.xml"></a>1. <code>spring-mvc.xml</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring-mvc 视图解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesViewResolver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模板引擎Tiles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"definitions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tiles的模板组件组装配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/WEB-INF/views/*-tiles.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建Tiles模板组件"><a href="#2-创建Tiles模板组件" class="headerlink" title="2. 创建Tiles模板组件"></a>2. 创建Tiles模板组件</h3><p>分析下我们要展示的页面内容，具体布局如下图：<br>其中 header、nav-bar、menu、content（body）、footer可以提取出来，如下：</p><ul><li>header： 主要用来引入外部文件【header.jsp】；</li><li>nav-bar：主要用来添加导航栏【nav-bar.jsp】；</li><li>menu： 菜单模块【menu.jsp】；</li><li>content： 内容模块，是页面主体【动态添加的内容】；</li><li>footer： 底部声明等【footer.jsp】；</li></ul><p><img src="http://img.wanglixia.top/ssm内容Tiles分析-20193216310.png" alt="ssm内容Tiles分析-20193216310"></p><p>具体思路如下，首先在<code>pom.xml</code>添加Tiles的相关依赖，在<code>spring-mvc.xml</code>中添加视图解析器的配置，在<code>default-tiles.xml</code>中组装主模板和各个页面，即可。详细步骤如下：</p><h4 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="1. pom.xml"></a>1. <code>pom.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles.version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">tiles.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Apache Tiles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-extras<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-jsp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-spring-mvc-xml"><a href="#2-spring-mvc-xml" class="headerlink" title="2. spring-mvc.xml"></a>2. <code>spring-mvc.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- tiles视图解释器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesView"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewResolvers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"beanNameViewResolver"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"tilesViewResolver"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模板引擎Tiles配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"definitions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/WEB-INF/views/*-tiles.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"preparerFactoryClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-组装各页面组件"><a href="#3-组装各页面组件" class="headerlink" title="3. 组装各页面组件"></a>3. 组装各页面组件</h4><p><code>default-tiles.xml</code>内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE tiles-definitions PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://tiles.apache.org/dtds/tiles-config_3_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tiles-definitions</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义base Tile，主布局 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"base"</span> <span class="attr">template</span>=<span class="string">"/templates/base.jsp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"header"</span> <span class="attr">value</span>=<span class="string">"/templates/components/header.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"nav"</span> <span class="attr">value</span>=<span class="string">"/templates/components/nav-bar.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"menu"</span> <span class="attr">value</span>=<span class="string">"/templates/components/menu.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"footer"</span> <span class="attr">value</span>=<span class="string">"/templates/components/footer.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义base Tile --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"empty"</span> <span class="attr">template</span>=<span class="string">"/templates/empty.jsp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"header"</span> <span class="attr">value</span>=<span class="string">"/templates/components/header.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扩展base Tile --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"/home"</span> <span class="attr">extends</span>=<span class="string">"base"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"/front-end/welcome.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 登录页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"/login"</span> <span class="attr">extends</span>=<span class="string">"empty"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"/front-end/system/index.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tiles-definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-主页面-base-jsp"><a href="#4-主页面-base-jsp" class="headerlink" title="4. 主页面 base.jsp"></a>4. 主页面 <code>base.jsp</code></h4><p>以下为主页面模板配置，引入的其他页面和其他jsp页面一样，具体详见项目源码，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"tiles"</span> <span class="attr">uri</span>=<span class="string">"http://tiles.apache.org/tags-tiles"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Created</span> <span class="attr">by</span> <span class="attr">IntelliJ</span> <span class="attr">IDEA.</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Description:</span> 该模板就是包含所有的模板（有导航栏、菜单栏、内容、页脚）</span></span><br><span class="line"><span class="tag">  <span class="attr">User:</span> <span class="attr">Mr.wang</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Date:</span> <span class="attr">2017</span>/<span class="attr">6</span>/<span class="attr">21</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Time:</span> <span class="attr">22:18</span></span></span><br><span class="line"><span class="tag">  <span class="attr">To</span> <span class="attr">change</span> <span class="attr">this</span> <span class="attr">template</span> <span class="attr">use</span> <span class="attr">File</span> | <span class="attr">Settings</span> | <span class="attr">File</span> <span class="attr">Templates.</span></span></span><br><span class="line"><span class="tag"><span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"header"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        自定义样式...</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"scroll-bar hold-transition skin-blue sidebar-mini"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"main-header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"nav"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"main-sidebar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"menu"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"lucifer_content"</span> <span class="attr">class</span>=<span class="string">"content-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"content"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-fixed-bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"main-footer"</span> <span class="attr">style</span>=<span class="string">"margin-left: 260px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"footer"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、配置FreeMarker模板引擎"><a href="#二、配置FreeMarker模板引擎" class="headerlink" title="二、配置FreeMarker模板引擎"></a>二、配置FreeMarker模板引擎</h2><h3 id="0-pom-xml引入依赖-1"><a href="#0-pom-xml引入依赖-1" class="headerlink" title="0. pom.xml引入依赖"></a>0. <code>pom.xml</code>引入依赖</h3><p><code>pom.xml</code> 添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.20<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;freemarker.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-spring-mvc-xml-1"><a href="#1-spring-mvc-xml-1" class="headerlink" title="1. spring-mvc.xml"></a>1. <code>spring-mvc.xml</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring-mvc 视图解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewResolvers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"beanNameViewResolver"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 模板引擎中添加FreeMarker配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"freeMarkerViewResolver"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker 模板引擎 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freeMarkerViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.springframework.web.servlet.view.freemarker.FreeMarkerView<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 识别为FreeMarker页面的文件后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".html"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentType"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在FreeMarker页面中使用request对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeRequestAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSessionAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSpringMacroHelpers"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"requestContextAttribute"</span> <span class="attr">value</span>=<span class="string">"rc"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker 模板引擎配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPaths"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/front-end<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span><span class="comment">&lt;!-- 设置FreeMarker环境属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--刷新模板的周期，单位为秒 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"default_encoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--模板的编码格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 本地化设置，设置默认地区 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_exception_handler"</span>&gt;</span>rethrow<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>#.####<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 设置默认数字输出格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"boolean_format"</span>&gt;</span>true,false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 设置默认布尔值输出格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"whitespace_stripping"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"tag_syntax"</span>&gt;</span>auto_detect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"url_escaping_charset"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-web-xml"><a href="#2-web-xml" class="headerlink" title="2. web.xml"></a>2. <code>web.xml</code></h3><p><strong>注意：</strong> FreeMarker配置首页为html页面的话，需要进行特别的配置，需要修改<code>web.xml</code>中设置的登录页，否则直接配置<code>index.html</code>的话会导致页面中的FreeMarker配置无效，因此需修改<code>web.xml</code>和<code>MainController.java</code>，这块需要注意！</p><p><code>web.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 默认进入页面，一般为登录页 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>MainController.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> // 登录页，控制启动时跳转</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/2 23:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Param</span> [request, response]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-组装FreeMarker页面"><a href="#3-组装FreeMarker页面" class="headerlink" title="3. 组装FreeMarker页面"></a>3. 组装FreeMarker页面</h3><p>在SSM项目中配置FreeMarker模板引擎时，需要使用特定的指令来配置模板和组装页面组件，页面结构如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">|---[front-end]（前端页面）</span><br><span class="line">|---|---index.html（登录页）</span><br><span class="line">|---|---welcome.html（首页）</span><br><span class="line">|---[tempaltes]（模板文件）</span><br><span class="line">|---|---[components]（模板组件）</span><br><span class="line">|---|---|---footer.html（页脚组件）</span><br><span class="line">|---|---|---header.html（页首组件）</span><br><span class="line">|---|---|---menu.html（菜单组件）</span><br><span class="line">|---|---|---nav-bar.html（导航栏组件）</span><br><span class="line">|---|---empty.html（没有菜单的主模板，如登录页使用）</span><br><span class="line">|---|---main.html（包含菜单和页脚的主模板，如首页使用）</span><br></pre></td></tr></table></figure><p>具体配置方式如下：</p><p><code>empty.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#macro</span> <span class="attr">empty</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">header.html</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        自定义的样式</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 插入内容页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#nested</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>empty.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#macro</span> <span class="attr">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">header.html</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">       自定义的样式</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"scroll-bar hold-transition skin-blue sidebar-mini"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"main-header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">nav-bar.html</span>"&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"main-sidebar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">menu.html</span>"&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"lucifer_content"</span> <span class="attr">class</span>=<span class="string">"content-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 在这里嵌入主题内容 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#nested</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-fixed-bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"main-footer"</span> <span class="attr">style</span>=<span class="string">"margin-left: 260px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">footer.html</span>"&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> InitFrame = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> setTitle = <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            title &amp;&amp; $(<span class="built_in">document</span>).attr(<span class="string">"title"</span>, title)</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;<span class="attr">setTitle</span>: setTitle&#125;;</span></span><br><span class="line"><span class="undefined">    &#125;)()</span></span><br><span class="line"><span class="javascript">    InitFrame.setTitle(<span class="string">"SSM框架整合"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>index.html</code>和<code>welcome.html</code>页面引用模板方式主要如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入布局指令的命名空间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#import</span> "<span class="attr">templates</span>/<span class="attr">main.html</span>" <span class="attr">as</span> <span class="attr">main</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 调用布局指令 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">@main.layout</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 下面的这些内容会自动嵌入到layout指令的nested块中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM框架整合笔记<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>~~欢迎关注下方微信公众号，记录javaweb常见的问题和相关技术，欢迎交流学习~~<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@main.layout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此，FreeMarker配置完成，详细注释和配置参考项目开头源码下载地址。</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在MVC开发模式下，View离不开模板引擎，在Java中模板引擎使用最多的就是JSP、Velocity和FreeMarker。在配置框架的过程中，一般的系统中的前端页面中总是有一些通用的头部、底部或者菜单栏，最原始的方法当然是为每个HTML页面添加需要引入的css或者js等公用资源，但是这种方式似乎太难以维护。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="tiles" scheme="https://www.wanglixia.top/tags/tiles/"/>
    
      <category term="前端框架" scheme="https://www.wanglixia.top/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用SoapUI 5.3.0调试webservice接口（参数格式XML）</title>
    <link href="https://www.wanglixia.top/SoapUI%E8%B0%83%E8%AF%95webservice%E6%8E%A5%E5%8F%A3.html"/>
    <id>https://www.wanglixia.top/SoapUI调试webservice接口.html</id>
    <published>2019-02-27T14:31:16.000Z</published>
    <updated>2019-03-09T19:45:14.887Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目中经常要调试webservice接口，从朋友处了解到他们调试webservice接口时使用SoapUI，觉得十分好用，个人也对此十分感兴趣，因此简要记录一下这个工具的使用。</p><a id="more"></a><h2 id="使用SoapUI-5-3-0调试webservice接口（参数格式XML）"><a href="#使用SoapUI-5-3-0调试webservice接口（参数格式XML）" class="headerlink" title="使用SoapUI 5.3.0调试webservice接口（参数格式XML）"></a>使用SoapUI 5.3.0调试webservice接口（参数格式XML）</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>下载SoapUI，我使用的是5.3.0 <a href="https://www.soapui.org/downloads/latest-release.html" target="_blank" rel="noopener">https://www.soapui.org/downloads/latest-release.html</a></li><li>WebService 服务接口</li></ul><h3 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h3><ol><li>新建调试项目</li></ol><p><img src="http://img.wanglixia.top/soapUI-webservice-1-2019227224144.png" alt="soapUI-webservice-1-2019227224144"></p><ol start="2"><li>输入项目名称及要调试的接口有效地址，输入完毕点击OK<br>soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new request,输入名称后如下图会自动生成如下格式代码；其中 </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web:in0</span>&gt;</span>中填写入参<span class="tag">&lt;/<span class="name">web:in0</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--或--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg0</span>&gt;</span>中填写入参<span class="tag">&lt;/<span class="name">arg0</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置3-2019227224353.png" alt="ssm-note webservice配置3-2019227224353"></p><p><strong>注意：xml格式的入参最好使用 &lt;[CDATA[]]&gt; 包起来。点击左上角的绿色三角就可以调试接口了。</strong></p><ol start="3"><li><p>新建测试套件 New TestSuite</p></li><li><p>在项目名称上右击，选择 New TestSuite,输入名称保存</p></li></ol><p><img src="http://img.wanglixia.top/SoapUI_5-2019227224836.png" alt="SoapUI_5-2019227224836"></p><ol start="5"><li><p>在自己新建的TestSuite名称上右击，选择 New TestCase,输入名称保存</p></li><li><p>在Test Steps上右击 选择 Add Step –&gt;SOAP Request,输入名称并选择接口，名称最好容易识别一点</p></li></ol><p><img src="http://img.wanglixia.top/SoapUI_7-2019227225543.png" alt="SoapUI_7-2019227225543"></p><p>接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。</p><hr><p>欢迎关注微信公众号weyoung，记录学习笔记和一些有趣的东西，欢迎交流~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="wechat_qrcode-2019115195545"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">个人博客</td><td style="text-align:left"><a href="https://www.wanglixia.top/">https://www.wanglixia.top/</a></td></tr><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目中经常要调试webservice接口，从朋友处了解到他们调试webservice接口时使用SoapUI，觉得十分好用，个人也对此十分感兴趣，因此简要记录一下这个工具的使用。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="soapUI" scheme="https://www.wanglixia.top/tags/soapUI/"/>
    
      <category term="webservice" scheme="https://www.wanglixia.top/tags/webservice/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（二）Druid和Webservice配置</title>
    <link href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html"/>
    <id>https://www.wanglixia.top/ssm框架-整合笔记1.html</id>
    <published>2019-02-27T12:41:08.000Z</published>
    <updated>2019-03-09T19:45:14.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSM框架整合笔记（二）Druid和Webservice配置"><a href="#SSM框架整合笔记（二）Druid和Webservice配置" class="headerlink" title="SSM框架整合笔记（二）Druid和Webservice配置"></a>SSM框架整合笔记（二）Druid和Webservice配置</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="WebService"><a href="#WebService" class="headerlink" title="WebService"></a>WebService</h3><p>&emsp;&emsp;Web Service 是自包含（self-contained）、使用开放协议进行通信的应用程序组件。功能：实现应用程序之间的通信；将应用程序转换为网络应用程序；使用XML来编解码数据，并使用SOAP来传输数据。<br>元素：</p><ul><li>使用SOAP（简单对象访问协议）：是用于交换XML编码信息的轻量级协议；</li><li>WSDL（Web Service 描述语言）：用于描述Web Service及函数、参数和返回值，因为是基于XML的，因此WSDL既是机器可阅读的，又是人可阅读的；</li><li>UDDI：目的是为电子商务建立标准，是一套基于Web的、分布式的、为Web Service提供的、信息注册中心的实现标准规范，同时也包含一组使企业能将自身提供的Web Service注册，以使别的企业能够发现的访问协议的实现标准。</li><li>XML是Web Service的基础；</li></ul><p>SOAP：是一种使应用程序有能力通过 HTTP 交换信息的基于 XML 的简易协议。<br>WSDL：是基于 XML 的用来描述 Web services 以及如何访问它们的一种语言，可描述 web service，连同用于 web service 的消息格式和协议的细节。</p><h3 id="Druid"><a href="#Druid" class="headerlink" title="Druid"></a>Druid</h3><p>&emsp;&emsp;Druid是Java中的数据库连接池。Druid能够提供强大的监控和扩展功能。</p><a id="more"></a><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><ul><li>ssm项目使用CXF配置webservice。</li><li>ssm项目中配置druid数据库连接池，SQL监控。</li></ul><h2 id="一、使用CXF配置webservice"><a href="#一、使用CXF配置webservice" class="headerlink" title="一、使用CXF配置webservice"></a>一、使用CXF配置webservice</h2><h3 id="0-pom-xml"><a href="#0-pom-xml" class="headerlink" title="0. pom.xml"></a>0. pom.xml</h3><p><code>pom.xml</code>中添加依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cxf.version</span>&gt;</span>3.1.6<span class="tag">&lt;/<span class="name">cxf.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- cxf webservice --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-web-xml"><a href="#1-web-xml" class="headerlink" title="1. web.xml"></a>1. web.xml</h3><p><code>web.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--============Webservice配置start============--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在Web.xml中配置CXF监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.cxf.transport.servlet.CXFServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注意：&lt;servlet-mapping&gt;下的&lt;url-pattern&gt;指明了服务访问地址的形式,"/*"代表URL地址中，包名称后直接跟服务endpoint地址，</span></span><br><span class="line"><span class="comment">若指明&lt;url-pattern&gt;为/webservice/*,则URL地址为“包名webservice/endpoint?wsdl” --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/webservice/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--============Webservice配置end============--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-spring-config-xml"><a href="#2-spring-config-xml" class="headerlink" title="2. spring-config.xml"></a>2. spring-config.xml</h3><p><code>spring-config.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用CXF方式配置webservice接口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;import resource="classpath:META-INF/cxf/cxf-servlet.xml"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动扫描webService --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.webservice"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义webservice的发布接口  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">implementor</span>=<span class="string">"#thirdService"</span> <span class="attr">address</span>=<span class="string">"/testService"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ThirdWebservice-java"><a href="#3-ThirdWebservice-java" class="headerlink" title="3. ThirdWebservice.java"></a>3. ThirdWebservice.java</h3><p>添加interface：<code>ThirdWebservice.java</code>，示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.webservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ThirdWebservice</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 对外发布webservice接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/26 0:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ThirdWebservice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取第三方请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> intoData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">getThirdPartyRequest</span><span class="params">(String code, String loginData, String intoData)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-ThirdWebserviceImpl-java"><a href="#4-ThirdWebserviceImpl-java" class="headerlink" title="4. ThirdWebserviceImpl.java"></a>4. ThirdWebserviceImpl.java</h3><p>添加java类：<code>ThirdWebserviceImpl.java</code>，示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.webservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ThirdWebserviceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 对外发布webservice接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/26 0:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"thirdService"</span>)</span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThirdWebserviceImpl</span> <span class="keyword">implements</span> <span class="title">ThirdWebservice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getThirdPartyRequest</span><span class="params">(String code, String loginData, String intoData)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String result;</span><br><span class="line">        <span class="keyword">switch</span> (code) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"WS0001"</span>:</span><br><span class="line">                result = <span class="string">"WS0001"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"WS0002"</span>:</span><br><span class="line">                result = <span class="string">"WS0001"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                result = <span class="string">"OTHER"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h2><p>访问地址：<a href="http://localhost:8080/ssm-note/webservice/" target="_blank" rel="noopener">http://localhost:8080/ssm-note/webservice/</a> ，原访问项目后加”webservice/“，访问结果如下：<br><img src="http://img.wanglixia.top/ssm-note%20webservice配置-201922722921.png" alt="ssm-note webservice配置-201922722921"><br>点击蓝色链接后如下：<br><img src="http://img.wanglixia.top/ssm-note%20webservice配置1-2019227221015.png" alt="ssm-note webservice配置1-2019227221015"><br>使用soapUI测试webservice接口：</p><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置2-2019227222629.png" alt="ssm-note webservice配置2-2019227222629"></p><p>双击<code>Request 1</code>，填入参数，点击运行按钮，结果如下，调用成功：</p><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置3-201922722283.png" alt="ssm-note webservice配置3-201922722283"></p><h2 id="二、配置druid数据库连接池，SQL监控"><a href="#二、配置druid数据库连接池，SQL监控" class="headerlink" title="二、配置druid数据库连接池，SQL监控"></a>二、配置druid数据库连接池，SQL监控</h2><h3 id="0-pom-xml-1"><a href="#0-pom-xml-1" class="headerlink" title="0. pom.xml"></a>0. pom.xml</h3><p><code>pom.xml</code>中添加依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.0.25<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.14<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid==&gt;阿里巴巴数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-web-xml-1"><a href="#1-web-xml-1" class="headerlink" title="1. web.xml"></a>1. web.xml</h3><p><code>web.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ============阿里巴巴数据库连接池start============ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.alibaba.druid.support.http.WebStatFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>exclusions<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.alibaba.druid.support.http.StatViewServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/druid/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ============阿里巴巴数据库连接池end============ --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-spring-config-xml-1"><a href="#2-spring-config-xml-1" class="headerlink" title="2. spring-config.xml"></a>2. spring-config.xml</h3><p><code>spring-config.xml</code>中添加配置，示例代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MySQL数据源配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"MySQLDataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.initialSize&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minIdle&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxActive&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxWait&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testWhileIdle&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这里建议配置为TRUE，防止取到的连接不可用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolPreparedStatementPerConnectionSize"</span> <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置提交方式，默认就是true，可以不用配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultAutoCommit"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.defaultAutoCommit&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 验证连接有效与否的SQL，不同的数据配置不同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name="validationQuery" value="select 1 " /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"stat"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyFilters"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logFilter"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logFilter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Log4jFilter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试Druid"><a href="#测试Druid" class="headerlink" title="测试Druid"></a>测试Druid</h2><p>访问地址：<a href="http://localhost:8080/ssm-note/druid/" target="_blank" rel="noopener">http://localhost:8080/ssm-note/druid/</a></p><p>访问后如下：</p><p><img src="http://img.wanglixia.top/ssm-note%20druid配置-201922723157.png" alt="ssm-note druid配置-201922723157"></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SSM框架整合笔记（二）Druid和Webservice配置&quot;&gt;&lt;a href=&quot;#SSM框架整合笔记（二）Druid和Webservice配置&quot; class=&quot;headerlink&quot; title=&quot;SSM框架整合笔记（二）Druid和Webservice配置&quot;&gt;&lt;/a&gt;SSM框架整合笔记（二）Druid和Webservice配置&lt;/h2&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;WebService&quot;&gt;&lt;a href=&quot;#WebService&quot; class=&quot;headerlink&quot; title=&quot;WebService&quot;&gt;&lt;/a&gt;WebService&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Web Service 是自包含（self-contained）、使用开放协议进行通信的应用程序组件。功能：实现应用程序之间的通信；将应用程序转换为网络应用程序；使用XML来编解码数据，并使用SOAP来传输数据。&lt;br&gt;元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用SOAP（简单对象访问协议）：是用于交换XML编码信息的轻量级协议；&lt;/li&gt;
&lt;li&gt;WSDL（Web Service 描述语言）：用于描述Web Service及函数、参数和返回值，因为是基于XML的，因此WSDL既是机器可阅读的，又是人可阅读的；&lt;/li&gt;
&lt;li&gt;UDDI：目的是为电子商务建立标准，是一套基于Web的、分布式的、为Web Service提供的、信息注册中心的实现标准规范，同时也包含一组使企业能将自身提供的Web Service注册，以使别的企业能够发现的访问协议的实现标准。&lt;/li&gt;
&lt;li&gt;XML是Web Service的基础；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SOAP：是一种使应用程序有能力通过 HTTP 交换信息的基于 XML 的简易协议。&lt;br&gt;WSDL：是基于 XML 的用来描述 Web services 以及如何访问它们的一种语言，可描述 web service，连同用于 web service 的消息格式和协议的细节。&lt;/p&gt;
&lt;h3 id=&quot;Druid&quot;&gt;&lt;a href=&quot;#Druid&quot; class=&quot;headerlink&quot; title=&quot;Druid&quot;&gt;&lt;/a&gt;Druid&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Druid是Java中的数据库连接池。Druid能够提供强大的监控和扩展功能。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="webservice" scheme="https://www.wanglixia.top/tags/webservice/"/>
    
      <category term="mybatis" scheme="https://www.wanglixia.top/tags/mybatis/"/>
    
      <category term="springmvc" scheme="https://www.wanglixia.top/tags/springmvc/"/>
    
      <category term="spring" scheme="https://www.wanglixia.top/tags/spring/"/>
    
  </entry>
  
</feed>
