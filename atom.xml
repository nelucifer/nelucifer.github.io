<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coder立夏的笔记</title>
  <icon>https://www.gravatar.com/avatar/f0d08edbb92c84449cb9aa170181da16</icon>
  <subtitle>JavaWeb开发|热爱分享|开发学习笔记|码梦者学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wanglixia.top/"/>
  <updated>2019-09-19T15:16:05.859Z</updated>
  <id>https://www.wanglixia.top/</id>
  
  <author>
    <name>coder立夏</name>
    <email>ne_lucifer@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo相关-目录</title>
    <link href="https://www.wanglixia.top/Hexo.html"/>
    <id>https://www.wanglixia.top/Hexo.html</id>
    <published>2019-09-19T12:15:18.000Z</published>
    <updated>2019-09-19T15:16:05.859Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo相关-目录"><a href="#Hexo相关-目录" class="headerlink" title="Hexo相关-目录"></a>Hexo相关-目录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;作为一个码农来说，笔记是必不可少的，一是为了记录，二是为了分享。特意将使用hexo+github/coding免费搭建个人博客的过程也记录了一下，网上类似的文章太多了，有些配置的版本不一样，本文记录hexo环境的搭建及部署到coding/github上.</p><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><ul><li><a href="Hexo/Hexo-搭建个人博客1.html">Hexo-搭建个人博客1</a></li><li><a href="Hexo/Hexo-搭建个人博客2.html">Hexo-搭建个人博客2</a></li><li><a href="Hexo/Hexo-搭建个人博客3.html">Hexo-搭建个人博客3</a></li><li><a href="Hexo/Hexo-搭建个人博客-报错集锦.html">Hexo-搭建个人博客-报错集锦</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo相关-目录&quot;&gt;&lt;a href=&quot;#Hexo相关-目录&quot; class=&quot;headerlink&quot; title=&quot;Hexo相关-目录&quot;&gt;&lt;/a&gt;Hexo相关-目录&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端技术-目录</title>
    <link href="https://www.wanglixia.top/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF.html"/>
    <id>https://www.wanglixia.top/前端技术.html</id>
    <published>2019-09-19T12:14:53.000Z</published>
    <updated>2019-09-19T15:16:05.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端技术-目录"><a href="#前端技术-目录" class="headerlink" title="前端技术-目录"></a>前端技术-目录</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相关技术：Bootstrap、JavaScript、JQuery</p><a id="more"></a><h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><ul><li><a href="前端技术/Bootstrap/Bootstrap-分享笔记1.html">好用的前端响应式框架Bootstrap</a></li><li><a href="前端技术/Bootstrap/Bootstrap-插件-bootstrap-table-export.html">bootstrap-table使用</a></li></ul><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><ul><li><a href="前端技术/JavaScript/JavaScript-防止js全局变量污染方法总结.html">JavaScript-防止js全局变量污染方法总结</a></li><li><a href="前端技术/JavaScript/JavaScript-array.html">JavaScript-操作数组array</a></li><li><a href="前端技术/JavaScript/JavaScript-utils.html">JavaScript-常用功能</a></li></ul><h3 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h3><ul><li><a href="前端技术/JQuery/JQuery-学习笔记0-样式篇.html">JQuery-学习笔记0-样式篇</a></li><li><a href="前端技术/JQuery/JQuery-学习笔记1-样式篇.html">JQuery-学习笔记1-样式篇</a></li><li><a href="前端技术/JQuery/JQuery-学习笔记2-DOM篇.html">JQuery-学习笔记2-DOM篇</a></li><li><a href="前端技术/JQuery/JQuery-学习笔记3-DOM篇.html">JQuery-学习笔记3-DOM篇</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前端技术-目录&quot;&gt;&lt;a href=&quot;#前端技术-目录&quot; class=&quot;headerlink&quot; title=&quot;前端技术-目录&quot;&gt;&lt;/a&gt;前端技术-目录&lt;/h2&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;相关技术：Bootstrap、JavaScript、JQuery&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>后端技术-目录</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF.html"/>
    <id>https://www.wanglixia.top/后端技术.html</id>
    <published>2019-09-19T12:14:22.000Z</published>
    <updated>2019-09-19T15:16:05.860Z</updated>
    
    <content type="html"><![CDATA[<h2 id="后端技术-目录"><a href="#后端技术-目录" class="headerlink" title="后端技术-目录"></a>后端技术-目录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>相关技术：Excel解析、Linux服务器、Windows Server、接口调试工具SoapUI、数据库MySQL、SQLServer、NoSQL、Oracle、PowerDesigner、Java相关知识、Python、定时器Quartz、安全框架Shiro、SSM框架等内容，请看下文文章目录。</p><a id="more"></a><h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><ul><li><a href="后端技术/常用工具/Excel解析-POI解析实例.md.html">Excel解析-POI解析实例</a></li></ul><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><ul><li><a href="后端技术/服务器/Linux使用1.html">Linux使用1</a></li><li><a href="后端技术/服务器/Windows-server-2012.html">WindowsServer2012使用记录</a></li></ul><h3 id="接口相关"><a href="#接口相关" class="headerlink" title="接口相关"></a>接口相关</h3><ul><li><a href="后端技术/接口相关/SoapUI-调试webservice接口.html">SoapUI-调试webservice接口</a></li><li><a href="后端技术/接口相关/SoapUI-webservice.html">使用SoapUI调试webservice接口</a></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><ul><li><a href="后端技术/数据库/Mysql-export-database.html">Mysql导出导入数据库</a></li><li><a href="后端技术/数据库/Mysql数据库常用方式.html">Mysql数据库常用方式</a></li></ul><h4 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h4><ul><li><a href="后端技术/数据库/Nosql-mongodb.html">windows下安装MongoDB</a></li><li><a href="后端技术/数据库/Redis系列-0-Windows下安装Redis服务.html">Redis系列-0-Windows下安装Redis服务</a></li></ul><h4 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h4><ul><li><a href="后端技术/数据库/Oracle中的常用函数.html">Oracle中的常用函数</a></li></ul><h4 id="SQLServer"><a href="#SQLServer" class="headerlink" title="SQLServer"></a>SQLServer</h4><ul><li><a href="后端技术/数据库/Sqlserver2008r2.html">SqlServer2008R2-问题汇总</a></li></ul><h4 id="数据库工具"><a href="#数据库工具" class="headerlink" title="数据库工具"></a>数据库工具</h4><ul><li><a href="后端技术/数据库/PowerDesigner-export-PDM-rtf.html">PowerDesigner导出PDM和rtf文件</a></li></ul><h3 id="Java系列"><a href="#Java系列" class="headerlink" title="Java系列"></a>Java系列</h3><ul><li><a href="后端技术/Java系列/Java系列-目录.html">Java系列-目录</a></li><li><a href="后端技术/Java系列/Java系列-Java基础知识.html">Java系列-Java基础知识</a></li><li><a href="后端技术/Java系列/Java系列-Java并发编程.html">Java系列-Java并发编程</a></li><li><a href="后端技术/Java系列/Java系列-数据结构.html">Java系列-数据结构</a></li><li><a href="后端技术/Java系列/Java系列-Java8.html">Java系列-jdk1.8-Lambda表达式与Collections</a></li><li><a href="后端技术/Java系列/Java系列-Spring学习笔记1-Ioc与AOP.html">Java系列-Spring学习笔记1-Ioc与AOP</a></li><li><a href="后端技术/Java系列/Java系列-Spring学习笔记2-Spring核心组件.html">Java系列-Spring学习笔记2-Spring核心组件</a></li></ul><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ul><li><a href="后端技术/Python/Python-0-环境变量及Pycharm配置.html">Python环境变量及Pycharm配置</a></li></ul><h3 id="定时器Quartz"><a href="#定时器Quartz" class="headerlink" title="定时器Quartz"></a>定时器Quartz</h3><ul><li><a href="后端技术/Quartz/Quartz-学习笔记-相关概念.html">Quartz-学习笔记-相关概念</a></li><li><a href="后端技术/Quartz/Quartz-学习笔记1-小试牛刀.html">Quartz-学习笔记1-小试牛刀</a></li><li><a href="后端技术/Quartz/Quartz-学习笔记2-界面配置.html">Quartz-学习笔记2-界面配置</a></li></ul><h3 id="安全框架Shiro"><a href="#安全框架Shiro" class="headerlink" title="安全框架Shiro"></a>安全框架Shiro</h3><ul><li><a href="后端技术/Shiro/Shiro系列-学习笔记0-目录.html">Shiro系列-学习笔记0-目录</a></li><li><a href="后端技术/Shiro/Shiro系列-学习笔记1-基本概念.html">Shiro系列-学习笔记1-基本概念</a></li></ul><h3 id="SSM框架-整合笔记"><a href="#SSM框架-整合笔记" class="headerlink" title="SSM框架-整合笔记"></a>SSM框架-整合笔记</h3><ul><li><a href="后端技术/SSM框架-整合笔记.html">SSM框架-整合笔记-目录</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记0-详细注释.html">SSM框架-整合笔记0-详细注释</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记1-Druid和Webservice配置.html">SSM框架-整合笔记1-Druid和Webservice配置</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记2-视图解析器配置.html">SSM框架-整合笔记2-视图解析器配置</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记3-使用注解配置切面.html">SSM框架-整合笔记3-使用注解配置切面</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记4-统一异常处理.html">SSM框架-整合笔记4-统一异常处理</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记5-缓存配置Ehcache.html">SSM框架-整合笔记5-缓存配置Ehcache</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记6-配置Mybatis Generator.html">SSM框架-整合笔记6-配置MybatisGenerator</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记7-配置Swagger.html">SSM框架-整合笔记7-配置Swagger</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记8-Shiro介绍.html">SSM框架-整合笔记8-Shiro介绍</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记9-注解方式配置Quartz定时器.html">SSM框架-整合笔记9-注解方式配置Quartz定时器</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;后端技术-目录&quot;&gt;&lt;a href=&quot;#后端技术-目录&quot; class=&quot;headerlink&quot; title=&quot;后端技术-目录&quot;&gt;&lt;/a&gt;后端技术-目录&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;相关技术：Excel解析、Linux服务器、Windows Server、接口调试工具SoapUI、数据库MySQL、SQLServer、NoSQL、Oracle、PowerDesigner、Java相关知识、Python、定时器Quartz、安全框架Shiro、SSM框架等内容，请看下文文章目录。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工具使用-目录</title>
    <link href="https://www.wanglixia.top/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8.html"/>
    <id>https://www.wanglixia.top/工具使用.html</id>
    <published>2019-09-19T12:14:22.000Z</published>
    <updated>2019-09-19T15:16:05.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具使用-目录"><a href="#工具使用-目录" class="headerlink" title="工具使用-目录"></a>工具使用-目录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文记录开发过程中常用工具的使用及插件配置等。</p><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><ul><li><a href="工具使用/工具使用-Git-基本使用.html">工具使用-Git-基本使用</a></li><li><a href="工具使用/工具使用-GitBook-使用.html">工具使用-GitBook-使用</a></li><li><a href="工具使用/工具使用-Idea-常用插件.html">工具使用-Idea-常用插件</a></li><li><a href="工具使用/工具使用-Vmware-问题1.html">工具使用-Vmware-问题1</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;工具使用-目录&quot;&gt;&lt;a href=&quot;#工具使用-目录&quot; class=&quot;headerlink&quot; title=&quot;工具使用-目录&quot;&gt;&lt;/a&gt;工具使用-目录&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读书笔记-目录</title>
    <link href="https://www.wanglixia.top/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html"/>
    <id>https://www.wanglixia.top/读书笔记.html</id>
    <published>2019-09-19T12:14:00.000Z</published>
    <updated>2019-09-19T15:16:05.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="读书笔记-目录"><a href="#读书笔记-目录" class="headerlink" title="读书笔记-目录"></a>读书笔记-目录</h2><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><ul><li><a href="读书笔记/读书笔记-陀氏-穷人的美德.html">读书笔记-陀氏-穷人的美德</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;读书笔记-目录&quot;&gt;&lt;a href=&quot;#读书笔记-目录&quot; class=&quot;headerlink&quot; title=&quot;读书笔记-目录&quot;&gt;&lt;/a&gt;读书笔记-目录&lt;/h2&gt;&lt;h3 id=&quot;文章目录&quot;&gt;&lt;a href=&quot;#文章目录&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM框架-整合笔记-目录</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html"/>
    <id>https://www.wanglixia.top/后端技术/SSM框架-整合笔记.html</id>
    <published>2019-09-19T12:13:13.000Z</published>
    <updated>2019-09-19T15:16:05.876Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSM框架-整合笔记-目录"><a href="#SSM框架-整合笔记-目录" class="headerlink" title="SSM框架-整合笔记-目录"></a>SSM框架-整合笔记-目录</h2><h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><ul><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记0-详细注释.html">SSM框架-整合笔记0-详细注释</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记1-Druid和Webservice配置.html">SSM框架-整合笔记1-Druid和Webservice配置</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记2-视图解析器配置.html">SSM框架-整合笔记2-视图解析器配置</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记3-使用注解配置切面.html">SSM框架-整合笔记3-使用注解配置切面</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记4-统一异常处理.html">SSM框架-整合笔记4-统一异常处理</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记5-缓存配置Ehcache.html">SSM框架-整合笔记5-缓存配置Ehcache</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记6-配置Mybatis Generator.html">SSM框架-整合笔记6-配置Mybatis Generator</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记7-配置Swagger.html">SSM框架-整合笔记7-配置Swagger</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记8-Shiro介绍.html">SSM框架-整合笔记8-Shiro介绍</a></li><li><a href="后端技术/SSM框架-整合笔记/SSM框架-整合笔记9-注解方式配置Quartz定时器.html">SSM框架-整合笔记9-注解方式配置Quartz定时器</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SSM框架-整合笔记-目录&quot;&gt;&lt;a href=&quot;#SSM框架-整合笔记-目录&quot; class=&quot;headerlink&quot; title=&quot;SSM框架-整合笔记-目录&quot;&gt;&lt;/a&gt;SSM框架-整合笔记-目录&lt;/h2&gt;&lt;h2 id=&quot;文章目录&quot;&gt;&lt;a href=&quot;#文章目录&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RBAC权限管理系统设计</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/%E6%A1%86%E6%9E%B6/RBAC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.html"/>
    <id>https://www.wanglixia.top/后端技术/框架/RBAC权限管理系统设计.html</id>
    <published>2019-09-18T12:13:34.000Z</published>
    <updated>2019-09-19T15:16:05.930Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RBAC是什么"><a href="#RBAC是什么" class="headerlink" title="RBAC是什么"></a>RBAC是什么</h3><p>RBAC：（Role-Based-Access Control-基于角色的权限访问控制）。在RBAC中，角色和权限关联，不同的角色一般拥有不同的权限，用户拥有一个或者多个角色，在控制一类用户的权限时，需要授权或者回收某一角色的权限，将用户-角色-权限联系起来，关系表示如下：</p><center>![RBAC-2019918213812](http://img.wanglixia.top/RBAC-2019918213812.jpg)</center><h3 id="RBAC模型及分类"><a href="#RBAC模型及分类" class="headerlink" title="RBAC模型及分类"></a>RBAC模型及分类</h3><p>RBAC模型又可以分为RBAC0、RBAC1、RBAC2、RBAC3，RBAC0是基础，而RBAC1、RBAC2、RBAC3都是基于RBAC0的升级。</p><h4 id="1-RBAC0模型"><a href="#1-RBAC0模型" class="headerlink" title="1. RBAC0模型"></a>1. RBAC0模型</h4><p>RBAC0模型主要由用户、角色、权限组成。</p><ul><li>用户和角色的关系是多对一，每一个用户只能有一种角色；</li><li>用户和角色的关系是多对多，一个用户可以有多种角色；</li></ul><h4 id="2-RBAC1模型"><a href="#2-RBAC1模型" class="headerlink" title="2. RBAC1模型"></a>2. RBAC1模型</h4><p>RBAC1模型基于RBAC0，引入了子角色的概念，子角色可以继承父角色的所有权限。</p><h4 id="3-RBAC2模型"><a href="#3-RBAC2模型" class="headerlink" title="3. RBAC2模型"></a>3. RBAC2模型</h4><p>RBAC2模型基于RBAC0，对角色增加了一些限制：角色互斥、基数约束、先决条件角色、运行时互斥；</p><ul><li>角色互斥：同一用户不能分配到一组互斥角色集合中的多个角色，互斥角色是指权限互相制约的两个角色；</li><li>基数约束：一个角色被分配的用户数量受限，它指的是有多少用户能拥有这个角色；</li><li>先决条件角色：指要想获得较高的权限，要首先拥有低一级的权限；</li><li>运行时互斥：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色；</li></ul><h4 id="4-RBAC3模型"><a href="#4-RBAC3模型" class="headerlink" title="4. RBAC3模型"></a>4. RBAC3模型</h4><p>综合了RBAC0、RBAC1、RBAC2的所有特点。</p><h3 id="RBAC0-用户-角色-权限设计方案"><a href="#RBAC0-用户-角色-权限设计方案" class="headerlink" title="RBAC0 用户-角色-权限设计方案"></a>RBAC0 用户-角色-权限设计方案</h3><p>本文主要说明RBAC0模型的设计方案，其余三种升级版模型请自行拓展升级。</p><p>简单的权限管理系统由五张表组成：用户表、角色表、权限表、用户-角色关系表、角色-权限关系表，示例如下：</p><center>![RBAC-简单表结构-201991821560](http://img.wanglixia.top/RBAC-简单表结构-201991821560.jpg)</center><h3 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h3><p>建表脚本如下：</p><h4 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SYS_USER</span><br><span class="line">(</span><br><span class="line">   USER_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'用户ID'</span>,</span><br><span class="line">   NICKNAME             <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">comment</span> <span class="string">'昵称'</span>,</span><br><span class="line">   <span class="keyword">NAME</span>                 <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">comment</span> <span class="string">'姓名'</span>,</span><br><span class="line">   SEX                  <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">comment</span> <span class="string">'性别'</span>,</span><br><span class="line">   BIRTH                datetime <span class="keyword">comment</span> <span class="string">'出生日期'</span>,</span><br><span class="line">   AGE                  <span class="built_in">int</span>(<span class="number">3</span>) <span class="keyword">comment</span> <span class="string">'年龄'</span>,</span><br><span class="line">   AGE_TYPE             <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">comment</span> <span class="string">'年龄类型'</span>,</span><br><span class="line">   ICON                 <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">comment</span> <span class="string">'头像'</span>,</span><br><span class="line">   PHONE                <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">comment</span> <span class="string">'手机'</span>,</span><br><span class="line">   EMAIL                <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">comment</span> <span class="string">'邮箱'</span>,</span><br><span class="line">   ADDRESS              <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">comment</span> <span class="string">'地址'</span>,</span><br><span class="line">   <span class="keyword">LEVEL</span>                <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'用户级别-0:普通用户；1:管理员；2：超管</span></span><br><span class="line"><span class="string">            见字典表'</span>,</span><br><span class="line">   SIGNATURE            <span class="built_in">varchar</span>(<span class="number">300</span>) <span class="keyword">comment</span> <span class="string">'个性签名'</span>,</span><br><span class="line">   BRIEF                <span class="built_in">varchar</span>(<span class="number">300</span>) <span class="keyword">comment</span> <span class="string">'个人简介'</span>,</span><br><span class="line">   ACTIVE               <span class="built_in">boolean</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'激活状态-1：启用；0：禁用'</span>,</span><br><span class="line">   UPDATE_TIME          <span class="keyword">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'[系统]更新时间'</span>,</span><br><span class="line">   CREATE_TIME          <span class="keyword">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'[系统]创建时间'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="角色表"><a href="#角色表" class="headerlink" title="角色表"></a>角色表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SYS_ROLE</span><br><span class="line">(</span><br><span class="line">   ROLE_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'角色ID'</span>,</span><br><span class="line">   ROLE_NAME            <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'角色名称'</span>,</span><br><span class="line">   ROLE_KEY             <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">comment</span> <span class="string">'角色标识'</span>,</span><br><span class="line">   <span class="keyword">COMMENT</span>              <span class="built_in">varchar</span>(<span class="number">250</span>) <span class="keyword">comment</span> <span class="string">'描述'</span>,</span><br><span class="line">   ORDER_NO             <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'显示顺序'</span>,</span><br><span class="line">   <span class="keyword">TYPE</span>                 tinyint <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">2</span> <span class="keyword">comment</span> <span class="string">'角色类型-1：系统；2：用户'</span>,</span><br><span class="line">   ACTIVE               <span class="built_in">boolean</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'激活状态-1：启用；0：禁用'</span>,</span><br><span class="line">   CREATE_TIME          <span class="keyword">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'创建时间'</span>,</span><br><span class="line">   UPDATE_TIME          <span class="keyword">timestamp</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'更新时间'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="权限表-菜单表"><a href="#权限表-菜单表" class="headerlink" title="权限表(菜单表)"></a>权限表(菜单表)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SYS_MENU</span><br><span class="line">(</span><br><span class="line">   MENU_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'菜单ID'</span>,</span><br><span class="line">   MENU_NAME            <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'菜单名称'</span>,</span><br><span class="line">   <span class="keyword">LINK</span>                 <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">comment</span> <span class="string">'链接'</span>,</span><br><span class="line">   PCODE                <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">comment</span> <span class="string">'父级ID'</span>,</span><br><span class="line">   ICON                 <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">comment</span> <span class="string">'图标'</span>,</span><br><span class="line">   ICON_TYPE            tinyint <span class="keyword">comment</span> <span class="string">'图标类型：class；图片'</span>,</span><br><span class="line">   <span class="keyword">COMMENT</span>              <span class="built_in">varchar</span>(<span class="number">250</span>) <span class="keyword">comment</span> <span class="string">'描述'</span>,</span><br><span class="line">   <span class="keyword">OPEN</span>                 <span class="built_in">boolean</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'打开-1：打开；0：关闭；没有子级菜单的该字段无效'</span>,</span><br><span class="line">   OPEN_TYPE            tinyint <span class="keyword">comment</span> <span class="string">'打开方式-1：主容器打开'</span>,</span><br><span class="line">   ACTIVE               <span class="built_in">boolean</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'激活状态-1：启用；0：禁用'</span>,</span><br><span class="line">   <span class="keyword">LEVEL</span>                <span class="built_in">int</span> <span class="keyword">comment</span> <span class="string">'级别'</span>,</span><br><span class="line">   <span class="keyword">TYPE</span>                 tinyint <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">2</span> <span class="keyword">comment</span> <span class="string">'菜单类型-1：系统；2：用户'</span>,</span><br><span class="line">   ORDER_NO             <span class="built_in">int</span> <span class="keyword">comment</span> <span class="string">'序号'</span>,</span><br><span class="line">   PERMS                <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">comment</span> <span class="string">'权限标识'</span>,</span><br><span class="line">   IS_LEAF              <span class="built_in">boolean</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'是否叶子-1：是，0：否'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="用户-角色关系表"><a href="#用户-角色关系表" class="headerlink" title="用户-角色关系表"></a>用户-角色关系表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SYS_USER_ROLE</span><br><span class="line">(</span><br><span class="line">   USER_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'用户组ID'</span>,</span><br><span class="line">   ROLE_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'角色ID'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="角色-权限关系表"><a href="#角色-权限关系表" class="headerlink" title="角色-权限关系表"></a>角色-权限关系表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SYS_ROLE_RESOURCE</span><br><span class="line">(</span><br><span class="line">   ROLE_ID              <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'角色ID'</span>,</span><br><span class="line">   RESOURCE_ID          <span class="built_in">varchar</span>(<span class="number">36</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'资源ID：如MENU_ID、ELEMENT_ID、FILE_ID、FUNC_ID等'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;RBAC是什么&quot;&gt;&lt;a href=&quot;#RBAC是什么&quot; class=&quot;headerlink&quot; title=&quot;RBAC是什么&quot;&gt;&lt;/a&gt;RBAC是什么&lt;/h3&gt;&lt;p&gt;RBAC：（Role-Based-Access Control-基于角色的权限访问控制）。在RBAC
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shiro学习笔记1</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Shiro/Shiro%E7%B3%BB%E5%88%97-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"/>
    <id>https://www.wanglixia.top/后端技术/Shiro/Shiro系列-学习笔记1-基本概念.html</id>
    <published>2019-09-18T11:58:08.000Z</published>
    <updated>2019-09-19T15:16:05.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Shiro基本概念"><a href="#Shiro基本概念" class="headerlink" title="Shiro基本概念"></a>Shiro基本概念</h2><h3 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h3><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><h3 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h3><h3 id="与Web集成"><a href="#与Web集成" class="headerlink" title="与Web集成"></a>与Web集成</h3><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Shiro基本概念&quot;&gt;&lt;a href=&quot;#Shiro基本概念&quot; class=&quot;headerlink&quot; title=&quot;Shiro基本概念&quot;&gt;&lt;/a&gt;Shiro基本概念&lt;/h2&gt;&lt;h3 id=&quot;认证&quot;&gt;&lt;a href=&quot;#认证&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shiro学习目录</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Shiro/Shiro%E7%B3%BB%E5%88%97-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00-%E7%9B%AE%E5%BD%95.html"/>
    <id>https://www.wanglixia.top/后端技术/Shiro/Shiro系列-学习笔记0-目录.html</id>
    <published>2019-09-18T11:56:28.000Z</published>
    <updated>2019-09-19T15:16:05.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Shiro系列学习目录"><a href="#Shiro系列学习目录" class="headerlink" title="Shiro系列学习目录"></a>Shiro系列学习目录</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>什么是权限管理？</p><p>权限管理用于限制用户的登录验证以及限制其访问且仅能访问自己被授权的资源，几乎任何系统里面都有权限管理，不同权限的用户所能查看的页面、数据以及所能进行的操作都是有限制的。<br>在一般的权限管理系统中，会引入角色的概念（如超级管理员、管理员、VIP用户、普通用户等），方便管理同一类（多个）用户的权限，常见的是RBAC（Role-Based-Access Control-基于角色的权限访问控制），在RBAC中，角色和权限关联，不同的角色一般拥有不同的权限，用户拥有一个或者多个角色，在控制一类用户的权限时，需要授权或者回收某一角色的权限，将用户-角色-权限联系起来。详细内容及一般权限管理系统的设计请见下文链接（《RBAC权限管理系统设计》），本文不做赘述。</p><h3 id="一、Shiro到底是什么，能干什么？"><a href="#一、Shiro到底是什么，能干什么？" class="headerlink" title="一、Shiro到底是什么，能干什么？"></a>一、Shiro到底是什么，能干什么？</h3><p>网页上搜索Shiro去看其讲解以及说明，就可以看到类似以下内容的定义：</p><blockquote><p>Shiro是一个安全框架，可以用来帮助我们完成：认证、授权、加密以及会话管理，与Web集成、缓存等。</p></blockquote><p>这里可以看到几个名词，在下面的内容里，将会对这些名称一一加以解释并在实际代码中进行说明。</p><p>本文用于记录自己学习Shiro框架的过程以及自己对于Shiro的理解，感兴趣的话可以加好友或者给本文留言交流学习。</p><h3 id="二、Shiro的整体架构"><a href="#二、Shiro的整体架构" class="headerlink" title="二、Shiro的整体架构"></a>二、Shiro的整体架构</h3><p><img src="http://img.wanglixia.top/shiro-整体架构-201949225012.png" alt="shiro-整体架构-201949225012"></p><p>系列文章链接：</p><ul><li><a href="RBAC权限管理系统设计.html">RBAC权限管理系统设计</a></li><li><a href="Shiro系列-学习笔记1-基本概念.html">Shiro系列-学习笔记1-基本概念</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Shiro系列学习目录&quot;&gt;&lt;a href=&quot;#Shiro系列学习目录&quot; class=&quot;headerlink&quot; title=&quot;Shiro系列学习目录&quot;&gt;&lt;/a&gt;Shiro系列学习目录&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[目录]基础知识目录</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Java%E7%B3%BB%E5%88%97/Java%E7%B3%BB%E5%88%97-%E7%9B%AE%E5%BD%95.html"/>
    <id>https://www.wanglixia.top/后端技术/Java系列/Java系列-目录.html</id>
    <published>2019-08-18T16:14:51.000Z</published>
    <updated>2019-09-19T15:16:05.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础知识系列博客目录"><a href="#基础知识系列博客目录" class="headerlink" title="基础知识系列博客目录"></a>基础知识系列博客目录</h2><ul><li>一、Java相关<ol><li>Java基础</li><li>Java并发编程</li><li>Java垃圾回收</li><li>Java虚拟机</li><li>常见概念区别</li></ol></li><li>二、数据结构</li><li>三、框架<ol><li>Spring基础</li><li>SpringBoot</li><li>SpringCloud</li><li>SpringMVC</li><li>Mybatis</li><li>Velocity </li></ol></li><li>四、数据库<ol><li>MySQL</li><li>MSSQL</li><li>Oracle</li><li>Redis</li><li>MongoDB</li></ol></li><li>五、Web服务器<ol><li>Tomcat</li><li>Jetty</li><li>Nginx</li></ol></li><li>六、Linux</li><li>七、JavaScript</li><li>八、Vue</li><li>九、Restful<ul><li>1.swagger</li></ul></li><li>十、二十三种设计模式</li></ul><a id="more"></a><h2 id="语言知识"><a href="#语言知识" class="headerlink" title="语言知识"></a>语言知识</h2><h3 id="一、Java相关"><a href="#一、Java相关" class="headerlink" title="一、Java相关"></a>一、Java相关</h3><h4 id="1-Java基础"><a href="#1-Java基础" class="headerlink" title="1.Java基础"></a>1.Java基础</h4><ul><li><a href="Java系列-Java基础知识.html">Java基础知识</a></li></ul><h4 id="2-Java并发编程"><a href="#2-Java并发编程" class="headerlink" title="2.Java并发编程"></a>2.Java并发编程</h4><ul><li><a href="Java系列-Java并发编程.html">Java并发编程</a></li></ul><h4 id="3-Java垃圾回收"><a href="#3-Java垃圾回收" class="headerlink" title="3.Java垃圾回收"></a>3.Java垃圾回收</h4><h4 id="4-Java虚拟机"><a href="#4-Java虚拟机" class="headerlink" title="4.Java虚拟机"></a>4.Java虚拟机</h4><h4 id="5-常见概念区别"><a href="#5-常见概念区别" class="headerlink" title="5.常见概念区别"></a>5.常见概念区别</h4><h3 id="二、数据结构"><a href="#二、数据结构" class="headerlink" title="二、数据结构"></a>二、数据结构</h3><ul><li><a href="Java系列-数据结构.html">数据结构</a></li></ul><h3 id="三、框架"><a href="#三、框架" class="headerlink" title="三、框架"></a>三、框架</h3><h4 id="1-Spring基础"><a href="#1-Spring基础" class="headerlink" title="1.Spring基础"></a>1.Spring基础</h4><ul><li><a href="Java系列-Spring学习笔记1-Ioc与AOP.html">Spring系列学习之IoC与AOP</a></li><li><a href="Java系列-Spring学习笔记2-Spring核心组件.html">Spring系列学习之Spring核心组件</a></li></ul><h4 id="2-SpringBoot"><a href="#2-SpringBoot" class="headerlink" title="2.SpringBoot"></a>2.SpringBoot</h4><h4 id="3-SpringCloud"><a href="#3-SpringCloud" class="headerlink" title="3.SpringCloud"></a>3.SpringCloud</h4><h4 id="4-SpringMVC"><a href="#4-SpringMVC" class="headerlink" title="4.SpringMVC"></a>4.SpringMVC</h4><h4 id="5-Mybatis"><a href="#5-Mybatis" class="headerlink" title="5.Mybatis"></a>5.Mybatis</h4><h3 id="四、数据库"><a href="#四、数据库" class="headerlink" title="四、数据库"></a>四、数据库</h3><h4 id="1-MySQL"><a href="#1-MySQL" class="headerlink" title="1.MySQL"></a>1.MySQL</h4><ul><li>[ ]索引原理</li><li>[ ]数据库优化</li><li>[ ]如何建立索引</li><li>[ ]主从数据库如何搭建</li><li>[ ]存过、函数、视图的区别以及写法</li><li>[ ]常用工具方法</li></ul><h4 id="2-MSSQL"><a href="#2-MSSQL" class="headerlink" title="2.MSSQL"></a>2.MSSQL</h4><h4 id="3-Oracle"><a href="#3-Oracle" class="headerlink" title="3.Oracle"></a>3.Oracle</h4><h4 id="4-Redis"><a href="#4-Redis" class="headerlink" title="4. Redis"></a>4. Redis</h4><h4 id="5-MongoDB"><a href="#5-MongoDB" class="headerlink" title="5. MongoDB"></a>5. MongoDB</h4><h3 id="五、Web服务器"><a href="#五、Web服务器" class="headerlink" title="五、Web服务器"></a>五、Web服务器</h3><h4 id="1-Tomcat"><a href="#1-Tomcat" class="headerlink" title="1.Tomcat"></a>1.Tomcat</h4><h4 id="2-Jetty"><a href="#2-Jetty" class="headerlink" title="2.Jetty"></a>2.Jetty</h4><h4 id="3-Nginx"><a href="#3-Nginx" class="headerlink" title="3.Nginx"></a>3.Nginx</h4><h3 id="六、Linux"><a href="#六、Linux" class="headerlink" title="六、Linux"></a>六、Linux</h3><h3 id="七、JavaScript"><a href="#七、JavaScript" class="headerlink" title="七、JavaScript"></a>七、JavaScript</h3><h3 id="八、Vue"><a href="#八、Vue" class="headerlink" title="八、Vue"></a>八、Vue</h3><h3 id="九、Restful"><a href="#九、Restful" class="headerlink" title="九、Restful"></a>九、Restful</h3><h4 id="1-swagger"><a href="#1-swagger" class="headerlink" title="1.swagger"></a>1.swagger</h4><h3 id="十、二十三种设计模式"><a href="#十、二十三种设计模式" class="headerlink" title="十、二十三种设计模式"></a>十、二十三种设计模式</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础知识系列博客目录&quot;&gt;&lt;a href=&quot;#基础知识系列博客目录&quot; class=&quot;headerlink&quot; title=&quot;基础知识系列博客目录&quot;&gt;&lt;/a&gt;基础知识系列博客目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一、Java相关&lt;ol&gt;
&lt;li&gt;Java基础&lt;/li&gt;
&lt;li&gt;Java并发编程&lt;/li&gt;
&lt;li&gt;Java垃圾回收&lt;/li&gt;
&lt;li&gt;Java虚拟机&lt;/li&gt;
&lt;li&gt;常见概念区别&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;二、数据结构&lt;/li&gt;
&lt;li&gt;三、框架&lt;ol&gt;
&lt;li&gt;Spring基础&lt;/li&gt;
&lt;li&gt;SpringBoot&lt;/li&gt;
&lt;li&gt;SpringCloud&lt;/li&gt;
&lt;li&gt;SpringMVC&lt;/li&gt;
&lt;li&gt;Mybatis&lt;/li&gt;
&lt;li&gt;Velocity &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;四、数据库&lt;ol&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MSSQL&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;五、Web服务器&lt;ol&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;li&gt;Jetty&lt;/li&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;六、Linux&lt;/li&gt;
&lt;li&gt;七、JavaScript&lt;/li&gt;
&lt;li&gt;八、Vue&lt;/li&gt;
&lt;li&gt;九、Restful&lt;ul&gt;
&lt;li&gt;1.swagger&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;十、二十三种设计模式&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Java" scheme="https://www.wanglixia.top/tags/Java/"/>
    
      <category term="Spring" scheme="https://www.wanglixia.top/tags/Spring/"/>
    
      <category term="Oracle" scheme="https://www.wanglixia.top/tags/Oracle/"/>
    
      <category term="MySQL" scheme="https://www.wanglixia.top/tags/MySQL/"/>
    
      <category term="Linux" scheme="https://www.wanglixia.top/tags/Linux/"/>
    
      <category term="JavaScript" scheme="https://www.wanglixia.top/tags/JavaScript/"/>
    
      <category term="SpringBoot" scheme="https://www.wanglixia.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Java并发编程</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Java%E7%B3%BB%E5%88%97/Java%E7%B3%BB%E5%88%97-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B.html"/>
    <id>https://www.wanglixia.top/后端技术/Java系列/Java系列-Java并发编程.html</id>
    <published>2019-07-31T17:17:58.000Z</published>
    <updated>2019-09-19T15:16:05.895Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Java%E7%B3%BB%E5%88%97/Java%E7%B3%BB%E5%88%97-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"/>
    <id>https://www.wanglixia.top/后端技术/Java系列/Java系列-数据结构.html</id>
    <published>2019-07-31T12:40:29.000Z</published>
    <updated>2019-09-19T15:16:05.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h4 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h4><p>抽象数据类型（Abstract Data Type）：一是数据对象集，二是与数据集合相关联的操作集；</p><blockquote><p>类型名称：矩阵<br>数据对象集：一个m <em> n的矩阵由 m </em> n个三元组<a, i, j>构成，其中a是矩阵元素的值，i是元素所在的行号，j是元素所在的列号。</a,></p></blockquote><p><strong>算法（algorithm）</strong><br>算法是一个有限指令集，它接收一些输入（有些情况下不需要输入），产生输出，并一定在有限步骤之后终止。<br>算法复杂度：</p><ul><li>空间复杂度S(n)：根据算法写成的程序在执行时<strong>占用存储单元的长度</strong>。这个长度往往与输入数据的规模n有关。空间复杂度过高的算法可能导致占用内存超限，造成程序非正常中断。</li><li>时间复杂度T(n)：根据算法写成的程序在执行时<strong>耗费时间的长度</strong>。这个长度往往也与输入数据的规模n有关。时间复杂度过高的低效算法可能导致我们有生之年都等不到运行结果。</li></ul><p>一般而言，在分析算法的效率时，经常关注下面两种复杂度：最坏情况复杂度T<sub>worst</sub>(n)和平均复杂度T<sub>avg</sub>(n)</p><p>渐近表示法：</p><ul><li>T(n) = O(f(n))：表示存在常数C&gt;0, n<sub>0</sub>&gt;0，使得当n&gt;=n<sub>0</sub>时有T(n)&lt;=C(f(n))。</li><li>T(n) = Ω(g(n))：表示存在常数C&gt;0,n<sub>0</sub>&gt;0，使得当n&gt;=n<sub>0</sub>时有T(n)&gt;=C(g(n))。</li><li>T(n) = Θ(h(n))：表示同时有T(n)=O(h(n))和T(n)=Ω(h(n))；（线性复杂度）。</li></ul><p><strong>注意</strong><br>O( <em> ) 和 Ω( </em> )分别表示上界和下届，但一个函数可以有很多不同的上界和下界。一般地我们希望上下界越接近真实函数越好，所以通常取最小的上界作为O函数，最大的下界作为Ω函数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;h4 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据结构" scheme="https://www.wanglixia.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Creat_react_app部署方式</title>
    <link href="https://www.wanglixia.top/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Creat-react-app-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F.html"/>
    <id>https://www.wanglixia.top/前端技术/Creat-react-app-使用笔记-部署方式.html</id>
    <published>2019-07-23T07:25:50.000Z</published>
    <updated>2019-09-19T15:16:05.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Creat-react-app部署方式"><a href="#Creat-react-app部署方式" class="headerlink" title="Creat_react_app部署方式"></a>Creat_react_app部署方式</h2><h2 id="项目常用命令"><a href="#项目常用命令" class="headerlink" title="项目常用命令"></a>项目常用命令</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="错误集合"><a href="#错误集合" class="headerlink" title="错误集合"></a>错误集合</h2><h3 id="使用npm-install-报错’react-scripts’-不是内部或外部命令，也不是可运行的程序或批处理文件。"><a href="#使用npm-install-报错’react-scripts’-不是内部或外部命令，也不是可运行的程序或批处理文件。" class="headerlink" title="使用npm install 报错’react-scripts’ 不是内部或外部命令，也不是可运行的程序或批处理文件。"></a>使用npm install 报错’react-scripts’ 不是内部或外部命令，也不是可运行的程序或批处理文件。</h3><p>解决办法：</p><ol><li><p>配置npm包地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></li><li><p>检查地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></li><li><p>清除npm缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure></li><li><p>再重新npm安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm instanll</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Creat-react-app部署方式&quot;&gt;&lt;a href=&quot;#Creat-react-app部署方式&quot; class=&quot;headerlink&quot; title=&quot;Creat_react_app部署方式&quot;&gt;&lt;/a&gt;Creat_react_app部署方式&lt;/h2&gt;&lt;h2 i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python环境变量及Pycharm配置</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Python/Python-0-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%8F%8APycharm%E9%85%8D%E7%BD%AE.html"/>
    <id>https://www.wanglixia.top/后端技术/Python/Python-0-环境变量及Pycharm配置.html</id>
    <published>2019-07-22T10:22:09.000Z</published>
    <updated>2019-09-19T15:16:05.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python环境变量及Pycharm配置"><a href="#python环境变量及Pycharm配置" class="headerlink" title="python环境变量及Pycharm配置"></a>python环境变量及Pycharm配置</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="python环境配置"><a href="#python环境配置" class="headerlink" title="python环境配置"></a>python环境配置</h4><ul><li>下载:<a href="https://www.python.org/downloads/" rel="external nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/</a></li><li>双击运行 python-2.7.13.msi，一路next，然后将 C:\Python27 添加至 Path 环境变量。</li><li><p>cmd打开命令窗口，输入<code>python</code>出现以下内容，配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:42:59) [MSC v.1500 32 bit (Intel)] on win32</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure></li><li><p>[使用]安装pip，cmd窗口下，<code>python -m pip install -U pip</code>, 等待完成。出现<code>Successfully installed pip-19.1.1</code>安装成功。</p></li><li>[不使用]下载最新版pip安装包，<a href="https://pypi.org/project/pip/#files" rel="external nofollow noopener noreferrer" target="_blank">https://pypi.org/project/pip/#files</a>；解压 pip-19.1.1.tar.gz 到指定目录，cmd进入该目录，执行 python setup.py install 进行安装，然后将 C:\Python27\Scripts 添加至 Path 环境变量。</li><li><p>安装依赖<br><br>  <code>pip install -r requirements.txt</code></p></li><li><p>打包exe<br><br>  运行 pyinstaller aaa.py 进行打包exe。   </p></li><li><p>pip文档：<a href="https://pip.pypa.io/en/stable/installing/" rel="external nofollow noopener noreferrer" target="_blank">https://pip.pypa.io/en/stable/installing/</a>；</p></li></ul><h4 id="卸载pip"><a href="#卸载pip" class="headerlink" title="卸载pip"></a>卸载pip</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip uninstall pip</span><br></pre></td></tr></table></figure><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><h4 id="Pycharm报：Please-select-a-valid-Python-interpreter"><a href="#Pycharm报：Please-select-a-valid-Python-interpreter" class="headerlink" title="Pycharm报：Please select a valid Python interpreter"></a>Pycharm报：Please select a valid Python interpreter</h4><p>打开setting<br>输入interpreter，看到project interpreter，选择一个Project Interpreter</p><p><img src="http://img.wanglixia.top/pycharm使用-201972218231.png" alt="pycharm使用-201972218231"></p><h3 id="Traceback-most-recent-call-last"><a href="#Traceback-most-recent-call-last" class="headerlink" title="Traceback (most recent call last):"></a>Traceback (most recent call last):</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"D:\DevTools\JetBrains\PyCharm 2018.3.7\helpers\pydev\pydevd.py"</span>, line 1741, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    main()</span><br><span class="line">  File <span class="string">"D:\DevTools\JetBrains\PyCharm 2018.3.7\helpers\pydev\pydevd.py"</span>, line 1735, <span class="keyword">in</span> main</span><br><span class="line">    globals = debugger.run(setup[<span class="string">'file'</span>], None, None, is_module)</span><br><span class="line">  File <span class="string">"D:\DevTools\JetBrains\PyCharm 2018.3.7\helpers\pydev\pydevd.py"</span>, line 1135, <span class="keyword">in</span> run</span><br><span class="line">    pydev_imports.execfile(file, globals, locals)  <span class="comment"># execute the script</span></span><br><span class="line">  File <span class="string">"D:/kyee/projects/EMR/medinsproxy/app.py"</span>, line 4, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from adapter import *</span><br><span class="line">  File <span class="string">"D:\kyee\projects\EMR\medinsproxy\adapter.py"</span>, line 14, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    fileConfig(<span class="string">'./logging.conf'</span>)</span><br><span class="line">  File <span class="string">"D:\DevTools\Python27\lib\logging\config.py"</span>, line 77, <span class="keyword">in</span> fileConfig</span><br><span class="line">    formatters = _create_formatters(cp)</span><br><span class="line">  File <span class="string">"D:\DevTools\Python27\lib\logging\config.py"</span>, line 113, <span class="keyword">in</span> _create_formatters</span><br><span class="line">    flist = cp.get(<span class="string">"formatters"</span>, <span class="string">"keys"</span>)</span><br><span class="line">  File <span class="string">"D:\DevTools\Python27\lib\ConfigParser.py"</span>, line 607, <span class="keyword">in</span> get</span><br><span class="line">    raise NoSectionError(section)</span><br><span class="line">ConfigParser.NoSectionError: No section: <span class="string">'formatters'</span></span><br></pre></td></tr></table></figure><p>解决办法【暂未解决】：执行<code>pip install medinsproxy</code>;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;python环境变量及Pycharm配置&quot;&gt;&lt;a href=&quot;#python环境变量及Pycharm配置&quot; class=&quot;headerlink&quot; title=&quot;python环境变量及Pycharm配置&quot;&gt;&lt;/a&gt;python环境变量及Pycharm配置&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql数据库常用方式</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F.html"/>
    <id>https://www.wanglixia.top/后端技术/数据库/Mysql数据库常用方式.html</id>
    <published>2019-06-30T08:07:07.000Z</published>
    <updated>2019-09-19T15:16:05.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要："><a href="#概要：" class="headerlink" title="概要："></a>概要：</h2><ul><li>修改数据库编码；</li><li>更改数据库名；<a id="more"></a><h2 id="修改数据库编码："><a href="#修改数据库编码：" class="headerlink" title="修改数据库编码："></a>修改数据库编码：</h2>utf8mb4的最低mysql版本支持版本为5.5.3+，若不是，请升级到较新版本。<h3 id="1-先修改my-ini"><a href="#1-先修改my-ini" class="headerlink" title="1. 先修改my.ini"></a>1. 先修改my.ini</h3>my.ini 文件，找到以下几项或者在[client]、[mysql]、[mysqld]下面按照如下位置添加对应编码，设置为utf8mb4；我的是MySQL5.6版本，my.ini没有再安装目录，在以下目录：<code>C:\ProgramData\MySQL\MySQL Server 5.6</code></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysql]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysqld]</span> </span><br><span class="line"><span class="attr">character-set-client-handshake</span> = <span class="literal">FALSE</span> </span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4 </span><br><span class="line"><span class="attr">collation-server</span> = utf8mb4_unicode_ci </span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8mb4'</span></span><br></pre></td></tr></table></figure><p>重启MySQL服务，查看编码的脚本：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">WHERE</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'character\_set\_%'</span> <span class="keyword">OR</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure></p><h3 id="2-数据库连接的配置"><a href="#2-数据库连接的配置" class="headerlink" title="2. 数据库连接的配置"></a>2. 数据库连接的配置</h3><p>数据库连接参数中:<br>characterEncoding=utf8会被自动识别为utf8mb4，也可以不加这个参数，会自动检测。<br>而autoReconnect=true是必须加上的。</p><h3 id="3-修改列编码"><a href="#3-修改列编码" class="headerlink" title="3. 修改列编码"></a>3. 修改列编码</h3><p>将数据库和已经建好的表也转换成utf8mb4<br>更改数据库编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> LX_NOTE <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>更改表编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME SYS_MENU <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 COLLATEutf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>如有必要，还可以更改列的编码</p><h2 id="更改数据库名"><a href="#更改数据库名" class="headerlink" title="更改数据库名"></a>更改数据库名</h2><h3 id="1-！！！备份数据库！！！"><a href="#1-！！！备份数据库！！！" class="headerlink" title="1. ！！！备份数据库！！！"></a><strong>1. ！！！备份数据库！！！</strong></h3><h3 id="2-脚本-mysql-rename-sh"><a href="#2-脚本-mysql-rename-sh" class="headerlink" title="2. 脚本 mysql_rename.sh"></a>2. 脚本 mysql_rename.sh</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mysql -uroot -p<span class="string">'lucifer'</span> --host=127.0.0.1 -e <span class="string">'create database if not exists LX_NOTE DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci'</span></span><br><span class="line"></span><br><span class="line">list_table=$(mysql -uroot -plucifer --host=127.0.0.1 -Nse <span class="string">"select table_name from information_schema.TABLES where TABLE_SCHEMA='SSM_NOTE'"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> table <span class="keyword">in</span> <span class="variable">$list_table</span>  </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="comment">#echo $TABLE</span></span><br><span class="line">    mysql -uroot -plucifer --host=127.0.0.1 -e <span class="string">"rename table SSM_NOTE.<span class="variable">$table</span> to LX_NOTE.<span class="variable">$table</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="3-cmd命令窗口运行该脚本，参考命令如下："><a href="#3-cmd命令窗口运行该脚本，参考命令如下：" class="headerlink" title="3. cmd命令窗口运行该脚本，参考命令如下："></a>3. cmd命令窗口运行该脚本，参考命令如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 5.6\bin&gt;e:mysql_rename.sh</span><br></pre></td></tr></table></figure><h3 id="4-完成后就发现数据库已经移动过去了。"><a href="#4-完成后就发现数据库已经移动过去了。" class="headerlink" title="4. 完成后就发现数据库已经移动过去了。"></a>4. 完成后就发现数据库已经移动过去了。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要：&quot;&gt;&lt;a href=&quot;#概要：&quot; class=&quot;headerlink&quot; title=&quot;概要：&quot;&gt;&lt;/a&gt;概要：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;修改数据库编码；&lt;/li&gt;
&lt;li&gt;更改数据库名；
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之界面配置（二）</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Quartz/Quartz-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E7%95%8C%E9%9D%A2%E9%85%8D%E7%BD%AE.html"/>
    <id>https://www.wanglixia.top/后端技术/Quartz/Quartz-学习笔记2-界面配置.html</id>
    <published>2019-06-26T15:55:44.000Z</published>
    <updated>2019-09-19T15:16:05.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>通过xml配置一个调度器Scheduler，所有的任务通过该调度器来进行调度，结合官方提供的数据结构以及调度实现来达到前端控制定时器的目的。<br><a id="more"></a></p><h2 id="调度器Scheduler的作用"><a href="#调度器Scheduler的作用" class="headerlink" title="调度器Scheduler的作用"></a>调度器Scheduler的作用</h2><p>调度器是Quartz的核心组成部分，其作用是调度Job能够被Trigger触发，是Quartz的驱动。<br>下图是列出来的定时器的核心概念、组成部分以及<br><img src="http://img.wanglixia.top/Quartz-2019713202637.png" alt="Quartz-2019713202637"></p><h3 id="调度器的创建"><a href="#调度器的创建" class="headerlink" title="调度器的创建"></a>调度器的创建</h3><p>Scheduler的实现类有以下几个：<br><img src="http://img.wanglixia.top/Scheduler的实现类-201962701223.png" alt="Scheduler的实现类-201962701223"></p><ul><li>RemoteScheduler: 远程调度器；</li><li>StdScheduler：默认标准调度器（最为常用的）；</li><li>RemoteMBeanScheduler：抽象类，<ul><li>JBoss4RMIRemoteMBeanScheduler：是抽象类<code>RemoteMBeanScheduler</code> 的实现类<br>调度器的创建主要是通过其工厂模式创建的，创建方式有：</li></ul></li><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li><li>通过<code>new StdSchedulerFactory().getScheduler();</code> 来获取调度器。</li></ul></li><li>DirectSchedulerFactory；</li></ul><p>定时器创建以后，可以进行增加、删除以及显示Job和Trigger，对Job进行暂停/恢复等操作，调用了.start()方法后，Scheduler才正式开始执行Job和Trigger；</p><h4 id="StdSchedulerFactory"><a href="#StdSchedulerFactory" class="headerlink" title="StdSchedulerFactory"></a>StdSchedulerFactory</h4><p>StdSchedulerFactory依赖于一系列属性决定如何产生Scheduler，提供配置信息的方式如下：</p><ul><li>通过java.util.Properties属性实例；</li><li>通过外部属性文件提供；</li><li>通过含有属性文件内容的java.io.InputStream提供；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 无参方法，会优先加载当前工作目录的quartz.properties，如果未找到，则试图从系统的classpath中加载该配置文件。</span></span><br><span class="line">        factory.initialize();</span><br><span class="line"><span class="comment">// 2.通过外部属性文件提供</span></span><br><span class="line"><span class="comment">//        factory.initialize("lx-quartz-scheduler.properties");</span></span><br><span class="line"><span class="comment">// 3. 通过含有属性文件内容的java.io.InputStream提供</span></span><br><span class="line"><span class="comment">//        factory.initialize(new FileInputStream(new File("lx-quartz-scheduler.properties")));</span></span><br><span class="line">scheduler = factory.getScheduler(<span class="string">"quartzScheduler"</span>);</span><br></pre></td></tr></table></figure><h3 id="前端控制定时器暂停、恢复等核心方法"><a href="#前端控制定时器暂停、恢复等核心方法" class="headerlink" title="前端控制定时器暂停、恢复等核心方法"></a>前端控制定时器暂停、恢复等核心方法</h3><p>原理：配置定时器项目默认调度器名字，并结合quartz官方提供的表结构以及自动从数据库加载定时器配置的机制，使用调度器Scheduler的几个核心方法结合数据库配置达到使用前端界面控制定时器恢复、执行等操作。</p><ul><li>void start(); // 启动</li><li>void standby();// 挂起</li><li>void shutdown();// 关闭</li><li>void shutdown(true); //  等待所有正在执行的job执行完毕之后，再关闭scheduler；</li></ul><h4 id="暂停定时器核心方法"><a href="#暂停定时器核心方法" class="headerlink" title="暂停定时器核心方法"></a>暂停定时器核心方法</h4><p><em>修改数据库的执行器状态</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">updateJobStatus</span><span class="params">(QuartzJobInfo job)</span> </span>&#123;</span><br><span class="line">    QuartzTriggers triggers = <span class="keyword">new</span> QuartzTriggers();</span><br><span class="line">    triggers.setSchedName(job.getSchedName());</span><br><span class="line">    triggers.setTriggerGroup(job.getTriggerGroup());</span><br><span class="line">    triggers.setTriggerName(job.getTriggerName());</span><br><span class="line">    triggers.setTriggerState(job.getTriggerState());</span><br><span class="line">    quartzTriggersDao.updateByPrimaryKeySelective(triggers);</span><br><span class="line">    <span class="keyword">if</span> (QRTZ_TRIGGER_STATUS_WAITING.equals(job.getTriggerState())) &#123;</span><br><span class="line">        quartzManager.resumeJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        quartzManager.pauseJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Message.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 调度器暂停Job</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.pauseJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="恢复定时器核心方法"><a href="#恢复定时器核心方法" class="headerlink" title="恢复定时器核心方法"></a>恢复定时器核心方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调度器恢复Job</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.resumeJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://img.wanglixia.top/quartz界面-2019713204052.png" alt="quartz界面-2019713204052"></p><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><h4 id="定时器配置：SimpleTrigger和CronTrigger"><a href="#定时器配置：SimpleTrigger和CronTrigger" class="headerlink" title="定时器配置：SimpleTrigger和CronTrigger"></a>定时器配置：SimpleTrigger和CronTrigger</h4><p>spring-servlet.xml 中添加配置，用于托付给spring来管理；</p><ul><li>配置JobDetail；</li><li>配置Trigger；</li><li>配置Scheduler；<br>首先配置JobDetail，前面的概念中也了解到定义的方式，方式如下：</li><li>MethodInvokingJobDetailFactoryBean</li><li>JobDetailFactoryBean：可以传入参数jobDataMap；比较灵活；</li><li>extends QuartzJobBean</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式一： MethodInvokingJobDetailFactoryBean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetail"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetObject"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetMethod"</span> <span class="attr">value</span>=<span class="string">"init"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式二：JobDetailFactoryBean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetailBean1"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.JobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobClass"</span> <span class="attr">value</span>=<span class="string">"com.weyoung.platform.quartz.schedule.LxQuartzJobBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 传入自定义参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDataMap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"anotherBean"</span> <span class="attr">value-ref</span>=<span class="string">"anotherBean"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"durability"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式一：SimpleTriggerFactoryBean 距离当前时间1秒之后执行，之后每隔两秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxSimpleTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startDelay"</span> <span class="attr">value</span>=<span class="string">"1000"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"repeatInterval"</span> <span class="attr">value</span>=<span class="string">"2000"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式二：CronTriggerFactoryBean 每隔五秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxCronTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.CronTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cronExpression"</span> <span class="attr">value</span>=<span class="string">"0/5 * * ? * *"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetails"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"triggers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxSimpleTrigger"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxCronTrigger"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，定义的类lxJobDetailBean、lxJobDetailBean1、anotherBean代码如下：<br>LxJobDetailBean.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"lxJobDetailBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobDetailBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobDetailBean.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"-----------lxJobDetailBean.init-----------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>LxQuartzJobBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.entity.AnotherBean;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxQuartzJobBean</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个需要传入的参数，并给一个setter方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AnotherBean anotherBean;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxQuartzJobBean.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务逻辑</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobExecutionContext</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> JobExecutionException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"---------LxQuartzJobBean.executeInternal---------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAnotherBean</span><span class="params">(AnotherBean anotherBean)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.anotherBean = anotherBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AnotherBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"anotherBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">someMessage</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/定时器两种方式配置执行结果-2019629135035.png" alt="定时器两种方式配置执行结果-2019629135035"></p><h3 id="Quartz中作业存储方式"><a href="#Quartz中作业存储方式" class="headerlink" title="Quartz中作业存储方式"></a>Quartz中作业存储方式</h3><ul><li>RAMJobStore：作业、触发器、调度信息存储在内存中，这种方式存取速度比较快，但是如果定时器项目重启或者崩溃的话，存储的信息都会丢失；</li><li>JDBC作业存储：作业、触发器、调度信息存储在数据库中，支持事务，支持集群；</li></ul><p>前面的笔记里面记录了Quartz官方提供的表结构及创建脚本等，使用该脚本创建数据库；</p><h4 id="修改调度器信息及使用quartz-propertie文件配置"><a href="#修改调度器信息及使用quartz-propertie文件配置" class="headerlink" title="修改调度器信息及使用quartz.propertie文件配置"></a>修改调度器信息及使用quartz.propertie文件配置</h4><p>我的项目暂时是把定时器放在项目主程序中，也是使用同一个数据库，当然也可以分开。如果需要自己配置数据库的话，在quartz.properties中配置就行。<br>因此，修改<code>spring-quartz.xml</code>配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 调度器，调度器的id不要改，数据库中记录调度器名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用spring中配置的数据源，需要在这儿配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"masterDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"overwriteExistingJobs"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--覆盖JOB：true、以数据库中已经存在的为准： --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoStartup"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--自启动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startupDelay"</span> <span class="attr">value</span>=<span class="string">"20"</span>/&gt;</span> <span class="comment">&lt;!-- 定时任务延时启动，程序启动后20秒再启动定时任务 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 调度器配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/quartz.properties"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="quartz-properties文件的配置"><a href="#quartz-properties文件的配置" class="headerlink" title="quartz.properties文件的配置"></a>quartz.properties文件的配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName=lxQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid=AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export=false</span><br><span class="line">org.quartz.scheduler.rmi.proxy=false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction=false</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure ThreadPool 线程池属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount=10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority=5</span><br><span class="line">===========================================================================</span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold=60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">#org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore</span><br><span class="line">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line"># Mysql需要使用下面的链接</span><br><span class="line">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">#org.quartz.jobStore.useProperties = false</span><br><span class="line">## 我们采用程序中的数据源，因此这块不配置，在spring-quartz.xml中配置</span><br><span class="line">#org.quartz.jobStore.dataSource = masterDataSource</span><br><span class="line">org.quartz.jobStore.tablePrefix = QRTZ_</span><br><span class="line">#org.quartz.jobStore.isClustered = false</span><br><span class="line">#============================================================================</span><br><span class="line"># Configure Datasources</span><br><span class="line">#============================================================================</span><br><span class="line">#org.quartz.dataSource.myDS.driver=com.mysql.jdbc.Driver</span><br><span class="line">#org.quartz.dataSource.myDS.URL=jdbc:mysql://localhost:3306/SSM_NOTE</span><br><span class="line">#org.quartz.dataSource.myDS.user=root</span><br><span class="line">#org.quartz.dataSource.myDS.password=lucifer</span><br><span class="line">#org.quartz.dataSource.myDS.maxConnections=5</span><br><span class="line"></span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件</span><br><span class="line">org.quartz.plugin.triggHistory.class=org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage=Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage=Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;</span><br></pre></td></tr></table></figure><h3 id="qrtz-triggers表中的字段特别解析："><a href="#qrtz-triggers表中的字段特别解析：" class="headerlink" title="qrtz_triggers表中的字段特别解析："></a>qrtz_triggers表中的字段特别解析：</h3><h4 id="MISFIRE-INSTR：Misfire处理规则"><a href="#MISFIRE-INSTR：Misfire处理规则" class="headerlink" title="MISFIRE_INSTR：Misfire处理规则:"></a>MISFIRE_INSTR：Misfire处理规则:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder.simpleSchedule();</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionFireNow();</span><br><span class="line"><span class="comment">// -1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithExistingCount();</span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithRemainingCount();</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithExistingCount();</span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithRemainingCount();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1：withMisfireHandlingInstructionFireNow</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">-1：withMisfireHandlingInstructionIgnoreMisfires</span></span><br><span class="line"><span class="comment">——以错过的第一个频率时间立刻开始执行</span></span><br><span class="line"><span class="comment">——重做错过的所有频率周期</span></span><br><span class="line"><span class="comment">——当下一次触发频率发生时间大于当前时间以后，按照Interval的依次执行剩下的频率</span></span><br><span class="line"><span class="comment">——共执行RepeatCount+1次</span></span><br><span class="line"><span class="comment">2：withMisfireHandlingInstructionNowWithExistingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">3：withMisfireHandlingInstructionNowWithRemainingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">4：withMisfireHandlingInstructionNextWithRemainingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">5：withMisfireHandlingInstructionNextWithExistingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Cron的MisFire策略；使用最多的</span></span><br><span class="line"></span><br><span class="line">CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule(<span class="string">""</span>);</span><br><span class="line"><span class="comment">// -1: 以错过的第一个频率时间立刻开始执行,重做错过的所有频率周期后当下一次触发频率发生时间大于当前时间后，再按照正常的Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 2: 不触发立即执行，等待下次Cron触发频率到达时刻开始按照Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionDoNothing();</span><br><span class="line"><span class="comment">// 1:以当前时间为触发频率立刻触发一次执行，然后按照Cron频率依次执行</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionFireAndProceed();</span><br></pre></td></tr></table></figure><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.web.context.ContextLoader - Context initialization failed</span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzJobServiceImpl&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzManager&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;lxQuartzScheduler&apos; defined in class path resource [spring/spring-quartz.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: javax/transaction/UserTransaction</span><br></pre></td></tr></table></figure><p>是因为缺少jar包，添加如下依赖,即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本文内容&quot;&gt;&lt;a href=&quot;#本文内容&quot; class=&quot;headerlink&quot; title=&quot;本文内容&quot;&gt;&lt;/a&gt;本文内容&lt;/h2&gt;&lt;p&gt;通过xml配置一个调度器Scheduler，所有的任务通过该调度器来进行调度，结合官方提供的数据结构以及调度实现来达到前端控制定时器的目的。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之小试牛刀（一）</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Quartz/Quartz-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80.html"/>
    <id>https://www.wanglixia.top/后端技术/Quartz/Quartz-学习笔记1-小试牛刀.html</id>
    <published>2019-06-23T14:12:46.000Z</published>
    <updated>2019-09-19T15:16:05.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>本文记录从数据库中加载定时任务的配置并运行的过程。<br><a id="more"></a></p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>官方提供的表结构:</p><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" rel="external nofollow noopener noreferrer" target="_blank">http://www.quartz-scheduler.org/</a>;</li><li>网盘下载官方文档及自己整理PDM结构链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a>,提取码：zqe0 </li></ul><p><img src="http://img.wanglixia.top/Quartz官方定时器相关表结构-201962322275.png" alt="Quartz官方定时器相关表结构-201962322275"></p><h2 id="Maven中使用"><a href="#Maven中使用" class="headerlink" title="Maven中使用"></a>Maven中使用</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.2.3<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Spring中配置方式"><a href="#Spring中配置方式" class="headerlink" title="Spring中配置方式"></a>Spring中配置方式</h2><h3 id="使用-Scheduled-注解；"><a href="#使用-Scheduled-注解；" class="headerlink" title="使用@Scheduled 注解；"></a>使用@Scheduled 注解；</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line">package com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line">import com.weyoung.framework.annotation.QuartzLog;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Mr.wang</span><br><span class="line"> * @Description</span><br><span class="line"> * @Date 2019/4/29</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class MainSchedule &#123;</span><br><span class="line"></span><br><span class="line">    private static final Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    public MainSchedule() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器MainSchedule创建成功-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Scheduled(cron = &quot;0/1 * *  * * ?&quot;)</span><br><span class="line">    @QuartzLog</span><br><span class="line">    public static void run() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器调度start-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用SchedulingConfigurer配置定时任务，使用工具类"><a href="#使用SchedulingConfigurer配置定时任务，使用工具类" class="headerlink" title="使用SchedulingConfigurer配置定时任务，使用工具类"></a>使用SchedulingConfigurer配置定时任务，使用工具类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 测试表数据</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line"></span><br><span class="line">-- qrtz_job_details 表数据</span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;测试任务&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob2.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;TestJob&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_triggers 触发器信息表数据</span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_cron_triggers 触发器的CRON表达式信息</span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;* * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;3 * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br></pre></td></tr></table></figure><h4 id="QuartzUtil-java-定时任务工具类"><a href="#QuartzUtil-java-定时任务工具类" class="headerlink" title="QuartzUtil.java 定时任务工具类"></a>QuartzUtil.java 定时任务工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务管理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/5/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"quartzUtil"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = <span class="keyword">new</span> StdSchedulerFactory().getScheduler();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"获取调度器实例异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String JOB_GROUP_NAME = <span class="string">"LX_JOB_GROUP_NAME"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TRIGGER_GROUP_NAME = <span class="string">"LX_TRIGGER_GROUP_NAME"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setScheduler</span><span class="params">(Scheduler scheduler)</span> </span>&#123;</span><br><span class="line">        QuartzUtil.scheduler = scheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个定时任务，使用默认的任务组名，触发器名，触发器组名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass       Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName        job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class jobClass, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        addJob(jobClass, jobName, <span class="keyword">null</span>, jobName, <span class="keyword">null</span>, cronExpression, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始一个simpleSchedule()调度(创建一个新的定时任务)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass         Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName          job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName     job组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression   cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName      trigger名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName triggerJob组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerPriority  trigger优先级</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(Class jobClass, String jobName, String jobGroupName, String triggerName, String triggerGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String cronExpression, <span class="keyword">int</span> triggerPriority)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1、创建一个JobDetail实例，指定Quartz</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder</span><br><span class="line">                <span class="comment">// 任务执行类</span></span><br><span class="line">                .newJob(jobClass)</span><br><span class="line">                <span class="comment">// 任务名，任务组</span></span><br><span class="line">                .withIdentity(jobName, jobGroupName)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 2、创建Trigger</span></span><br><span class="line">        <span class="comment">// 优先级默认是5，数字越高优先级越高</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(triggerName, triggerGroupName).startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(cronExpression))</span><br><span class="line">                .withPriority(triggerPriority)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断调度其中是否存在该任务，不存在时添加，否则会出现错误</span></span><br><span class="line">            <span class="keyword">if</span> (!scheduler.checkExists(JobKey.jobKey(jobName, jobGroupName))) &#123;</span><br><span class="line">                scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加任务["</span> + jobName + <span class="string">"]到调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、启动</span></span><br><span class="line">        <span class="keyword">this</span>.startSchedule();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (scheduler.isShutdown()) &#123;</span><br><span class="line">                <span class="comment">// 恢复</span></span><br><span class="line">                scheduler.resumeAll();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 启动</span></span><br><span class="line">                scheduler.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"开启任务调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂停Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.pauseJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 恢复Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.resumeJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改一个任务的触发时间(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String jobName, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        rescheduleJob(jobName, <span class="keyword">null</span>, cronExpression);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新任务表达式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName       trigger名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName  trigger组名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newCronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rescheduleJob</span><span class="params">(String triggerName, String triggerGroupName, String newCronExpression)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 获取trigger</span></span><br><span class="line">        CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 按新的cronExpression表达式重新构建trigger</span></span><br><span class="line">        trigger = trigger</span><br><span class="line">                .getTriggerBuilder()</span><br><span class="line">                .withIdentity(triggerKey)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(newCronExpression))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 按新的trigger重新设置job执行</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"更新任务调度策略出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String triggerName)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.removeJob(jobName, <span class="keyword">null</span>, triggerName, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String jobGroupName, String triggerName, String triggerGroupName)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 停止触发器</span></span><br><span class="line">        scheduler.pauseTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 移除触发器</span></span><br><span class="line">        scheduler.unscheduleJob(triggerKey);</span><br><span class="line">        <span class="comment">// 删除任务</span></span><br><span class="line">        scheduler.deleteJob(jobKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现SchedulingConfigurer接口的类"><a href="#实现SchedulingConfigurer接口的类" class="headerlink" title="实现SchedulingConfigurer接口的类"></a>实现SchedulingConfigurer接口的类</h4><p>作用是从数据库中加载定时器配置信息；<br><em>注：@PostConstruct注解使这个方法在项目启动后加载执行</em><br>LxJobConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.dao.QuartzJobDetailsDao;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.pojo.QuartzJobInfo;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.utils.QuartzUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.SchedulingConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.config.ScheduledTaskRegistrar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * @功能描述: 加载定时器列表</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/23 20:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobConfig</span> <span class="keyword">implements</span> <span class="title">SchedulingConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> QuartzJobDetailsDao quartzJobDetailsDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    QuartzUtil quartzUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureTasks</span><span class="params">(ScheduledTaskRegistrar taskRegistrar)</span> </span>&#123;</span><br><span class="line">        loadConfigsFromDb();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库中获取job配置信息并放入调度器中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadConfigsFromDb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"-----------------LxJobConfig------------------loadConfigsFromDb-----------------"</span>);</span><br><span class="line">        <span class="comment">// 从数据库加载Job配置信息</span></span><br><span class="line">        List&lt;QuartzJobInfo&gt; jobDetails = quartzJobDetailsDao.selectCronJobAndTriggerList(<span class="keyword">new</span> QuartzJobInfo());</span><br><span class="line">        jobDetails.stream().forEach(config -&gt; &#123;</span><br><span class="line">            String jobClassName = config.getJobClassName();</span><br><span class="line">            <span class="keyword">if</span> (jobClassName.indexOf(SPLIT_DOT) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名参数配置错误["</span> + jobClassName + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(config.getCronExpression())) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，CRON表达式配置错误["</span> + config.getCronExpression() + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> splitIdx = jobClassName.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">            String className = jobClassName.substring(<span class="number">0</span>, splitIdx);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; jobClass = Class.forName(className);</span><br><span class="line">                quartzUtil.addJob(jobClass, config.getJobName(), config.getJobGroup(), config.getTriggerName(),</span><br><span class="line">                        config.getTriggerGroup(), config.getCronExpression(), config.getPriority());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名["</span> + className + <span class="string">"]未找到！"</span>, e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加定时任务异常！"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类1：-TestJob-java"><a href="#测试任务类1：-TestJob-java" class="headerlink" title="测试任务类1： TestJob.java"></a>测试任务类1： TestJob.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/24 19:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String now = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"---------------&gt;TestJobMain execute"</span> + now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类2：TestJob2"><a href="#测试任务类2：TestJob2" class="headerlink" title="测试任务类2：TestJob2"></a>测试任务类2：TestJob2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务实现类-测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob2</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"TestJob2.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="执行结果信息"><a href="#执行结果信息" class="headerlink" title="执行结果信息"></a>执行结果信息</h4><p><img src="http://img.wanglixia.top/执行结果-2019624204452.png" alt="执行结果-2019624204452"></p><h4 id="只需要定时任务类实现Job接口重写其execute方法即可。"><a href="#只需要定时任务类实现Job接口重写其execute方法即可。" class="headerlink" title="只需要定时任务类实现Job接口重写其execute方法即可。"></a>只需要定时任务类实现Job接口重写其execute方法即可。</h4><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>上面的方式通过实现SchedulingConfigurer接口的configureTasks方法使加载数据库中定时任务的配置以及放入调度器的这一系列操作在应用启动后就开始自动执行，并使用QuartzUtil工具类将一个Job接口的实现类放入调度器中并进行调度，其核心在于QuartzUtil这个工具类。<br>后面的文章会将一个普通类变成一个定时调度的任务、以及通过界面管理调度器、触发器、任务等信息，包括不重启添加任务、暂停任务、恢复任务以及删除任务的方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本文内容&quot;&gt;&lt;a href=&quot;#本文内容&quot; class=&quot;headerlink&quot; title=&quot;本文内容&quot;&gt;&lt;/a&gt;本文内容&lt;/h2&gt;&lt;p&gt;本文记录从数据库中加载定时任务的配置并运行的过程。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>quartz学习笔记之相关概念整理</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/Quartz/Quartz-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5.html"/>
    <id>https://www.wanglixia.top/后端技术/Quartz/Quartz-学习笔记-相关概念.html</id>
    <published>2019-06-22T15:05:03.000Z</published>
    <updated>2019-09-19T15:16:05.940Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Quartz三个核心概念"><a href="#Quartz三个核心概念" class="headerlink" title="Quartz三个核心概念"></a>Quartz三个核心概念</h3><ul><li>调度器：Scheduler</li><li>任务：Job</li><li>触发器：Trigger<h3 id="Quartz体系结构"><a href="#Quartz体系结构" class="headerlink" title="Quartz体系结构"></a>Quartz体系结构</h3></li><li>JobDetail：包含任务的实现类以及类的信息；</li><li>Trigger：决定任务什么时候被调用；分为SimpleTrigger和CronTrigger（常用）；</li><li>scheduler：定时、周期地执行JobDetail的信息<h4 id="Quartz重要组成"><a href="#Quartz重要组成" class="headerlink" title="Quartz重要组成"></a>Quartz重要组成</h4></li><li>Job： 接口，只有一个参数；</li><li>JobDetail：Job的实现类；</li><li>JobBuilder：创建JobDetail的实例；</li><li>JobStore：保存Job数据；（保存到内存中、数据库中）；</li><li>Trigger：</li><li>TreadPool：</li><li>TriggerBuilder：</li><li>Scheduler：调度器；</li><li>Calender：一个Trigger可以和多个Calender关联，以排除或者包含某些时间点</li><li>监听器：JobListener、TriggerListener、SchedulerListener；<a id="more"></a><h3 id="代码示例（一）"><a href="#代码示例（一）" class="headerlink" title="代码示例（一）"></a>代码示例（一）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzJobInit</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(QuartzJobInit.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        run(format);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String format)</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">        System.out.println(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span> + format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/22 23:43</span></span><br><span class="line"><span class="comment"> * @作者: wanglixia</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class).withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>).build();</span><br><span class="line">        <span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger().withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br><span class="line">        <span class="comment">// 创建Scheduler实例，</span></span><br><span class="line">        StdSchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</span><br><span class="line">        Scheduler scheduler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = factory.getScheduler();</span><br><span class="line">            scheduler.start();</span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">            String format = sf.format(date);</span><br><span class="line">            System.out.println(<span class="string">"QuartzJobInit.main"</span> + format);</span><br><span class="line"><span class="comment">//            LOGGER.info("QuartzJobInit.main", format);</span></span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Job-接口的实现"><a href="#Job-接口的实现" class="headerlink" title="Job 接口的实现"></a>Job 接口的实现</h3><ul><li>Job接口中只有一个execute方法，然后在其中写业务逻辑；<ul><li>生命周期：每次调度器Scheduler在执行job时，会在调用execute方法之前创建一个新的job实例；调用完成后，关联的job对象实例会被释放，释放的实例会被垃圾回收机制回收。</li></ul></li><li>JobDetail为Job实例提供了许多设置属性，以及JobDataMap成员变量属性，用来存储特定Job实例的状态信息，调度器需要借助JobDetail对象来添加Job实例。重要属性如下：<ul><li>name</li><li>group 任务所在组</li><li>jobClass 任务实现类</li><li>jobDataMap </li></ul></li></ul><h3 id="JobExecutionContext"><a href="#JobExecutionContext" class="headerlink" title="JobExecutionContext"></a>JobExecutionContext</h3><ul><li>当Scheduler调用一个Job时，就会将JobExecutionContext传递给Job的execute方法；</li><li>Job能通过JobExecutionContext对象访问到Quartz运行时候的环境以及Job本身的明细数据。</li></ul><h3 id="JobDataMap"><a href="#JobDataMap" class="headerlink" title="JobDataMap"></a>JobDataMap</h3><ul><li>在进行任务调度时JobDataMap存储在JobExecutionContext中，非常方便获取；</li><li>JobDataMap可以用来装载任何可序列化的数据对象，当job实例对象被执行时这些参数对象会传递给它；</li><li>JobDataMap实现了JDK的Map接口，并且添加了一些非常方便的方法用来存取基本数据类型。<h4 id="JobDataMap获取方式："><a href="#JobDataMap获取方式：" class="headerlink" title="JobDataMap获取方式："></a>JobDataMap获取方式：</h4><h5 id="从Map中直接获取；"><a href="#从Map中直接获取；" class="headerlink" title="从Map中直接获取；"></a>从Map中直接获取；</h5></li><li>方式一：JobDataMap</li></ul><p>添加数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class)</span><br><span class="line">        .withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>)</span><br><span class="line">        <span class="comment">// 传参</span></span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myJob"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"FloatJobValue"</span>, <span class="number">3.14F</span>)</span><br><span class="line">        .build();</span><br><span class="line"><span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">        .withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myTrigger"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"DoubleTriggerValue"</span>, <span class="number">2.0</span>D)</span><br><span class="line">        .startNow()</span><br><span class="line">        .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br></pre></td></tr></table></figure></p><p>获取数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">JobKey key = context.getJobDetail().getKey();</span><br><span class="line">        System.out.println(<span class="string">"key============&gt;"</span> + key.getName()+<span class="string">":"</span> + key.getGroup());</span><br><span class="line">        TriggerKey triggerKey = context.getTrigger().getKey();</span><br><span class="line">        System.out.println(<span class="string">"triggerKey============&gt;"</span> + triggerKey.getName()+<span class="string">":"</span> + triggerKey.getGroup());</span><br><span class="line">        JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();</span><br><span class="line">        JobDataMap dataMap = context.getTrigger().getJobDataMap();</span><br><span class="line"></span><br><span class="line">        String message = jobDataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">float</span> floatJobValue = jobDataMap.getFloatValue(<span class="string">"FloatJobValue"</span>);</span><br><span class="line">        String triggerMsg = dataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">double</span> doubleJobValue = dataMap.getDoubleValue(<span class="string">"DoubleTriggerValue"</span>);</span><br></pre></td></tr></table></figure></p><ul><li>方式二：getMergedJobDataMap<ul><li>Trigger和JobDetail中有相同的key时，Trigger中的值就会覆盖掉JobDetail中的值。</li><li>Job实现类中添加setter方法对应JobDataMap的键值（Quartz框架默认的JobFactory实现类在初始化job实例对象时会自动调用这些setter方法）。</li><li>直接定义属性，添加getter和setter方法即可；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JobDataMap mergedJobDataMap = context.getMergedJobDataMap();</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="触发器-Trigger"><a href="#触发器-Trigger" class="headerlink" title="触发器 Trigger"></a>触发器 Trigger</h3><h4 id="重要的两个实现类"><a href="#重要的两个实现类" class="headerlink" title="重要的两个实现类"></a>重要的两个实现类</h4><ul><li>CronTriggerImpl<ul><li>基于日历的作业调度器，而不是像SimpleTrigger那样精确指定间隔时间，比SimpleTrigger更常用；</li><li>CRON表达式：L可以和W一起使用；周字段的英文字母不区分大小写；</li></ul></li><li>SimpleTriggerImpl<ul><li>在一个指定时间段内执行一次作业任务；或者在指定时间间隔内多次执行作业任务；</li><li>重复次数可以为0，正整数或是SimpleTrigger.REPEAT_INDEFINITELY常量值。</li><li>重复时间间隔必须是0或者长整数；</li><li>一旦制定了endAt，那么它就会覆盖重复次数参数的效果。endAt优先于withRepeatCount；<h4 id="重要属性"><a href="#重要属性" class="headerlink" title="重要属性"></a>重要属性</h4></li></ul></li><li>JobKey：job实例的标识，触发器被触发时，该jobkey指定的实例会被触发执行；</li><li>StartTime：触发器首次被触发的时间；类型java.util.Date；</li><li>EndTime：触发器不再被触发的时间；类型java.util.Date；</li></ul><h3 id="调度器Scheduler"><a href="#调度器Scheduler" class="headerlink" title="调度器Scheduler"></a>调度器Scheduler</h3><h4 id="Scheduler-工厂模式"><a href="#Scheduler-工厂模式" class="headerlink" title="Scheduler-工厂模式"></a>Scheduler-工厂模式</h4><ul><li>SchedulerFactory创建的；<ul><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li></ul></li><li>DirectSchedulerFactory；</li></ul></li></ul><h4 id="主要函数"><a href="#主要函数" class="headerlink" title="主要函数"></a>主要函数</h4><ul><li>Date scheduleJob(JobDetail jobDetail, Trigger trigger);绑定jobDetail和trigger注册进scheduler中；返回最近一次即将执行的时间；</li><li>void start(); // 启动</li><li>void standby();// 挂起，挂起后可通过start恢复</li><li>void shutdown();// 关闭，不能恢复执行，强行恢复报出异常<ul><li>shutdown(true):// 等待所有正在执行的job执行完毕之后，再关闭scheduler；</li><li>shutdown(false):// 表示直接关闭scheduler</li></ul></li></ul><h3 id="quartz-properties"><a href="#quartz-properties" class="headerlink" title="quartz.properties"></a>quartz.properties</h3><ul><li>文档的位置及加载顺序；优先读取工程中自定义的，没有的话去读quartz中的文件；</li><li>组成部分<ul><li>调度器属性<ul><li>org.quartz.scheduler.instanceName：用来区分特定的调度器实例，可以按照功能用途来给调度器起名；</li><li>org.quartz.scheduler.instanceId：和前者一样，也允许任何字符串，但这个值必须在所有调度器实例中是唯一的，尤其是在一个集群当中，作为集群的唯一key。如果想让Quartz生成这个值的话，可以设置为AUTO;</li></ul></li><li>线程池属性<ul><li>threadCount：指定线程数，至少为1；</li><li>threadPriority：线程的优先级；</li><li>org.quartz.threadPool.class：线程池的实现类；</li></ul></li><li>作业存储设置<ul><li>描述了在调度器实例的生命周期中，Job和Trigger的信息是如何被存储的；</li></ul></li><li>插件配置<ul><li>满足特定需求用到的Quartz插件的配置。</li></ul></li></ul></li></ul><p>详细配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># Default Properties file for use by StdSchedulerFactory</span><br><span class="line"># to create a Quartz Scheduler Instance, if a different</span><br><span class="line"># properties file is not explicitly specified.</span><br><span class="line">#</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName: DefaultQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid:AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export: false</span><br><span class="line">org.quartz.scheduler.rmi.proxy: false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction: false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure ThreadPool 线程池属性  </span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount: 10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority: 5</span><br><span class="line">#设置SimpleThreadPool的一些属性</span><br><span class="line">#设置是否为守护线程</span><br><span class="line">#org.quartz.threadpool.makethreadsdaemons = false</span><br><span class="line">#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true</span><br><span class="line">#org.quartz.threadpool.threadsinheritgroupofinitializingthread=false</span><br><span class="line">#线程前缀默认值是：[Scheduler Name]_Worker</span><br><span class="line">#org.quartz.threadpool.threadnameprefix=swhJobThead;</span><br><span class="line"># 配置全局监听(TriggerListener,JobListener) 则应用程序可以接收和执行 预定的事件通知</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global TriggerListener 配置全局的Trigger监听器</span><br><span class="line"># MyTriggerListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.triggerListener.NAME.class = com.swh.MyTriggerListenerClass</span><br><span class="line">#org.quartz.triggerListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.triggerListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global JobListener 配置全局的Job监听器</span><br><span class="line"># MyJobListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.jobListener.NAME.class = com.swh.MyJobListenerClass</span><br><span class="line">#org.quartz.jobListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.jobListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold: 60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件  </span><br><span class="line">#org.quartz.plugin.NAME.class = com.swh.MyPluginClass</span><br><span class="line">#org.quartz.plugin.NAME.propName = propValue</span><br><span class="line">#org.quartz.plugin.NAME.prop2Name = prop2Value</span><br><span class="line">#配置trigger执行历史日志（可以看到类的文档和参数列表）</span><br><span class="line">org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage = Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage = Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;  </span><br><span class="line">#配置job调度插件  quartz_jobs(jobs and triggers内容)的XML文档  </span><br><span class="line">#加载 Job 和 Trigger 信息的类   （1.8之前用：org.quartz.plugins.xml.JobInitializationPlugin）</span><br><span class="line">org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin</span><br><span class="line">#指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_jobs.xml</span><br><span class="line">org.quartz.plugin.jobInitializer.fileNames = my_quartz_job2.xml  </span><br><span class="line">#org.quartz.plugin.jobInitializer.overWriteExistingJobs = false  </span><br><span class="line">org.quartz.plugin.jobInitializer.failOnFileNotFound = true  </span><br><span class="line">#自动扫描任务单并发现改动的时间间隔,单位为秒</span><br><span class="line">org.quartz.plugin.jobInitializer.scanInterval = 10</span><br><span class="line">#覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况</span><br><span class="line">org.quartz.plugin.jobInitializer.wrapInUserTransaction = false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Sample configuration of ShutdownHookPlugin  ShutdownHookPlugin插件的配置样例</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.plugin.shutdownhook.class = \org.quartz.plugins.management.ShutdownHookPlugin</span><br><span class="line">#org.quartz.plugin.shutdownhook.cleanShutdown = true</span><br><span class="line">#</span><br><span class="line"># Configure RMI Settings 远程服务调用配置</span><br><span class="line">#</span><br><span class="line">#如果你想quartz-scheduler出口本身通过RMI作为服务器，然后设置“出口”标志true(默认值为false)。</span><br><span class="line">#org.quartz.scheduler.rmi.export = false</span><br><span class="line">#主机上rmi注册表(默认值localhost)</span><br><span class="line">#org.quartz.scheduler.rmi.registryhost = localhost</span><br><span class="line">#注册监听端口号（默认值1099）</span><br><span class="line">#org.quartz.scheduler.rmi.registryport = 1099</span><br><span class="line">#创建rmi注册，false/never：如果你已经有一个在运行或不想进行创建注册</span><br><span class="line"># true/as_needed:第一次尝试使用现有的注册，然后再回来进行创建</span><br><span class="line"># always:先进行创建一个注册，然后再使用回来使用注册</span><br><span class="line">#org.quartz.scheduler.rmi.createregistry = never</span><br><span class="line">#Quartz Scheduler服务端端口，默认是随机分配RMI注册表</span><br><span class="line">#org.quartz.scheduler.rmi.serverport = 1098</span><br><span class="line">#true:链接远程服务调度(客户端),这个也要指定registryhost和registryport，默认为false</span><br><span class="line"># 如果export和proxy同时指定为true，则export的设置将被忽略</span><br><span class="line">#org.quartz.scheduler.rmi.proxy = false</span><br></pre></td></tr></table></figure></p><h3 id="基于Maven的SpringMvc工程整合Quartz"><a href="#基于Maven的SpringMvc工程整合Quartz" class="headerlink" title="基于Maven的SpringMvc工程整合Quartz"></a>基于Maven的SpringMvc工程整合Quartz</h3><h4 id="使用Quartz配置作业"><a href="#使用Quartz配置作业" class="headerlink" title="使用Quartz配置作业"></a>使用Quartz配置作业</h4><ul><li>MethodInvokingJobDetailFactoryBean；</li><li>JobDetailFactoryBean：比较灵活，支持给作业传递数据；</li></ul><h3 id="Quartz相关文档"><a href="#Quartz相关文档" class="headerlink" title="Quartz相关文档"></a>Quartz相关文档</h3><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" rel="external nofollow noopener noreferrer" target="_blank">http://www.quartz-scheduler.org/</a></li><li>表结构下载地址：快速下载：链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a> 提取码：zqe0 </li></ul><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>本文整理自：慕课网教程<br>Java定时任务调度工具详解之Quartz篇:<a href="https://www.imooc.com/learn/846" rel="external nofollow noopener noreferrer" target="_blank">https://www.imooc.com/learn/846</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Quartz三个核心概念&quot;&gt;&lt;a href=&quot;#Quartz三个核心概念&quot; class=&quot;headerlink&quot; title=&quot;Quartz三个核心概念&quot;&gt;&lt;/a&gt;Quartz三个核心概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;调度器：Scheduler&lt;/li&gt;
&lt;li&gt;任务：Job&lt;/li&gt;
&lt;li&gt;触发器：Trigger&lt;h3 id=&quot;Quartz体系结构&quot;&gt;&lt;a href=&quot;#Quartz体系结构&quot; class=&quot;headerlink&quot; title=&quot;Quartz体系结构&quot;&gt;&lt;/a&gt;Quartz体系结构&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;JobDetail：包含任务的实现类以及类的信息；&lt;/li&gt;
&lt;li&gt;Trigger：决定任务什么时候被调用；分为SimpleTrigger和CronTrigger（常用）；&lt;/li&gt;
&lt;li&gt;scheduler：定时、周期地执行JobDetail的信息&lt;h4 id=&quot;Quartz重要组成&quot;&gt;&lt;a href=&quot;#Quartz重要组成&quot; class=&quot;headerlink&quot; title=&quot;Quartz重要组成&quot;&gt;&lt;/a&gt;Quartz重要组成&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;Job： 接口，只有一个参数；&lt;/li&gt;
&lt;li&gt;JobDetail：Job的实现类；&lt;/li&gt;
&lt;li&gt;JobBuilder：创建JobDetail的实例；&lt;/li&gt;
&lt;li&gt;JobStore：保存Job数据；（保存到内存中、数据库中）；&lt;/li&gt;
&lt;li&gt;Trigger：&lt;/li&gt;
&lt;li&gt;TreadPool：&lt;/li&gt;
&lt;li&gt;TriggerBuilder：&lt;/li&gt;
&lt;li&gt;Scheduler：调度器；&lt;/li&gt;
&lt;li&gt;Calender：一个Trigger可以和多个Calender关联，以排除或者包含某些时间点&lt;/li&gt;
&lt;li&gt;监听器：JobListener、TriggerListener、SchedulerListener；
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Quartz" scheme="https://www.wanglixia.top/tags/Quartz/"/>
    
      <category term="Spring Quartz" scheme="https://www.wanglixia.top/tags/Spring-Quartz/"/>
    
  </entry>
  
  <entry>
    <title>Idea常用插件整理</title>
    <link href="https://www.wanglixia.top/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8-Idea-%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6.html"/>
    <id>https://www.wanglixia.top/工具使用/工具使用-Idea-常用插件.html</id>
    <published>2019-05-11T03:22:21.000Z</published>
    <updated>2019-09-19T15:16:05.875Z</updated>
    
    <content type="html"><![CDATA[<h3 id="idea好用的插件"><a href="#idea好用的插件" class="headerlink" title="idea好用的插件"></a>idea好用的插件</h3><p>BashSupport、<br>.ignore、<br>Lombok、<br>Jrebel、<br>Database Navigator、<br><a id="more"></a><br>CSV Plugin、<br>Vue.js、<br>FindBugs-IDEA、<br>GsonFormat、<br>CMD Support、<br>Alibaba Java Coding Guidelines、<br>PlantUML integration、<br>Mongo Plugin、<br>YAML/Ansible support、<br>Git Flow Integration、<br>Swagger、<br>GitToolBox、<br>WakaTime、<br>Translation、<br>Free MyBatis plugin、<br>GenerateSerialVersionUID、<br>JavaDoc、<br>JUnitGenerator V2.​0、<br>nginx Support、<br>Jenkins Control Plugin、<br>QAPlug、QAPlug-FindBugs、<br>Bootstrap、<br>SQL Query Plugin、<br>SoapUI IntelliJ Plugin、<br>Sql Generator、<br>Jira Browser</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;idea好用的插件&quot;&gt;&lt;a href=&quot;#idea好用的插件&quot; class=&quot;headerlink&quot; title=&quot;idea好用的插件&quot;&gt;&lt;/a&gt;idea好用的插件&lt;/h3&gt;&lt;p&gt;BashSupport、&lt;br&gt;.ignore、&lt;br&gt;Lombok、&lt;br&gt;Jrebel、&lt;br&gt;Database Navigator、&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM框架整合笔记（十）注解方式配置Quartz定时器</title>
    <link href="https://www.wanglixia.top/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B09-%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%AEQuartz%E5%AE%9A%E6%97%B6%E5%99%A8.html"/>
    <id>https://www.wanglixia.top/后端技术/SSM框架-整合笔记/SSM框架-整合笔记9-注解方式配置Quartz定时器.html</id>
    <published>2019-04-30T16:00:00.000Z</published>
    <updated>2019-09-19T15:16:05.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quartz定时器介紹"><a href="#Quartz定时器介紹" class="headerlink" title="Quartz定时器介紹"></a>Quartz定时器介紹</h2><a id="more"></a><h2 id="Quartz定时器环境配置"><a href="#Quartz定时器环境配置" class="headerlink" title="Quartz定时器环境配置"></a>Quartz定时器环境配置</h2><ul><li>Quartz 2.3.0</li></ul><h3 id="pom-xml-添加依赖"><a href="#pom-xml-添加依赖" class="headerlink" title="pom.xml 添加依赖"></a>pom.xml 添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定时器调度类"><a href="#定时器调度类" class="headerlink" title="定时器调度类"></a>定时器调度类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainSchedule</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器MainSchedule创建成功-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/1 * *  * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度start-------------------------"</span>);</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度end-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="spring-quartz-xml配置文件添加"><a href="#spring-quartz-xml配置文件添加" class="headerlink" title="spring-quartz.xml配置文件添加"></a>spring-quartz.xml配置文件添加</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.platform.quartz.schedule"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启@Scheduled注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">task:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ssm项目从数据库中动态获取定时器配置；"><a href="#ssm项目从数据库中动态获取定时器配置；" class="headerlink" title="ssm项目从数据库中动态获取定时器配置；"></a>ssm项目从数据库中动态获取定时器配置；</h2><h3 id="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"><a href="#定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）" class="headerlink" title="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"></a>定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Quartz定时器介紹&quot;&gt;&lt;a href=&quot;#Quartz定时器介紹&quot; class=&quot;headerlink&quot; title=&quot;Quartz定时器介紹&quot;&gt;&lt;/a&gt;Quartz定时器介紹&lt;/h2&gt;
    
    </summary>
    
      <category term="技术" scheme="https://www.wanglixia.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="随笔" scheme="https://www.wanglixia.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="工具" scheme="https://www.wanglixia.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="框架" scheme="https://www.wanglixia.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ssm" scheme="https://www.wanglixia.top/tags/ssm/"/>
    
      <category term="quartz" scheme="https://www.wanglixia.top/tags/quartz/"/>
    
  </entry>
  
</feed>
