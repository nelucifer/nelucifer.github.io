<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Mysql数据库常用方式</title>
      <link href="/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F.html"/>
      <url>/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F.html</url>
      <content type="html"><![CDATA[<h2 id="修改数据库编码："><a href="#修改数据库编码：" class="headerlink" title="修改数据库编码："></a>修改数据库编码：</h2><p>utf8mb4的最低mysql版本支持版本为5.5.3+，若不是，请升级到较新版本。</p><h3 id="1-先修改my-ini"><a href="#1-先修改my-ini" class="headerlink" title="1. 先修改my.ini"></a>1. 先修改my.ini</h3><p>my.ini 文件，找到以下几项或者在[client]、[mysql]、[mysqld]下面按照如下位置添加对应编码，设置为utf8mb4；我的是MySQL5.6版本，my.ini没有再安装目录，在以下目录：<code>C:\ProgramData\MySQL\MySQL Server 5.6</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysql]</span> </span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4 </span><br><span class="line"><span class="section">[mysqld]</span> </span><br><span class="line"><span class="attr">character-set-client-handshake</span> = <span class="literal">FALSE</span> </span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4 </span><br><span class="line"><span class="attr">collation-server</span> = utf8mb4_unicode_ci </span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8mb4'</span></span><br></pre></td></tr></table></figure><p>重启MySQL服务，查看编码的脚本：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">WHERE</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'character\_set\_%'</span> <span class="keyword">OR</span> Variable_name <span class="keyword">LIKE</span> <span class="string">'collation%'</span>;</span><br></pre></td></tr></table></figure></p><h3 id="2-数据库连接的配置"><a href="#2-数据库连接的配置" class="headerlink" title="2. 数据库连接的配置"></a>2. 数据库连接的配置</h3><p>数据库连接参数中:<br>characterEncoding=utf8会被自动识别为utf8mb4，也可以不加这个参数，会自动检测。<br>而autoReconnect=true是必须加上的。</p><h3 id="3-修改列编码"><a href="#3-修改列编码" class="headerlink" title="3. 修改列编码"></a>3. 修改列编码</h3><p>将数据库和已经建好的表也转换成utf8mb4<br>更改数据库编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> LX_NOTE <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>更改表编码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME SYS_MENU <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 COLLATEutf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p><p>如有必要，还可以更改列的编码</p><h2 id="更改数据库名"><a href="#更改数据库名" class="headerlink" title="更改数据库名"></a>更改数据库名</h2><h3 id="1-！！！备份数据库！！！"><a href="#1-！！！备份数据库！！！" class="headerlink" title="1. ！！！备份数据库！！！"></a><strong>1. ！！！备份数据库！！！</strong></h3><h3 id="2-脚本-mysql-rename-sh"><a href="#2-脚本-mysql-rename-sh" class="headerlink" title="2. 脚本 mysql_rename.sh"></a>2. 脚本 mysql_rename.sh</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mysql -uroot -p<span class="string">'lucifer'</span> --host=127.0.0.1 -e <span class="string">'create database if not exists LX_NOTE DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci'</span></span><br><span class="line"></span><br><span class="line">list_table=$(mysql -uroot -plucifer --host=127.0.0.1 -Nse <span class="string">"select table_name from information_schema.TABLES where TABLE_SCHEMA='SSM_NOTE'"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> table <span class="keyword">in</span> <span class="variable">$list_table</span>  </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="comment">#echo $TABLE</span></span><br><span class="line">    mysql -uroot -plucifer --host=127.0.0.1 -e <span class="string">"rename table SSM_NOTE.<span class="variable">$table</span> to LX_NOTE.<span class="variable">$table</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="3-cmd命令窗口运行该脚本，参考命令如下："><a href="#3-cmd命令窗口运行该脚本，参考命令如下：" class="headerlink" title="3. cmd命令窗口运行该脚本，参考命令如下："></a>3. cmd命令窗口运行该脚本，参考命令如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 5.6\bin&gt;e:mysql_rename.sh</span><br></pre></td></tr></table></figure><h3 id="4-完成后就发现数据库已经移动过去了。"><a href="#4-完成后就发现数据库已经移动过去了。" class="headerlink" title="4. 完成后就发现数据库已经移动过去了。"></a>4. 完成后就发现数据库已经移动过去了。</h3>]]></content>
      
      
    </entry>
    
    <entry>
      <title>quartz学习笔记之界面配置（二）</title>
      <link href="/quartz%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%95%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%EF%BC%88%E4%BA%8C%EF%BC%89.html"/>
      <url>/quartz%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%95%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%EF%BC%88%E4%BA%8C%EF%BC%89.html</url>
      <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>通过xml配置一个调度器Scheduler，所有的任务通过该调度器来进行调度，结合官方提供的数据结构以及调度实现来达到前端控制定时器的目的。</p><h2 id="调度器Scheduler的作用"><a href="#调度器Scheduler的作用" class="headerlink" title="调度器Scheduler的作用"></a>调度器Scheduler的作用</h2><p>调度器是Quartz的核心组成部分，其作用是调度Job能够被Trigger触发，是Quartz的驱动。<br>下图是列出来的定时器的核心概念、组成部分以及<br><img src="http://img.wanglixia.top/Quartz-2019713202637.png" alt="Quartz-2019713202637"></p><h3 id="调度器的创建"><a href="#调度器的创建" class="headerlink" title="调度器的创建"></a>调度器的创建</h3><p>Scheduler的实现类有以下几个：<br><img src="http://img.wanglixia.top/Scheduler的实现类-201962701223.png" alt="Scheduler的实现类-201962701223"></p><ul><li>RemoteScheduler: 远程调度器；</li><li>StdScheduler：默认标准调度器（最为常用的）；</li><li>RemoteMBeanScheduler：抽象类，<ul><li>JBoss4RMIRemoteMBeanScheduler：是抽象类<code>RemoteMBeanScheduler</code> 的实现类<br>调度器的创建主要是通过其工厂模式创建的，创建方式有：</li></ul></li><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li><li>通过<code>new StdSchedulerFactory().getScheduler();</code> 来获取调度器。</li></ul></li><li>DirectSchedulerFactory；</li></ul><p>定时器创建以后，可以进行增加、删除以及显示Job和Trigger，对Job进行暂停/恢复等操作，调用了.start()方法后，Scheduler才正式开始执行Job和Trigger；</p><h4 id="StdSchedulerFactory"><a href="#StdSchedulerFactory" class="headerlink" title="StdSchedulerFactory"></a>StdSchedulerFactory</h4><p>StdSchedulerFactory依赖于一系列属性决定如何产生Scheduler，提供配置信息的方式如下：</p><ul><li>通过java.util.Properties属性实例；</li><li>通过外部属性文件提供；</li><li>通过含有属性文件内容的java.io.InputStream提供；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 无参方法，会优先加载当前工作目录的quartz.properties，如果未找到，则试图从系统的classpath中加载该配置文件。</span></span><br><span class="line">        factory.initialize();</span><br><span class="line"><span class="comment">// 2.通过外部属性文件提供</span></span><br><span class="line"><span class="comment">//        factory.initialize("lx-quartz-scheduler.properties");</span></span><br><span class="line"><span class="comment">// 3. 通过含有属性文件内容的java.io.InputStream提供</span></span><br><span class="line"><span class="comment">//        factory.initialize(new FileInputStream(new File("lx-quartz-scheduler.properties")));</span></span><br><span class="line">scheduler = factory.getScheduler(<span class="string">"quartzScheduler"</span>);</span><br></pre></td></tr></table></figure><h3 id="前端控制定时器暂停、恢复等核心方法"><a href="#前端控制定时器暂停、恢复等核心方法" class="headerlink" title="前端控制定时器暂停、恢复等核心方法"></a>前端控制定时器暂停、恢复等核心方法</h3><p>原理：配置定时器项目默认调度器名字，并结合quartz官方提供的表结构以及自动从数据库加载定时器配置的机制，使用调度器Scheduler的几个核心方法结合数据库配置达到使用前端界面控制定时器恢复、执行等操作。</p><ul><li>void start(); // 启动</li><li>void standby();// 挂起</li><li>void shutdown();// 关闭</li><li>void shutdown(true); //  等待所有正在执行的job执行完毕之后，再关闭scheduler；</li></ul><h4 id="暂停定时器核心方法"><a href="#暂停定时器核心方法" class="headerlink" title="暂停定时器核心方法"></a>暂停定时器核心方法</h4><p><em>修改数据库的执行器状态</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">updateJobStatus</span><span class="params">(QuartzJobInfo job)</span> </span>&#123;</span><br><span class="line">    QuartzTriggers triggers = <span class="keyword">new</span> QuartzTriggers();</span><br><span class="line">    triggers.setSchedName(job.getSchedName());</span><br><span class="line">    triggers.setTriggerGroup(job.getTriggerGroup());</span><br><span class="line">    triggers.setTriggerName(job.getTriggerName());</span><br><span class="line">    triggers.setTriggerState(job.getTriggerState());</span><br><span class="line">    quartzTriggersDao.updateByPrimaryKeySelective(triggers);</span><br><span class="line">    <span class="keyword">if</span> (QRTZ_TRIGGER_STATUS_WAITING.equals(job.getTriggerState())) &#123;</span><br><span class="line">        quartzManager.resumeJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        quartzManager.pauseJob(job.getJobName(), job.getJobGroup());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Message.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 调度器暂停Job</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.pauseJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="恢复定时器核心方法"><a href="#恢复定时器核心方法" class="headerlink" title="恢复定时器核心方法"></a>恢复定时器核心方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调度器恢复Job</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">    JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        scheduler.resumeJob(jobKey);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://img.wanglixia.top/quartz界面-2019713204052.png" alt="quartz界面-2019713204052"></p><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><h4 id="定时器配置：SimpleTrigger和CronTrigger"><a href="#定时器配置：SimpleTrigger和CronTrigger" class="headerlink" title="定时器配置：SimpleTrigger和CronTrigger"></a>定时器配置：SimpleTrigger和CronTrigger</h4><p>spring-servlet.xml 中添加配置，用于托付给spring来管理；</p><ul><li>配置JobDetail；</li><li>配置Trigger；</li><li>配置Scheduler；<br>首先配置JobDetail，前面的概念中也了解到定义的方式，方式如下：</li><li>MethodInvokingJobDetailFactoryBean</li><li>JobDetailFactoryBean：可以传入参数jobDataMap；比较灵活；</li><li>extends QuartzJobBean</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式一： MethodInvokingJobDetailFactoryBean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetail"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetObject"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetMethod"</span> <span class="attr">value</span>=<span class="string">"init"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JobDetail 定义方式二：JobDetailFactoryBean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxJobDetailBean1"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.JobDetailFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobClass"</span> <span class="attr">value</span>=<span class="string">"com.weyoung.platform.quartz.schedule.LxQuartzJobBean"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 传入自定义参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDataMap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"anotherBean"</span> <span class="attr">value-ref</span>=<span class="string">"anotherBean"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"durability"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式一：SimpleTriggerFactoryBean 距离当前时间1秒之后执行，之后每隔两秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxSimpleTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startDelay"</span> <span class="attr">value</span>=<span class="string">"1000"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"repeatInterval"</span> <span class="attr">value</span>=<span class="string">"2000"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger方式二：CronTriggerFactoryBean 每隔五秒钟执行一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxCronTrigger"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.CronTriggerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cronExpression"</span> <span class="attr">value</span>=<span class="string">"0/5 * * ? * *"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetails"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetail"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxJobDetailBean1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"triggers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxSimpleTrigger"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"lxCronTrigger"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，定义的类lxJobDetailBean、lxJobDetailBean1、anotherBean代码如下：<br>LxJobDetailBean.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"lxJobDetailBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobDetailBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobDetailBean.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"-----------lxJobDetailBean.init-----------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>LxQuartzJobBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.entity.AnotherBean;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxQuartzJobBean</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个需要传入的参数，并给一个setter方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AnotherBean anotherBean;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxQuartzJobBean.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务逻辑</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobExecutionContext</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> JobExecutionException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"---------LxQuartzJobBean.executeInternal---------"</span> + sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAnotherBean</span><span class="params">(AnotherBean anotherBean)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.anotherBean = anotherBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AnotherBean.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/29 11:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"anotherBean"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">someMessage</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/定时器两种方式配置执行结果-2019629135035.png" alt="定时器两种方式配置执行结果-2019629135035"></p><h3 id="Quartz中作业存储方式"><a href="#Quartz中作业存储方式" class="headerlink" title="Quartz中作业存储方式"></a>Quartz中作业存储方式</h3><ul><li>RAMJobStore：作业、触发器、调度信息存储在内存中，这种方式存取速度比较快，但是如果定时器项目重启或者崩溃的话，存储的信息都会丢失；</li><li>JDBC作业存储：作业、触发器、调度信息存储在数据库中，支持事务，支持集群；</li></ul><p>前面的笔记里面记录了Quartz官方提供的表结构及创建脚本等，使用该脚本创建数据库；</p><h4 id="修改调度器信息及使用quartz-propertie文件配置"><a href="#修改调度器信息及使用quartz-propertie文件配置" class="headerlink" title="修改调度器信息及使用quartz.propertie文件配置"></a>修改调度器信息及使用quartz.propertie文件配置</h4><p>我的项目暂时是把定时器放在项目主程序中，也是使用同一个数据库，当然也可以分开。如果需要自己配置数据库的话，在quartz.properties中配置就行。<br>因此，修改<code>spring-quartz.xml</code>配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 调度器，调度器的id不要改，数据库中记录调度器名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lxQuartzScheduler"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用spring中配置的数据源，需要在这儿配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"masterDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"overwriteExistingJobs"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--覆盖JOB：true、以数据库中已经存在的为准： --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoStartup"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span><span class="comment">&lt;!--自启动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startupDelay"</span> <span class="attr">value</span>=<span class="string">"20"</span>/&gt;</span> <span class="comment">&lt;!-- 定时任务延时启动，程序启动后20秒再启动定时任务 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 调度器配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/quartz.properties"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="quartz-properties文件的配置"><a href="#quartz-properties文件的配置" class="headerlink" title="quartz.properties文件的配置"></a>quartz.properties文件的配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName=lxQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid=AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export=false</span><br><span class="line">org.quartz.scheduler.rmi.proxy=false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction=false</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure ThreadPool 线程池属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount=10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority=5</span><br><span class="line">===========================================================================</span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold=60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">#org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore</span><br><span class="line">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line"># Mysql需要使用下面的链接</span><br><span class="line">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">#org.quartz.jobStore.useProperties = false</span><br><span class="line">## 我们采用程序中的数据源，因此这块不配置，在spring-quartz.xml中配置</span><br><span class="line">#org.quartz.jobStore.dataSource = masterDataSource</span><br><span class="line">org.quartz.jobStore.tablePrefix = QRTZ_</span><br><span class="line">#org.quartz.jobStore.isClustered = false</span><br><span class="line">#============================================================================</span><br><span class="line"># Configure Datasources</span><br><span class="line">#============================================================================</span><br><span class="line">#org.quartz.dataSource.myDS.driver=com.mysql.jdbc.Driver</span><br><span class="line">#org.quartz.dataSource.myDS.URL=jdbc:mysql://localhost:3306/SSM_NOTE</span><br><span class="line">#org.quartz.dataSource.myDS.user=root</span><br><span class="line">#org.quartz.dataSource.myDS.password=lucifer</span><br><span class="line">#org.quartz.dataSource.myDS.maxConnections=5</span><br><span class="line"></span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件</span><br><span class="line">org.quartz.plugin.triggHistory.class=org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage=Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage=Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;</span><br></pre></td></tr></table></figure><h3 id="qrtz-triggers表中的字段特别解析："><a href="#qrtz-triggers表中的字段特别解析：" class="headerlink" title="qrtz_triggers表中的字段特别解析："></a>qrtz_triggers表中的字段特别解析：</h3><h4 id="MISFIRE-INSTR：Misfire处理规则"><a href="#MISFIRE-INSTR：Misfire处理规则" class="headerlink" title="MISFIRE_INSTR：Misfire处理规则:"></a>MISFIRE_INSTR：Misfire处理规则:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder.simpleSchedule();</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionFireNow();</span><br><span class="line"><span class="comment">// -1</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithExistingCount();</span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNextWithRemainingCount();</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithExistingCount();</span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line">scheduleBuilder.withMisfireHandlingInstructionNowWithRemainingCount();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1：withMisfireHandlingInstructionFireNow</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">-1：withMisfireHandlingInstructionIgnoreMisfires</span></span><br><span class="line"><span class="comment">——以错过的第一个频率时间立刻开始执行</span></span><br><span class="line"><span class="comment">——重做错过的所有频率周期</span></span><br><span class="line"><span class="comment">——当下一次触发频率发生时间大于当前时间以后，按照Interval的依次执行剩下的频率</span></span><br><span class="line"><span class="comment">——共执行RepeatCount+1次</span></span><br><span class="line"><span class="comment">2：withMisfireHandlingInstructionNowWithExistingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">3：withMisfireHandlingInstructionNowWithRemainingCount</span></span><br><span class="line"><span class="comment">——以当前时间为触发频率立即触发执行</span></span><br><span class="line"><span class="comment">——执行至FinalTIme的剩余周期次数</span></span><br><span class="line"><span class="comment">——以调度或恢复调度的时刻为基准的周期频率，FinalTime根据剩余次数和当前时间计算得到</span></span><br><span class="line"><span class="comment">——调整后的FinalTime会略大于根据starttime计算的到的FinalTime值</span></span><br><span class="line"><span class="comment">4：withMisfireHandlingInstructionNextWithRemainingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">5：withMisfireHandlingInstructionNextWithExistingCount</span></span><br><span class="line"><span class="comment">——不触发立即执行</span></span><br><span class="line"><span class="comment">——等待下次触发频率周期时刻，执行至FinalTime的剩余周期次数</span></span><br><span class="line"><span class="comment">——以startTime为基准计算周期频率，并得到FinalTime</span></span><br><span class="line"><span class="comment">——即使中间出现pause，resume以后保持FinalTime时间不变</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Cron的MisFire策略；使用最多的</span></span><br><span class="line"></span><br><span class="line">CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule(<span class="string">""</span>);</span><br><span class="line"><span class="comment">// -1: 以错过的第一个频率时间立刻开始执行,重做错过的所有频率周期后当下一次触发频率发生时间大于当前时间后，再按照正常的Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionIgnoreMisfires();</span><br><span class="line"><span class="comment">// 2: 不触发立即执行，等待下次Cron触发频率到达时刻开始按照Cron频率依次执行；</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionDoNothing();</span><br><span class="line"><span class="comment">// 1:以当前时间为触发频率立刻触发一次执行，然后按照Cron频率依次执行</span></span><br><span class="line">cronScheduleBuilder.withMisfireHandlingInstructionFireAndProceed();</span><br></pre></td></tr></table></figure><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.web.context.ContextLoader - Context initialization failed</span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzJobServiceImpl&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;quartzManager&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;lxQuartzScheduler&apos; defined in class path resource [spring/spring-quartz.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: javax/transaction/UserTransaction</span><br></pre></td></tr></table></figure><p>是因为缺少jar包，添加如下依赖,即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quartz </tag>
            
            <tag> Spring Quartz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>quartz学习笔记之小试牛刀（一）</title>
      <link href="/quartz-1.html"/>
      <url>/quartz-1.html</url>
      <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>本文记录从数据库中加载定时任务的配置并运行的过程。</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>官方提供的表结构:</p><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/</a>;</li><li>网盘下载官方文档及自己整理PDM结构链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a>,提取码：zqe0 </li></ul><p><img src="http://img.wanglixia.top/Quartz官方定时器相关表结构-201962322275.png" alt="Quartz官方定时器相关表结构-201962322275"></p><h2 id="Maven中使用"><a href="#Maven中使用" class="headerlink" title="Maven中使用"></a>Maven中使用</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.2.3<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Spring中配置方式"><a href="#Spring中配置方式" class="headerlink" title="Spring中配置方式"></a>Spring中配置方式</h2><h3 id="使用-Scheduled-注解；"><a href="#使用-Scheduled-注解；" class="headerlink" title="使用@Scheduled 注解；"></a>使用@Scheduled 注解；</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line">package com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line">import com.weyoung.framework.annotation.QuartzLog;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Mr.wang</span><br><span class="line"> * @Description</span><br><span class="line"> * @Date 2019/4/29</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class MainSchedule &#123;</span><br><span class="line"></span><br><span class="line">    private static final Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    public MainSchedule() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器MainSchedule创建成功-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Scheduled(cron = &quot;0/1 * *  * * ?&quot;)</span><br><span class="line">    @QuartzLog</span><br><span class="line">    public static void run() &#123;</span><br><span class="line">        logger.info(&quot;-------------------------定时器调度start-------------------------&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用SchedulingConfigurer配置定时任务，使用工具类"><a href="#使用SchedulingConfigurer配置定时任务，使用工具类" class="headerlink" title="使用SchedulingConfigurer配置定时任务，使用工具类"></a>使用SchedulingConfigurer配置定时任务，使用工具类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 测试表数据</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line"></span><br><span class="line">-- qrtz_job_details 表数据</span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;测试任务&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob2.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_job_details` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `JOB_CLASS_NAME`,</span><br><span class="line">  `IS_DURABLE`,</span><br><span class="line">  `IS_NONCONCURRENT`,</span><br><span class="line">  `IS_UPDATE_DATA`,</span><br><span class="line">  `REQUESTS_RECOVERY`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;TestJob&apos;,</span><br><span class="line">    &apos;com.weyoung.platform.quartz.job.TestJob.execute&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    &apos;0&apos;,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_triggers 触发器信息表数据</span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `JOB_NAME`,</span><br><span class="line">  `JOB_GROUP`,</span><br><span class="line">  `DESCRIPTION`,</span><br><span class="line">  `NEXT_FIRE_TIME`,</span><br><span class="line">  `PREV_FIRE_TIME`,</span><br><span class="line">  `PRIORITY`,</span><br><span class="line">  `TRIGGER_STATE`,</span><br><span class="line">  `TRIGGER_TYPE`,</span><br><span class="line">  `START_TIME`,</span><br><span class="line">  `END_TIME`,</span><br><span class="line">  `CALENDAR_NAME`,</span><br><span class="line">  `MISFIRE_INSTR`,</span><br><span class="line">  `JOB_DATA`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;触发器信息&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1561338500&apos;,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL,</span><br><span class="line">    NULL</span><br><span class="line">  ) ;</span><br><span class="line">-- qrtz_cron_triggers 触发器的CRON表达式信息</span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;* * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br><span class="line"></span><br><span class="line">INSERT INTO `qrtz_cron_triggers` (</span><br><span class="line">  `SCHED_NAME`,</span><br><span class="line">  `TRIGGER_NAME`,</span><br><span class="line">  `TRIGGER_GROUP`,</span><br><span class="line">  `CRON_EXPRESSION`,</span><br><span class="line">  `TIME_ZONE_ID`</span><br><span class="line">) </span><br><span class="line">VALUES</span><br><span class="line">  (</span><br><span class="line">    &apos;quartzScheduler&apos;,</span><br><span class="line">    &apos;2&apos;,</span><br><span class="line">    &apos;1&apos;,</span><br><span class="line">    &apos;3 * * * * ? *&apos;,</span><br><span class="line">    &apos;Asia/Shanghai&apos;</span><br><span class="line">  ) ;</span><br></pre></td></tr></table></figure><h4 id="QuartzUtil-java-定时任务工具类"><a href="#QuartzUtil-java-定时任务工具类" class="headerlink" title="QuartzUtil.java 定时任务工具类"></a>QuartzUtil.java 定时任务工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务管理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/5/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"quartzUtil"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = <span class="keyword">new</span> StdSchedulerFactory().getScheduler();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"获取调度器实例异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String JOB_GROUP_NAME = <span class="string">"LX_JOB_GROUP_NAME"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TRIGGER_GROUP_NAME = <span class="string">"LX_TRIGGER_GROUP_NAME"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setScheduler</span><span class="params">(Scheduler scheduler)</span> </span>&#123;</span><br><span class="line">        QuartzUtil.scheduler = scheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个定时任务，使用默认的任务组名，触发器名，触发器组名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass       Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName        job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class jobClass, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        addJob(jobClass, jobName, <span class="keyword">null</span>, jobName, <span class="keyword">null</span>, cronExpression, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始一个simpleSchedule()调度(创建一个新的定时任务)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobClass         Job任务类实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName          job名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName     job组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cronExpression   cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName      trigger名字(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName triggerJob组名(请保证唯一性)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerPriority  trigger优先级</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(Class jobClass, String jobName, String jobGroupName, String triggerName, String triggerGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String cronExpression, <span class="keyword">int</span> triggerPriority)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1、创建一个JobDetail实例，指定Quartz</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder</span><br><span class="line">                <span class="comment">// 任务执行类</span></span><br><span class="line">                .newJob(jobClass)</span><br><span class="line">                <span class="comment">// 任务名，任务组</span></span><br><span class="line">                .withIdentity(jobName, jobGroupName)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 2、创建Trigger</span></span><br><span class="line">        <span class="comment">// 优先级默认是5，数字越高优先级越高</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(triggerName, triggerGroupName).startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(cronExpression))</span><br><span class="line">                .withPriority(triggerPriority)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断调度其中是否存在该任务，不存在时添加，否则会出现错误</span></span><br><span class="line">            <span class="keyword">if</span> (!scheduler.checkExists(JobKey.jobKey(jobName, jobGroupName))) &#123;</span><br><span class="line">                scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加任务["</span> + jobName + <span class="string">"]到调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、启动</span></span><br><span class="line">        <span class="keyword">this</span>.startSchedule();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (scheduler.isShutdown()) &#123;</span><br><span class="line">                <span class="comment">// 恢复</span></span><br><span class="line">                scheduler.resumeAll();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 启动</span></span><br><span class="line">                scheduler.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"开启任务调度器中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂停Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.pauseJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"暂停任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 恢复Job</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobName      job名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jobGroupName job组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeJob</span><span class="params">(String jobName, String jobGroupName)</span> </span>&#123;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.resumeJob(jobKey);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"恢复任务["</span> + jobGroupName + SPLIT_DOT + jobName + <span class="string">"]中出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改一个任务的触发时间(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String jobName, String cronExpression)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        rescheduleJob(jobName, <span class="keyword">null</span>, cronExpression);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新任务表达式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerName       trigger名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> triggerGroupName  trigger组名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newCronExpression cron时间表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SchedulerException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rescheduleJob</span><span class="params">(String triggerName, String triggerGroupName, String newCronExpression)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 获取trigger</span></span><br><span class="line">        CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 按新的cronExpression表达式重新构建trigger</span></span><br><span class="line">        trigger = trigger</span><br><span class="line">                .getTriggerBuilder()</span><br><span class="line">                .withIdentity(triggerKey)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(newCronExpression))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 按新的trigger重新设置job执行</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"更新任务调度策略出现异常!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器(使用默认的任务组名，触发器名，触发器组名)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String triggerName)</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.removeJob(jobName, <span class="keyword">null</span>, triggerName, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除一个任务和触发器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String jobGroupName, String triggerName, String triggerGroupName)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jobGroupName)) &#123;</span><br><span class="line">            jobGroupName = JOB_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(triggerGroupName)) &#123;</span><br><span class="line">            triggerGroupName = TRIGGER_GROUP_NAME;</span><br><span class="line">        &#125;</span><br><span class="line">        JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);</span><br><span class="line">        TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);</span><br><span class="line">        <span class="comment">// 停止触发器</span></span><br><span class="line">        scheduler.pauseTrigger(triggerKey);</span><br><span class="line">        <span class="comment">// 移除触发器</span></span><br><span class="line">        scheduler.unscheduleJob(triggerKey);</span><br><span class="line">        <span class="comment">// 删除任务</span></span><br><span class="line">        scheduler.deleteJob(jobKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现SchedulingConfigurer接口的类"><a href="#实现SchedulingConfigurer接口的类" class="headerlink" title="实现SchedulingConfigurer接口的类"></a>实现SchedulingConfigurer接口的类</h4><p>作用是从数据库中加载定时器配置信息；<br><em>注：@PostConstruct注解使这个方法在项目启动后加载执行</em><br>LxJobConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.dao.QuartzJobDetailsDao;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.pojo.QuartzJobInfo;</span><br><span class="line"><span class="keyword">import</span> com.weyoung.platform.quartz.utils.QuartzUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.SchedulingConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.config.ScheduledTaskRegistrar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.weyoung.framework.common.Constants.SPLIT_DOT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * @功能描述: 加载定时器列表</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/23 20:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LxJobConfig</span> <span class="keyword">implements</span> <span class="title">SchedulingConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LxJobConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> QuartzJobDetailsDao quartzJobDetailsDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    QuartzUtil quartzUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureTasks</span><span class="params">(ScheduledTaskRegistrar taskRegistrar)</span> </span>&#123;</span><br><span class="line">        loadConfigsFromDb();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库中获取job配置信息并放入调度器中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadConfigsFromDb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"-----------------LxJobConfig------------------loadConfigsFromDb-----------------"</span>);</span><br><span class="line">        <span class="comment">// 从数据库加载Job配置信息</span></span><br><span class="line">        List&lt;QuartzJobInfo&gt; jobDetails = quartzJobDetailsDao.selectCronJobAndTriggerList(<span class="keyword">new</span> QuartzJobInfo());</span><br><span class="line">        jobDetails.stream().forEach(config -&gt; &#123;</span><br><span class="line">            String jobClassName = config.getJobClassName();</span><br><span class="line">            <span class="keyword">if</span> (jobClassName.indexOf(SPLIT_DOT) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名参数配置错误["</span> + jobClassName + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(config.getCronExpression())) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，CRON表达式配置错误["</span> + config.getCronExpression() + <span class="string">"]！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> splitIdx = jobClassName.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">            String className = jobClassName.substring(<span class="number">0</span>, splitIdx);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; jobClass = Class.forName(className);</span><br><span class="line">                quartzUtil.addJob(jobClass, config.getJobName(), config.getJobGroup(), config.getTriggerName(),</span><br><span class="line">                        config.getTriggerGroup(), config.getCronExpression(), config.getPriority());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"定时任务配置异常，类名["</span> + className + <span class="string">"]未找到！"</span>, e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="string">"添加定时任务异常！"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类1：-TestJob-java"><a href="#测试任务类1：-TestJob-java" class="headerlink" title="测试任务类1： TestJob.java"></a>测试任务类1： TestJob.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/24 19:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.wang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String now = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"---------------&gt;TestJobMain execute"</span> + now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试任务类2：TestJob2"><a href="#测试任务类2：TestJob2" class="headerlink" title="测试任务类2：TestJob2"></a>测试任务类2：TestJob2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 定时任务实现类-测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob2</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(TestJob2.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        LOGGER.info(<span class="string">"TestJob2.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="执行结果信息"><a href="#执行结果信息" class="headerlink" title="执行结果信息"></a>执行结果信息</h4><p><img src="http://img.wanglixia.top/执行结果-2019624204452.png" alt="执行结果-2019624204452"></p><h4 id="只需要定时任务类实现Job接口重写其execute方法即可。"><a href="#只需要定时任务类实现Job接口重写其execute方法即可。" class="headerlink" title="只需要定时任务类实现Job接口重写其execute方法即可。"></a>只需要定时任务类实现Job接口重写其execute方法即可。</h4><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>上面的方式通过实现SchedulingConfigurer接口的configureTasks方法使加载数据库中定时任务的配置以及放入调度器的这一系列操作在应用启动后就开始自动执行，并使用QuartzUtil工具类将一个Job接口的实现类放入调度器中并进行调度，其核心在于QuartzUtil这个工具类。<br>后面的文章会将一个普通类变成一个定时调度的任务、以及通过界面管理调度器、触发器、任务等信息，包括不重启添加任务、暂停任务、恢复任务以及删除任务的方法。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quartz </tag>
            
            <tag> Spring Quartz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>quartz学习笔记之相关概念整理</title>
      <link href="/quartz.html"/>
      <url>/quartz.html</url>
      <content type="html"><![CDATA[<h3 id="Quartz三个核心概念"><a href="#Quartz三个核心概念" class="headerlink" title="Quartz三个核心概念"></a>Quartz三个核心概念</h3><ul><li>调度器：Scheduler</li><li>任务：Job</li><li>触发器：Trigger<h3 id="Quartz体系结构"><a href="#Quartz体系结构" class="headerlink" title="Quartz体系结构"></a>Quartz体系结构</h3></li><li>JobDetail：包含任务的实现类以及类的信息；</li><li>Trigger：决定任务什么时候被调用；分为SimpleTrigger和CronTrigger（常用）；</li><li>scheduler：定时、周期地执行JobDetail的信息<h4 id="Quartz重要组成"><a href="#Quartz重要组成" class="headerlink" title="Quartz重要组成"></a>Quartz重要组成</h4></li><li>Job： 接口，只有一个参数；</li><li>JobDetail：Job的实现类；</li><li>JobBuilder：创建JobDetail的实例；</li><li>JobStore：保存Job数据；（保存到内存中、数据库中）；</li><li>Trigger：</li><li>TreadPool：</li><li>TriggerBuilder：</li><li>Scheduler：调度器；</li><li>Calender：一个Trigger可以和多个Calender关联，以排除或者包含某些时间点</li><li>监听器：JobListener、TriggerListener、SchedulerListener；</li></ul><h3 id="代码示例（一）"><a href="#代码示例（一）" class="headerlink" title="代码示例（一）"></a>代码示例（一）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/6/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzJobInit</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(QuartzJobInit.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext jobExecutionContext)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String format = sf.format(date);</span><br><span class="line">        run(format);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String format)</span> </span>&#123;</span><br><span class="line">        LOGGER.info(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span>, format);</span><br><span class="line">        System.out.println(<span class="string">"QuartzJobInit.execute.run:&#123;&#125;"</span> + format);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.platform.quartz.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能描述:</span></span><br><span class="line"><span class="comment"> * @时间: 2019/6/22 23:43</span></span><br><span class="line"><span class="comment"> * @作者: wanglixia</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJob</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">        JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class).withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>).build();</span><br><span class="line">        <span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">        Trigger trigger = TriggerBuilder.newTrigger().withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br><span class="line">        <span class="comment">// 创建Scheduler实例，</span></span><br><span class="line">        StdSchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</span><br><span class="line">        Scheduler scheduler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler = factory.getScheduler();</span><br><span class="line">            scheduler.start();</span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">            String format = sf.format(date);</span><br><span class="line">            System.out.println(<span class="string">"QuartzJobInit.main"</span> + format);</span><br><span class="line"><span class="comment">//            LOGGER.info("QuartzJobInit.main", format);</span></span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Job-接口的实现"><a href="#Job-接口的实现" class="headerlink" title="Job 接口的实现"></a>Job 接口的实现</h3><ul><li>Job接口中只有一个execute方法，然后在其中写业务逻辑；<ul><li>生命周期：每次调度器Scheduler在执行job时，会在调用execute方法之前创建一个新的job实例；调用完成后，关联的job对象实例会被释放，释放的实例会被垃圾回收机制回收。</li></ul></li><li>JobDetail为Job实例提供了许多设置属性，以及JobDataMap成员变量属性，用来存储特定Job实例的状态信息，调度器需要借助JobDetail对象来添加Job实例。重要属性如下：<ul><li>name</li><li>group 任务所在组</li><li>jobClass 任务实现类</li><li>jobDataMap </li></ul></li></ul><h3 id="JobExecutionContext"><a href="#JobExecutionContext" class="headerlink" title="JobExecutionContext"></a>JobExecutionContext</h3><ul><li>当Scheduler调用一个Job时，就会将JobExecutionContext传递给Job的execute方法；</li><li>Job能通过JobExecutionContext对象访问到Quartz运行时候的环境以及Job本身的明细数据。</li></ul><h3 id="JobDataMap"><a href="#JobDataMap" class="headerlink" title="JobDataMap"></a>JobDataMap</h3><ul><li>在进行任务调度时JobDataMap存储在JobExecutionContext中，非常方便获取；</li><li>JobDataMap可以用来装载任何可序列化的数据对象，当job实例对象被执行时这些参数对象会传递给它；</li><li>JobDataMap实现了JDK的Map接口，并且添加了一些非常方便的方法用来存取基本数据类型。<h4 id="JobDataMap获取方式："><a href="#JobDataMap获取方式：" class="headerlink" title="JobDataMap获取方式："></a>JobDataMap获取方式：</h4><h5 id="从Map中直接获取；"><a href="#从Map中直接获取；" class="headerlink" title="从Map中直接获取；"></a>从Map中直接获取；</h5></li><li>方式一：JobDataMap</li></ul><p>添加数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个JobDetail实例，将该实例与QuartzJobInit的Class进行绑定</span></span><br><span class="line">JobDetail jobDetail = JobBuilder.newJob(QuartzJobInit.class)</span><br><span class="line">        .withIdentity(<span class="string">"myJob"</span>, <span class="string">"group1"</span>)</span><br><span class="line">        <span class="comment">// 传参</span></span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myJob"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"FloatJobValue"</span>, <span class="number">3.14F</span>)</span><br><span class="line">        .build();</span><br><span class="line"><span class="comment">// 创建一个Trigger实例，用来触发Job去执行</span></span><br><span class="line">Trigger trigger = TriggerBuilder.newTrigger()</span><br><span class="line">        .withIdentity(<span class="string">"myTrigger"</span>, <span class="string">"triggerGroup1"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"message"</span>, <span class="string">"hello myTrigger"</span>)</span><br><span class="line">        .usingJobData(<span class="string">"DoubleTriggerValue"</span>, <span class="number">2.0</span>D)</span><br><span class="line">        .startNow()</span><br><span class="line">        .withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">2</span>).repeatForever()).build();</span><br></pre></td></tr></table></figure></p><p>获取数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">JobKey key = context.getJobDetail().getKey();</span><br><span class="line">        System.out.println(<span class="string">"key============&gt;"</span> + key.getName()+<span class="string">":"</span> + key.getGroup());</span><br><span class="line">        TriggerKey triggerKey = context.getTrigger().getKey();</span><br><span class="line">        System.out.println(<span class="string">"triggerKey============&gt;"</span> + triggerKey.getName()+<span class="string">":"</span> + triggerKey.getGroup());</span><br><span class="line">        JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();</span><br><span class="line">        JobDataMap dataMap = context.getTrigger().getJobDataMap();</span><br><span class="line"></span><br><span class="line">        String message = jobDataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">float</span> floatJobValue = jobDataMap.getFloatValue(<span class="string">"FloatJobValue"</span>);</span><br><span class="line">        String triggerMsg = dataMap.getString(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">double</span> doubleJobValue = dataMap.getDoubleValue(<span class="string">"DoubleTriggerValue"</span>);</span><br></pre></td></tr></table></figure></p><ul><li>方式二：getMergedJobDataMap<ul><li>Trigger和JobDetail中有相同的key时，Trigger中的值就会覆盖掉JobDetail中的值。</li><li>Job实现类中添加setter方法对应JobDataMap的键值（Quartz框架默认的JobFactory实现类在初始化job实例对象时会自动调用这些setter方法）。</li><li>直接定义属性，添加getter和setter方法即可；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JobDataMap mergedJobDataMap = context.getMergedJobDataMap();</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="触发器-Trigger"><a href="#触发器-Trigger" class="headerlink" title="触发器 Trigger"></a>触发器 Trigger</h3><h4 id="重要的两个实现类"><a href="#重要的两个实现类" class="headerlink" title="重要的两个实现类"></a>重要的两个实现类</h4><ul><li>CronTriggerImpl<ul><li>基于日历的作业调度器，而不是像SimpleTrigger那样精确指定间隔时间，比SimpleTrigger更常用；</li><li>CRON表达式：L可以和W一起使用；周字段的英文字母不区分大小写；</li></ul></li><li>SimpleTriggerImpl<ul><li>在一个指定时间段内执行一次作业任务；或者在指定时间间隔内多次执行作业任务；</li><li>重复次数可以为0，正整数或是SimpleTrigger.REPEAT_INDEFINITELY常量值。</li><li>重复时间间隔必须是0或者长整数；</li><li>一旦制定了endAt，那么它就会覆盖重复次数参数的效果。endAt优先于withRepeatCount；<h4 id="重要属性"><a href="#重要属性" class="headerlink" title="重要属性"></a>重要属性</h4></li></ul></li><li>JobKey：job实例的标识，触发器被触发时，该jobkey指定的实例会被触发执行；</li><li>StartTime：触发器首次被触发的时间；类型java.util.Date；</li><li>EndTime：触发器不再被触发的时间；类型java.util.Date；</li></ul><h3 id="调度器Scheduler"><a href="#调度器Scheduler" class="headerlink" title="调度器Scheduler"></a>调度器Scheduler</h3><h4 id="Scheduler-工厂模式"><a href="#Scheduler-工厂模式" class="headerlink" title="Scheduler-工厂模式"></a>Scheduler-工厂模式</h4><ul><li>SchedulerFactory创建的；<ul><li>StdSchedulerFactory；<ul><li>使用一组参数（java.util.Properties）来创建和初始化Quartz调度器；</li><li>配置参数一般在quartz.properties中</li><li>调用getScheduler方法就能创建和初始化调度器对象；</li></ul></li><li>DirectSchedulerFactory；</li></ul></li></ul><h4 id="主要函数"><a href="#主要函数" class="headerlink" title="主要函数"></a>主要函数</h4><ul><li>Date scheduleJob(JobDetail jobDetail, Trigger trigger);绑定jobDetail和trigger注册进scheduler中；返回最近一次即将执行的时间；</li><li>void start(); // 启动</li><li>void standby();// 挂起，挂起后可通过start恢复</li><li>void shutdown();// 关闭，不能恢复执行，强行恢复报出异常<ul><li>shutdown(true):// 等待所有正在执行的job执行完毕之后，再关闭scheduler；</li><li>shutdown(false):// 表示直接关闭scheduler</li></ul></li></ul><h3 id="quartz-properties"><a href="#quartz-properties" class="headerlink" title="quartz.properties"></a>quartz.properties</h3><ul><li>文档的位置及加载顺序；优先读取工程中自定义的，没有的话去读quartz中的文件；</li><li>组成部分<ul><li>调度器属性<ul><li>org.quartz.scheduler.instanceName：用来区分特定的调度器实例，可以按照功能用途来给调度器起名；</li><li>org.quartz.scheduler.instanceId：和前者一样，也允许任何字符串，但这个值必须在所有调度器实例中是唯一的，尤其是在一个集群当中，作为集群的唯一key。如果想让Quartz生成这个值的话，可以设置为AUTO;</li></ul></li><li>线程池属性<ul><li>threadCount：指定线程数，至少为1；</li><li>threadPriority：线程的优先级；</li><li>org.quartz.threadPool.class：线程池的实现类；</li></ul></li><li>作业存储设置<ul><li>描述了在调度器实例的生命周期中，Job和Trigger的信息是如何被存储的；</li></ul></li><li>插件配置<ul><li>满足特定需求用到的Quartz插件的配置。</li></ul></li></ul></li></ul><p>详细配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># Default Properties file for use by StdSchedulerFactory</span><br><span class="line"># to create a Quartz Scheduler Instance, if a different</span><br><span class="line"># properties file is not explicitly specified.</span><br><span class="line">#</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configure Main Scheduler Properties 调度器属性</span><br><span class="line"># ===========================================================================</span><br><span class="line">org.quartz.scheduler.instanceName: DefaultQuartzScheduler</span><br><span class="line">org.quartz.scheduler.instanceid:AUTO</span><br><span class="line">org.quartz.scheduler.rmi.export: false</span><br><span class="line">org.quartz.scheduler.rmi.proxy: false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction: false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure ThreadPool 线程池属性  </span><br><span class="line"># ===========================================================================</span><br><span class="line">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span><br><span class="line">org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool</span><br><span class="line">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span><br><span class="line">org.quartz.threadPool.threadCount: 10</span><br><span class="line">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span><br><span class="line">org.quartz.threadPool.threadPriority: 5</span><br><span class="line">#设置SimpleThreadPool的一些属性</span><br><span class="line">#设置是否为守护线程</span><br><span class="line">#org.quartz.threadpool.makethreadsdaemons = false</span><br><span class="line">#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true</span><br><span class="line">#org.quartz.threadpool.threadsinheritgroupofinitializingthread=false</span><br><span class="line">#线程前缀默认值是：[Scheduler Name]_Worker</span><br><span class="line">#org.quartz.threadpool.threadnameprefix=swhJobThead;</span><br><span class="line"># 配置全局监听(TriggerListener,JobListener) 则应用程序可以接收和执行 预定的事件通知</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global TriggerListener 配置全局的Trigger监听器</span><br><span class="line"># MyTriggerListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.triggerListener.NAME.class = com.swh.MyTriggerListenerClass</span><br><span class="line">#org.quartz.triggerListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.triggerListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================</span><br><span class="line"># Configuring a Global JobListener 配置全局的Job监听器</span><br><span class="line"># MyJobListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.jobListener.NAME.class = com.swh.MyJobListenerClass</span><br><span class="line">#org.quartz.jobListener.NAME.propName = propValue</span><br><span class="line">#org.quartz.jobListener.NAME.prop2Name = prop2Value</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 信息保存时间 默认值60秒</span><br><span class="line">org.quartz.jobStore.misfireThreshold: 60000</span><br><span class="line">#保存job和Trigger的状态信息到内存中的类</span><br><span class="line">org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Configure SchedulerPlugins 插件属性 配置</span><br><span class="line"># ===========================================================================</span><br><span class="line"># 自定义插件  </span><br><span class="line">#org.quartz.plugin.NAME.class = com.swh.MyPluginClass</span><br><span class="line">#org.quartz.plugin.NAME.propName = propValue</span><br><span class="line">#org.quartz.plugin.NAME.prop2Name = prop2Value</span><br><span class="line">#配置trigger执行历史日志（可以看到类的文档和参数列表）</span><br><span class="line">org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerFiredMessage = Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span><br><span class="line">org.quartz.plugin.triggHistory.triggerCompleteMessage = Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;  </span><br><span class="line">#配置job调度插件  quartz_jobs(jobs and triggers内容)的XML文档  </span><br><span class="line">#加载 Job 和 Trigger 信息的类   （1.8之前用：org.quartz.plugins.xml.JobInitializationPlugin）</span><br><span class="line">org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin</span><br><span class="line">#指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_jobs.xml</span><br><span class="line">org.quartz.plugin.jobInitializer.fileNames = my_quartz_job2.xml  </span><br><span class="line">#org.quartz.plugin.jobInitializer.overWriteExistingJobs = false  </span><br><span class="line">org.quartz.plugin.jobInitializer.failOnFileNotFound = true  </span><br><span class="line">#自动扫描任务单并发现改动的时间间隔,单位为秒</span><br><span class="line">org.quartz.plugin.jobInitializer.scanInterval = 10</span><br><span class="line">#覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况</span><br><span class="line">org.quartz.plugin.jobInitializer.wrapInUserTransaction = false</span><br><span class="line"># ===========================================================================  </span><br><span class="line"># Sample configuration of ShutdownHookPlugin  ShutdownHookPlugin插件的配置样例</span><br><span class="line"># ===========================================================================</span><br><span class="line">#org.quartz.plugin.shutdownhook.class = \org.quartz.plugins.management.ShutdownHookPlugin</span><br><span class="line">#org.quartz.plugin.shutdownhook.cleanShutdown = true</span><br><span class="line">#</span><br><span class="line"># Configure RMI Settings 远程服务调用配置</span><br><span class="line">#</span><br><span class="line">#如果你想quartz-scheduler出口本身通过RMI作为服务器，然后设置“出口”标志true(默认值为false)。</span><br><span class="line">#org.quartz.scheduler.rmi.export = false</span><br><span class="line">#主机上rmi注册表(默认值localhost)</span><br><span class="line">#org.quartz.scheduler.rmi.registryhost = localhost</span><br><span class="line">#注册监听端口号（默认值1099）</span><br><span class="line">#org.quartz.scheduler.rmi.registryport = 1099</span><br><span class="line">#创建rmi注册，false/never：如果你已经有一个在运行或不想进行创建注册</span><br><span class="line"># true/as_needed:第一次尝试使用现有的注册，然后再回来进行创建</span><br><span class="line"># always:先进行创建一个注册，然后再使用回来使用注册</span><br><span class="line">#org.quartz.scheduler.rmi.createregistry = never</span><br><span class="line">#Quartz Scheduler服务端端口，默认是随机分配RMI注册表</span><br><span class="line">#org.quartz.scheduler.rmi.serverport = 1098</span><br><span class="line">#true:链接远程服务调度(客户端),这个也要指定registryhost和registryport，默认为false</span><br><span class="line"># 如果export和proxy同时指定为true，则export的设置将被忽略</span><br><span class="line">#org.quartz.scheduler.rmi.proxy = false</span><br></pre></td></tr></table></figure></p><h3 id="基于Maven的SpringMvc工程整合Quartz"><a href="#基于Maven的SpringMvc工程整合Quartz" class="headerlink" title="基于Maven的SpringMvc工程整合Quartz"></a>基于Maven的SpringMvc工程整合Quartz</h3><h4 id="使用Quartz配置作业"><a href="#使用Quartz配置作业" class="headerlink" title="使用Quartz配置作业"></a>使用Quartz配置作业</h4><ul><li>MethodInvokingJobDetailFactoryBean；</li><li>JobDetailFactoryBean：比较灵活，支持给作业传递数据；</li></ul><h3 id="Quartz相关文档"><a href="#Quartz相关文档" class="headerlink" title="Quartz相关文档"></a>Quartz相关文档</h3><ul><li>官网地址：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/</a></li><li>表结构下载地址：快速下载：链接：<a href="https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IpNn3yAiFpwi8kbywY1Ppg</a> 提取码：zqe0 </li></ul><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>本文整理自：慕课网教程<br>Java定时任务调度工具详解之Quartz篇:<a href="https://www.imooc.com/learn/846" target="_blank" rel="noopener">https://www.imooc.com/learn/846</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quartz </tag>
            
            <tag> Spring Quartz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Idea常用插件整理</title>
      <link href="/Idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86.html"/>
      <url>/Idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86.html</url>
      <content type="html"><![CDATA[<h3 id="idea好用的插件"><a href="#idea好用的插件" class="headerlink" title="idea好用的插件"></a>idea好用的插件</h3><p>BashSupport、<br>.ignore、<br>Lombok、<br>Jrebel、<br>Database Navigator、<br>CSV Plugin、<br>Vue.js、<br>FindBugs-IDEA、<br>GsonFormat、<br>CMD Support、<br>Alibaba Java Coding Guidelines、<br>PlantUML integration、<br>Mongo Plugin、<br>YAML/Ansible support、<br>Git Flow Integration、<br>Swagger、<br>GitToolBox、<br>WakaTime、<br>Translation、<br>Free MyBatis plugin、<br>GenerateSerialVersionUID、<br>JavaDoc、<br>JUnitGenerator V2.​0、<br>nginx Support、<br>Jenkins Control Plugin、<br>QAPlug、QAPlug-FindBugs、<br>Bootstrap、<br>SQL Query Plugin、<br>SoapUI IntelliJ Plugin、<br>Sql Generator、<br>Jira Browser</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（十）注解方式配置Quartz定时器</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B09.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B09.html</url>
      <content type="html"><![CDATA[<h2 id="Quartz定时器介紹"><a href="#Quartz定时器介紹" class="headerlink" title="Quartz定时器介紹"></a>Quartz定时器介紹</h2><a id="more"></a><h2 id="Quartz定时器环境配置"><a href="#Quartz定时器环境配置" class="headerlink" title="Quartz定时器环境配置"></a>Quartz定时器环境配置</h2><ul><li>Quartz 2.3.0</li></ul><h3 id="pom-xml-添加依赖"><a href="#pom-xml-添加依赖" class="headerlink" title="pom.xml 添加依赖"></a>pom.xml 添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Quartz定时器的依赖--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定时器调度类"><a href="#定时器调度类" class="headerlink" title="定时器调度类"></a>定时器调度类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainSchedule</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MainSchedule.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainSchedule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器MainSchedule创建成功-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/1 * *  * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度start-------------------------"</span>);</span><br><span class="line">        logger.info(<span class="string">"-------------------------定时器调度end-------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="spring-quartz-xml配置文件添加"><a href="#spring-quartz-xml配置文件添加" class="headerlink" title="spring-quartz.xml配置文件添加"></a>spring-quartz.xml配置文件添加</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Quartz定时器配置<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.platform.quartz.schedule"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启@Scheduled注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">task:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ssm项目从数据库中动态获取定时器配置；"><a href="#ssm项目从数据库中动态获取定时器配置；" class="headerlink" title="ssm项目从数据库中动态获取定时器配置；"></a>ssm项目从数据库中动态获取定时器配置；</h2><h3 id="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"><a href="#定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）" class="headerlink" title="定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）"></a>定时任务工具类QuartzManager（主要是对quartz的新增、更改、关闭等）</h3>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> quartz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>bootstrap-table使用</title>
      <link href="/bootstrap-table-export%E4%BD%BF%E7%94%A8.html"/>
      <url>/bootstrap-table-export%E4%BD%BF%E7%94%A8.html</url>
      <content type="html"><![CDATA[<h2 id="Bootstrap-Table导出插件bootstrap-table-export使用方式"><a href="#Bootstrap-Table导出插件bootstrap-table-export使用方式" class="headerlink" title="Bootstrap-Table导出插件bootstrap-table-export使用方式"></a>Bootstrap-Table导出插件bootstrap-table-export使用方式</h2><ul><li>一、Bootstrap-table-export插件使用</li><li>二、Bootstrap-table 表头和表格错位问题</li><li>三、表格添加自定义按钮</li><li>四、Bootstrap中tab页及插件使用<a id="more"></a></li></ul><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><h4 id="一、Bootstrap-table-export插件使用"><a href="#一、Bootstrap-table-export插件使用" class="headerlink" title="一、Bootstrap-table-export插件使用"></a>一、Bootstrap-table-export插件使用</h4><p>Bootstrap-table-export插件下载：<a href="https://bootstrap-table.com/docs" target="_blank" rel="noopener">https://bootstrap-table.com/docs</a>；<br>在该文档的extensions目录下，可以看到可以使用的依赖插件列表，其中就包括Export文件。<br><img src="http://img.wanglixia.top/bootstrap-table-1-2019323123635.png" alt="bootstrap-table-1-2019323123635"></p><p>导出支持以下格式：<br><code>[‘json’, ‘xml’, ‘png’, ‘csv’, ‘txt’, ‘sql’, ‘doc’, ‘excel’,’xlsx’, ‘pdf’]</code><br>默认支持，其他的需要单独引入插件：<br><code>[‘json’, ‘xml’, ‘csv’, ‘txt’, ‘sql’, ‘excel’]</code></p><ol><li>找到<code>dist\extensions\export\bootstrap-table-export.min.js</code>文件，引入项目中；</li><li>使用该插件还需要引入以下依赖：<ul><li>tableExport.jquery.plugin：下载地址：<a href="https://github.com/hhurz/tableExport.jquery.plugin" target="_blank" rel="noopener">https://github.com/hhurz/tableExport.jquery.plugin</a>；<ul><li>把<code>tableExport.min.js</code>文件引入项目中；</li></ul></li><li>解决bootstraptable导出excel提示文件名跟格式不匹配问题，还需要引入上面下载的项目中的<ul><li><code>\libs\FileSaver\FileSaver.min.js</code>；</li></ul></li><li>jquery.base64.js：下载地址：<a href="http://plugins.jquery.com/base64/" target="_blank" rel="noopener">http://plugins.jquery.com/base64/</a>，把<code>jquery.base64.js</code>文件引入项目中；</li><li>xlsx.full.min.js：支持的下载格式，如<code> [‘json’, ‘xml’, ‘csv’, ‘txt’, ‘sql’, ‘excel’]</code>，下载地址：<a href="https://github.com/handevelop/js-xlsx-master" target="_blank" rel="noopener">https://github.com/handevelop/js-xlsx-master</a>;</li></ul></li></ol><blockquote><p>TableExport插件依赖于jQuery（1.2.1+），FileSaver.js。为了支持.xlsx（Office Open XML SpreadsheetML Format）格式，你必须在 FileSaver.js 和 TableExport.js文件之前引入xlsx-core.js文件。为了使旧的浏览器（Firefox &lt; 20, Opera &lt; 15, Safari &lt; 6）支持.xlsx，需要在 FileSaver.js 文件之前引入 Blob.js文件。</p></blockquote><h4 id="二、Bootstrap-table-表头和表格错位问题"><a href="#二、Bootstrap-table-表头和表格错位问题" class="headerlink" title="二、Bootstrap-table 表头和表格错位问题"></a>二、Bootstrap-table 表头和表格错位问题</h4><p>在bootstrap-table.js源码中找到以下位置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$tableHeader.show();</span><br><span class="line"><span class="comment">// 注释掉下面两行 取消表头初始化，解决表头和内容不对齐问题</span></span><br><span class="line"><span class="comment">// this.resetHeader();</span></span><br><span class="line"><span class="comment">// padding += this.$header.outerHeight(true);</span></span><br></pre></td></tr></table></figure><h4 id="三、-表格添加自定义按钮"><a href="#三、-表格添加自定义按钮" class="headerlink" title="三、 表格添加自定义按钮"></a>三、 表格添加自定义按钮</h4><p>如下：</p><p><img src="http://img.wanglixia.top/bootstrap-table-2-2019323233029.png" alt="bootstrap-table-2-2019323233029"></p><p>第一步：<code>table</code> 表格上方添加一个div，里面自定义按钮，为了和自带的按钮放到一排，需要设置该div的id为toolbar：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"toolbar"</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">id</span>=<span class="string">"btn_add"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-plus"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            新增</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"btn_del"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-trash"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            批量删除</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span> <span class="attr">id</span>=<span class="string">"btn_import"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-import"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            批量导入</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn_search"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            查询</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二步：使用js初始化表格时，需要添加设置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">toolbar: <span class="string">"#toolbar"</span>,             <span class="comment">//指定工具栏</span></span><br><span class="line">toolbarAlign: <span class="string">"left"</span>,            <span class="comment">//工具栏对齐方式</span></span><br></pre></td></tr></table></figure><h4 id="四、Bootstrap中tab页及插件使用"><a href="#四、Bootstrap中tab页及插件使用" class="headerlink" title="四、Bootstrap中tab页及插件使用"></a>四、Bootstrap中tab页及插件使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $.extend($, &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加标签页</span></span><br><span class="line"><span class="comment">         * @param tabItem &#123;id: '标签页id', name: '标签页name', url: 'iframe要加载的url',closable 是否可关闭&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        addTab: <span class="function"><span class="keyword">function</span> (<span class="params">tabItem</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> theOriginalId = tabItem.id;</span><br><span class="line">            <span class="keyword">var</span> newId = theOriginalId.replace(<span class="regexp">/\./g</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="keyword">var</span> tabId = <span class="string">'tab_title_'</span> + newId;</span><br><span class="line">            <span class="keyword">var</span> panelId = <span class="string">'tab_panel_'</span> + newId;</span><br><span class="line">            <span class="keyword">var</span> iframeId = <span class="string">'tab_iframe_'</span> + newId;</span><br><span class="line">            <span class="keyword">if</span> (!$(<span class="string">'#'</span> + tabId)[<span class="number">0</span>]) &#123;</span><br><span class="line">                $(<span class="string">"li[id^=tab_title_]"</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .tab-content'</span>).children($(<span class="string">"div[id^=tab_panel_]"</span>)).removeClass(<span class="string">'active'</span>);</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .nav.nav-tabs'</span>).append(</span><br><span class="line">                    $(<span class="string">'&lt;li&gt;'</span>).attr(&#123;<span class="string">'id'</span>: tabId&#125;).addClass(<span class="string">'active'</span>)</span><br><span class="line">                        .append($(<span class="string">'&lt;a&gt;'</span>).attr(&#123;<span class="string">'href'</span>: <span class="string">'#'</span> + panelId, <span class="string">'data-toggle'</span>: <span class="string">'tab'</span>&#125;)</span><br><span class="line">                            .append($(<span class="string">'&lt;span&gt;'</span>).text(tabItem.name))</span><br><span class="line">                            .append(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">if</span> (tabItem.closable) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> $(<span class="string">'&lt;i&gt;'</span>).addClass(<span class="string">'glyphicon glyphicon-remove small'</span>).attr(&#123;<span class="string">'tabclose'</span>: tabId&#125;)</span><br><span class="line">                                        .css(&#123;<span class="attr">position</span>: <span class="string">'absolute'</span>, <span class="attr">right</span>: <span class="string">'4px'</span>, <span class="attr">top</span>: <span class="string">'4px'</span>, <span class="string">'cursor'</span>: <span class="string">'pointer'</span>&#125;)</span><br><span class="line">                                        .on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                            $.closeTab(tabId);</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;))</span><br><span class="line">                )</span><br><span class="line">                $(<span class="string">'.content-wrapper &gt; .tab-content'</span>).append(</span><br><span class="line">                    $(<span class="string">'&lt;div&gt;'</span>).attr(&#123;<span class="string">'role'</span>: <span class="string">'tabpanel'</span>, <span class="string">'id'</span>: panelId&#125;).addClass(<span class="string">'tab-pane active'</span>)</span><br><span class="line">                        .append($(<span class="string">'&lt;iframe&gt;'</span>).attr(&#123;<span class="string">'id'</span>: iframeId, <span class="attr">frameborder</span>: <span class="string">'0'</span>, <span class="string">'src'</span>: tabItem.url&#125;)</span><br><span class="line">                            .css(&#123;<span class="string">'overflow-x'</span>: <span class="string">'hidden'</span>, <span class="string">'overflow-y'</span>: <span class="string">'hidden'</span>, <span class="string">'width'</span>: <span class="string">'100%'</span>, <span class="string">'height'</span>: <span class="string">'100%'</span>&#125;)</span><br><span class="line">                            .on(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                $(<span class="keyword">this</span>).parent().height($.ContentHeight());</span><br><span class="line">                            &#125;))</span><br><span class="line">                )</span><br><span class="line">                $(<span class="string">'#'</span> + tabId).children(<span class="string">'a[data-toggle=tab]'</span>).tab(<span class="string">'show'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        closeTab: <span class="function"><span class="keyword">function</span> (<span class="params">tabId</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> closeId = tabId;</span><br><span class="line">            <span class="keyword">var</span> panelId = <span class="string">'tab_panel_'</span> + closeId.substring(<span class="number">10</span>);</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="string">'#'</span> + panelId).hasClass(<span class="string">'active'</span>)) &#123;</span><br><span class="line">                $(<span class="string">'#'</span> + closeId).prev().children(<span class="string">'a'</span>).tab(<span class="string">'show'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">"#"</span> + closeId).remove();</span><br><span class="line">            $(<span class="string">"#"</span> + panelId).remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>使用：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$.addTab(&#123;</span><br><span class="line">    id: <span class="string">'bootstrap_tab_id_'</span>,</span><br><span class="line">    name: <span class="string">'标签页名称'</span>,</span><br><span class="line">    url: <span class="string">'标签页加载的url'</span>,</span><br><span class="line">    closable: <span class="literal">true</span>  <span class="comment">// 是否可关闭</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="相关文档："><a href="#相关文档：" class="headerlink" title="相关文档："></a>相关文档：</h2><ul><li>bootstrap-table文档和相关插件：<a href="https://bootstrap-table.com/docs/extensions/export/" target="_blank" rel="noopener">https://bootstrap-table.com/docs/extensions/export/</a></li><li>Bootstrap可关闭标签页，主要参考bootstrap-closable-tab：<a href="https://github.com/zyqwst/bootstrap-closable-tab" target="_blank" rel="noopener">https://github.com/zyqwst/bootstrap-closable-tab</a></li></ul>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> bootstrap-table-export </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springmvc使用常见问题</title>
      <link href="/springmvc%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html"/>
      <url>/springmvc%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在SpringMvc中使用@PathVariable有句号或小数点时，会导致最后一个小数点以及后面的值丢失；<br>处理办法，在{id}中添加<code>:.+</code>，在@RequestMapping的value中使用SpEL来表示，value中的{id}换成{id:.+} ：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/queryById/&#123;id:.+&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">queryById</span><span class="params">(@PathVariable String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    SysMenu sysMenu = sysMenuService.queryById(id);</span><br><span class="line">    <span class="keyword">return</span> Message.success(sysMenu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_35852328/article/details/81204316" target="_blank" rel="noopener">SpringMvc的@PathVariable有句号或小数点时，取值不全解决办法</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> springmvc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nosql使用笔记-windows下安装MongoDB</title>
      <link href="/nosql-mongodb.html"/>
      <url>/nosql-mongodb.html</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>下载mongodb解压缩版并解压，目录D:\DevTools\mongodb\;</li><li>上述目录下创建文件夹：data\,data目录下创建目录db和目录logs;</li><li><p>mongodb根目录下创建文件mongo.config，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dbpath=D:\DevTools\mongodb\data\db</span><br><span class="line"></span><br><span class="line">logpath=D:\DevTools\mongodb\data\logs\mongo.log</span><br></pre></td></tr></table></figure></li><li><p>打开命令行，进入到D:\DevTools\mongodb\bin\目录下，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --dbpath D:\DevTools\mongodb\data</span><br></pre></td></tr></table></figure></li><li><p>测试，在浏览器中输入：<a href="http://localhost:27017/；" target="_blank" rel="noopener">http://localhost:27017/；</a></p></li></ol><h2 id="配置windows服务"><a href="#配置windows服务" class="headerlink" title="配置windows服务"></a>配置windows服务</h2><ol><li>[管理员权限]命令行进入bin目录下，执行命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod.exe --config D:\DevTools\mongodb\mongo.config --install --serviceName <span class="string">"MongoDB"</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> NoSQL </tag>
            
            <tag> nosql </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（九）配置Activiti</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B08.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B08.html</url>
      <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工作流 </tag>
            
            <tag> activiti </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux安装jdk环境-CentOS</title>
      <link href="/linux%E4%BD%BF%E7%94%A81.html"/>
      <url>/linux%E4%BD%BF%E7%94%A81.html</url>
      <content type="html"><![CDATA[<h3 id="CentOS系统下各文件夹的作用"><a href="#CentOS系统下各文件夹的作用" class="headerlink" title="CentOS系统下各文件夹的作用"></a>CentOS系统下各文件夹的作用</h3><ul><li>/： 根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中</li><li>/bin:/usr/bin: 可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</li><li>/boot： 放置linux系统启动时用到的一些文件。<ul><li>/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可</li></ul></li><li>/dev： 存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。</li><li>/etc： 系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。注：/etc/X11存放与x windows有关的设置。</li><li>/home： 系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据</li><li>/lib:/usr/lib:<ul><li>/usr/local/lib： 系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。</li></ul></li><li>/lost+fount： 系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found</li><li>/mnt:/media： 光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。</li><li>/opt： 给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下</li><li>/proc： 此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等</li><li>/root： 系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。</li><li>/sbin:/usr/sbin:/usr/local/sbin： 放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</li><li>/tmp： 一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</li><li>/srv： 服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内</li><li>/usr： 应用程序存放目录，<ul><li>/usr/bin 存放应用程序， </li><li>/usr/share 存放共享数据，</li><li>/usr/lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。</li><li>/usr/local:存放软件升级包。</li><li>/usr/share/doc: 系统说明文件存放目录。</li><li>/usr/share/man: 程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间</li></ul></li><li>/var： 放置系统执行过程中经常变化的文件，如随时更改的日志文件 /var/log，/var/log/message： 所有的登录文件存放目录，/var/spool/mail： 邮件存放的目录， /var/run: 程序或服务启动</li></ul><h2 id="linux-Java开发常用命令"><a href="#linux-Java开发常用命令" class="headerlink" title="linux Java开发常用命令"></a>linux Java开发常用命令</h2><h3 id="安装开发工具包"><a href="#安装开发工具包" class="headerlink" title="安装开发工具包"></a>安装开发工具包</h3><p>英文系统安装： # yum -y groupinstall “Development tools”<br>中文系统安装： # yum -y groupinstall “开发工具”</p><h3 id="Linux安装jdk"><a href="#Linux安装jdk" class="headerlink" title="Linux安装jdk"></a>Linux安装jdk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看yum库中都有哪些jdk版本</span></span><br><span class="line">yum search java|grep jdk</span><br><span class="line"><span class="comment"># 选择指定的版本安装</span></span><br><span class="line">yum install java-1.8.0-openjdk</span><br><span class="line"><span class="comment"># 查看安装版本信息</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="comment">#######安装rz/sz命令#######</span></span><br><span class="line">yum install -y lrzsz</span><br><span class="line"></span><br><span class="line"><span class="comment">#######解压/压缩.tar.gz#######</span></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xvzf apache-tomcat-8.5.23.tar.gz</span><br><span class="line"><span class="comment">#压缩</span></span><br><span class="line">tar -zcvf 文件名.tar.gz 要压缩的文件/文件夹</span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line">tar -zcvf webfile.tar.gz webfile</span><br></pre></td></tr></table></figure><h3 id="安装netstat"><a href="#安装netstat" class="headerlink" title="安装netstat"></a>安装netstat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><h3 id="安装lsof命令"><a href="#安装lsof命令" class="headerlink" title="安装lsof命令"></a>安装lsof命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lsof</span><br></pre></td></tr></table></figure><h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><p>安装jdk，上传tomcat压缩包，并解压，然后：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">cd</span> /etc/</span><br><span class="line"><span class="comment"># 编辑profile文件：</span></span><br><span class="line">vi profile</span><br><span class="line"><span class="comment">###配置java环境变量</span></span><br><span class="line"><span class="comment">############################Java start##############################</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment">############################Java end################################</span></span><br><span class="line"><span class="comment">#保存之后，使用下面命令是环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line"><span class="built_in">cd</span> apache-tomcat-8.5.23/bin/</span><br><span class="line">sh startup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动日志</span></span><br><span class="line"><span class="built_in">cd</span> apache-tomcat-8.5.23/logs/</span><br><span class="line">cat catalina.out</span><br></pre></td></tr></table></figure></p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看ip地址</span></span><br><span class="line">ip addr</span><br><span class="line"><span class="comment"># 查看占用端口的进程</span></span><br><span class="line">netstat -lnp|grep 8080</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">lsof -i:8080</span><br><span class="line"><span class="comment"># 根据进程ID查看进程的具体信息</span></span><br><span class="line">ps axu|grep 2643 </span><br><span class="line"><span class="comment"># 列出所有端口</span></span><br><span class="line">netstat -ntlp</span><br><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ps -ef|grep nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 进程号</span><br><span class="line"></span><br><span class="line">killall -9 进程名字</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除文件或文件夹</span></span><br><span class="line"><span class="comment"># 删除目录</span></span><br><span class="line">rm /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># -r是递归的删除参数表中的目录及子目录</span></span><br><span class="line">rm -r /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># f是不提示用户，删除目录下的所有文件</span></span><br><span class="line">rm -rf /home/<span class="built_in">test</span></span><br><span class="line"><span class="comment"># -i是交互模式</span></span><br><span class="line">rm -ir /home/<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装Nginx的yum源</span></span><br><span class="line">sudo yum install yum-utils</span><br><span class="line"><span class="comment">#在/etc/yum.repos.d/路径下创建文件nginx.repo</span></span><br></pre></td></tr></table></figure><h4 id="内容如下"><a href="#内容如下" class="headerlink" title="内容如下"></a>内容如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><h4 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> nginx-mainline</span><br></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><h4 id="查看nginx"><a href="#查看nginx" class="headerlink" title="查看nginx"></a>查看nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info nginx</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure><h4 id="修改配置，添加映射"><a href="#修改配置，添加映射" class="headerlink" title="修改配置，添加映射"></a>修改配置，添加映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d</span><br><span class="line"><span class="comment"># 修改default.conf</span></span><br><span class="line">vi default.conf</span><br></pre></td></tr></table></figure><h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 系统 </tag>
            
            <tag> linux </tag>
            
            <tag> Linux </tag>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（八）配置Swagger</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B07.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B07.html</url>
      <content type="html"><![CDATA[<blockquote><p>Swagger 是一款RESTFUL接口的、基于YAML、JSON语言的文档在线自动生成、代码自动生成的工具。</p></blockquote><a id="more"></a><h2 id="Swagger介绍"><a href="#Swagger介绍" class="headerlink" title="Swagger介绍"></a>Swagger介绍</h2><p>官网介绍：最好的API是使用Swagger工具构建的。</p><blockquote><p>Swagger是一套围绕OpenAPI规范构建的开源工具，可以帮助您设计，构建，记录和使用REST API。<br>主要的Swagger工具包括：</p><ul><li>Swagger Editor - 基于浏览器的编辑器，在其中编写OpenAPI规范。</li><li>Swagger UI - 将OpenAPI规范呈现为交互式API文档。</li><li>Swagger Codegen - 从OpenAPI规范生成服务端和客户端库。</li></ul></blockquote><p>官网：<a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></p><p>官方文档：<a href="https://swagger.io/docs/specification/about/" target="_blank" rel="noopener">https://swagger.io/docs/specification/about/</a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>配置完成后的效果<br><img src="http://img.wanglixia.top/swagger-配置成功-2019511104721.png" alt="swagger-配置成功-2019511104721"></p><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>添加依赖：<code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- swagger --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mangofactory<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-springmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加SwaggerConfig.java文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.framework.config;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> Swagger2配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.weyoung.platform"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">systemApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select() <span class="comment">// 选择生成文档的路径</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.weyoung.platform"</span>))    <span class="comment">// 扫描com.weyoung.platform路径下的api文档</span></span><br><span class="line">                .paths(PathSelectors.any())      <span class="comment">// 扫描所有路径</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> Api文件的说明</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Param</span> []</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> springfox.documentation.service.ApiInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"Swagger配置"</span>) <span class="comment">//文档标题</span></span><br><span class="line">                .description(<span class="string">"SSM-NOTE项目的Swagger文档配置"</span>)    <span class="comment">// 文档描述</span></span><br><span class="line">                .termsOfServiceUrl(<span class="string">"https://www.wanglixia.top/"</span>)</span><br><span class="line">                .version(<span class="string">"v1.0.0"</span>)<span class="comment">// 版本号</span></span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RequestMappingInfoHandlerMapping <span class="title">requestMappingInfoHandlerMapping</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RequestMappingHandlerMapping();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将 springSwaggerConfig加载到spring容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将自定义的swagger配置类加载到spring容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.weyoung.framework.config.SwaggerConfig"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"swagger-ui.html"</span> <span class="attr">location</span>=<span class="string">"classpath:/META-INF/resources/"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/webjars"</span> <span class="attr">location</span>=<span class="string">"classpath:/META-INF/resources/webjars/"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>访问URL：<a href="http://localhost:8080/ssm-note/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/ssm-note/swagger-ui.html</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"获取用户组列表-分页"</span>, notes = <span class="string">"获取用户组列表-分页"</span>, response = SysGroup.class)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/queryList"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageInfo&lt;SysGroup&gt; <span class="title">querySysGroupList4Paging</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                    HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                    @RequestBody SysGroup sysGroup)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Page&lt;SysGroup&gt; page = <span class="keyword">new</span> Page&lt;&gt;(sysGroup.getOffset(), sysGroup.getLimit());</span><br><span class="line">    PageInfo&lt;SysGroup&gt; groupList = sysGroupService.queryUserList4Paging(page, sysGroup);</span><br><span class="line">    <span class="keyword">return</span> groupList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>点击页面出现的一项条目，看到<br><img src="http://img.wanglixia.top/swagger-条目详情-2019511104827.png" alt="swagger-条目详情-2019511104827"></p><p><img src="http://img.wanglixia.top/swagger-参数详情-2019511104957.png" alt="swagger-参数详情-2019511104957"></p><p>点击<code>Try It Out!</code>修改参数后点击<code>Exexute</code>，在下方查看返回结果。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（七）配置Mybatis Generator</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B06.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B06.html</url>
      <content type="html"><![CDATA[<h2 id="什么是Mybatis-Generator"><a href="#什么是Mybatis-Generator" class="headerlink" title="什么是Mybatis Generator"></a>什么是Mybatis Generator</h2><p>&emsp;&emsp; MyBatis Generator（MBG）是MyBatis和iBATIS的代码生成器。能够为所有版本的MyBatis以及版本2.2.0之后的iBATIS版本生成代码。它将内省数据库表（或许多表），并将生成可用于访问表的工件。这减少了设置对象和配置文件以与数据库表交互的初始麻烦。</p><p>MyBatis Generator能够生成：</p><ul><li>与表结构匹配的Java POJO;</li><li>MyBatis/iBATIS兼容的SQL Map XML文件;</li><li>适用于MyBatis3.x Mapper基础结构的Dao接口;</li></ul><a id="more"></a><h2 id="怎么配置MBG"><a href="#怎么配置MBG" class="headerlink" title="怎么配置MBG"></a>怎么配置MBG</h2><p>本文中使用的工具是IDEA，使用Maven构建项目。</p><ul><li>IDE：IDEA；</li><li>构建工具：Maven；</li><li>项目结构：Spring、SpringMVC、Mybatis</li></ul><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis自动生成实体代码的插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 构建项目需要的信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>ssm-note<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 子项目可以引用的默认插件信息。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 。。。其他的一些配置。。。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意这个配置的结构在&lt;build&gt;&lt;/build&gt;中的位置，不然会不能引入插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG配置文件--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/config/mybatis-generator.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--dependencies依赖的组件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库驱动，你自己项目的数据库驱动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG生成器--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MBG--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**注意：plugins中配置的结构，不是在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### mybatis-generator.xml</span><br><span class="line"></span><br><span class="line">在pom.xml中配置了这个文件的路径，```src/main/resources/config/mybatis-generator.xml``` ，创建```mybatis-generator.xml```文件，其内容以及详细内容如下：</span><br><span class="line">**因为我的jdbc.properties文件是在resources/config/jdbc.properties这个位置配置的，因此你需要修改成你自己的。**</span><br><span class="line">```xml</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!--数据库驱动--&gt;</span><br><span class="line">    &lt;properties resource=&quot;config/jdbc.properties&quot;/&gt;</span><br><span class="line">    &lt;!-- 在MBG工作的时候，需要额外加载的依赖包 location属性指明加载jar/zip包的全路径--&gt;</span><br><span class="line">    &lt;classPathEntry</span><br><span class="line">            location=&quot;C:\Users\Mr.wang\.m2\repository\mysql\mysql-connector-java\5.1.26\mysql-connector-java-5.1.26.jar&quot;/&gt;</span><br><span class="line">    &lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line">        &lt;!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；</span><br><span class="line">            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;autoDelimitKeywords&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;!-- 生成的Java文件的编码 --&gt;</span><br><span class="line">        &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot;/&gt;</span><br><span class="line">        &lt;!-- 格式化java代码 --&gt;</span><br><span class="line">        &lt;property name=&quot;javaFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultJavaFormatter&quot;/&gt;</span><br><span class="line">        &lt;!-- 格式化XML代码 --&gt;</span><br><span class="line">        &lt;property name=&quot;xmlFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultXmlFormatter&quot;/&gt;</span><br><span class="line">        &lt;!-- 配置是否生成注释 --&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line">        &lt;!--数据库链接地址账号密码--&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;$&#123;jdbc.mysql.driver&#125;&quot;</span><br><span class="line">                        connectionURL=&quot;$&#123;jdbc.mysql.url&#125;&quot;</span><br><span class="line">                        userId=&quot;$&#123;jdbc.mysql.username&#125;&quot;</span><br><span class="line">                        password=&quot;$&#123;jdbc.mysql.password&#125;&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line">        &lt;!-- java类型处理器</span><br><span class="line">            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；</span><br><span class="line">            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaTypeResolver type=&quot;org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line">        &lt;!-- java模型创建器，是必须要的元素</span><br><span class="line">            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类</span><br><span class="line">            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；</span><br><span class="line">            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成Model类存放位置--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.weyoung.generator.pojo&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;!--  for MyBatis3/MyBatis3Simple</span><br><span class="line">                自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- for MyBatis3 / MyBatis3Simple</span><br><span class="line">                是否创建一个不可变的类，如果为true，</span><br><span class="line">                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置一个根对象，</span><br><span class="line">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：</span><br><span class="line">                    1，属性名相同，类型相同，有相同的getter/setter方法；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;rootClass&quot; value=&quot;com._520it.mybatis.domain.BaseDomain&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!-- 生成SQL map的XML文件生成器，</span><br><span class="line">            注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），</span><br><span class="line">                或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置</span><br><span class="line">            targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成映射文件存放位置--&gt;</span><br><span class="line">        &lt;sqlMapGenerator</span><br><span class="line">                targetPackage=&quot;com.weyoung.generator.mappers&quot;</span><br><span class="line">                targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line">        &lt;!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口</span><br><span class="line">            targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：</span><br><span class="line">                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；</span><br><span class="line">                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；</span><br><span class="line">                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；</span><br><span class="line">            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;!--生成Dao类存放位置--&gt;</span><br><span class="line">        &lt;javaClientGenerator</span><br><span class="line">                type=&quot;XMLMAPPER&quot;</span><br><span class="line">                targetPackage=&quot;com.weyoung.generator.dao&quot;</span><br><span class="line">                targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line">        &lt;!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素</span><br><span class="line">            选择的table会生成一下文件：</span><br><span class="line">            1，SQL map文件</span><br><span class="line">            2，生成一个主键类；</span><br><span class="line">            3，除了BLOB和主键的其他字段的类；</span><br><span class="line">            4，包含BLOB的类；</span><br><span class="line">            5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；</span><br><span class="line">            6，Mapper接口（可选）</span><br><span class="line"></span><br><span class="line">            tableName（必要）：要生成对象的表名；</span><br><span class="line">            注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会</span><br><span class="line">                根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：</span><br><span class="line">                1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；</span><br><span class="line">                2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；</span><br><span class="line">                3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；</span><br><span class="line">                4，否则，使用指定的大小写格式查询；</span><br><span class="line">            另外的，如果在创建表的时候，使用的&quot;&quot;把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；</span><br><span class="line">            这个时候，请设置delimitIdentifiers=&quot;true&quot;即可保留大小写格式；</span><br><span class="line"></span><br><span class="line">            可选：</span><br><span class="line">            1，schema：数据库的schema；</span><br><span class="line">            2，catalog：数据库的catalog；</span><br><span class="line">            3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName</span><br><span class="line">            4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；</span><br><span class="line">            5，enableInsert（默认true）：指定是否生成insert语句；</span><br><span class="line">            6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；</span><br><span class="line">            7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；</span><br><span class="line">            8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；</span><br><span class="line">            9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；</span><br><span class="line">            10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；</span><br><span class="line">            11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；</span><br><span class="line">            12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；</span><br><span class="line">            13，modelType：参考context元素的defaultModelType，相当于覆盖；</span><br><span class="line">            14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）</span><br><span class="line">            15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性</span><br><span class="line"></span><br><span class="line">            注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--生成对应表及类名--&gt;</span><br><span class="line">        &lt;table tableName=&quot;sys_menu&quot;</span><br><span class="line">               domainObjectName=&quot;SysMenu&quot;</span><br><span class="line">               enableCountByExample=&quot;true&quot;</span><br><span class="line">               enableUpdateByExample=&quot;true&quot;</span><br><span class="line">               enableDeleteByExample=&quot;true&quot;</span><br><span class="line">               enableSelectByExample=&quot;true&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;true&quot;&gt;</span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 constructorBased属性--&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;ignoreQualifiersAtRuntime&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 immutable 属性 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;modelOnly&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考 javaModelGenerator 的 rootClass 属性</span><br><span class="line">            &lt;property name=&quot;rootClass&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考javaClientGenerator 的  rootInterface 属性</span><br><span class="line">            &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog</span><br><span class="line">            &lt;property name=&quot;runtimeCatalog&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema</span><br><span class="line">            &lt;property name=&quot;runtimeSchema&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename</span><br><span class="line">            &lt;property name=&quot;runtimeTableName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 注意，该属性只针对MyBatis3Simple有用；</span><br><span class="line">                如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;selectAllOrderByClause&quot; value=&quot;age desc,username asc&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;!-- generatedKey用于生成生成主键的方法，</span><br><span class="line">                如果设置了该元素，MBG会在生成的&lt;insert&gt;元素中生成一条正确的&lt;selectKey&gt;元素，该元素可选</span><br><span class="line">                column:主键的列名；</span><br><span class="line">                sqlStatement：要生成的selectKey语句，有以下可选项：</span><br><span class="line">                    Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1</span><br><span class="line">                    Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                    HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()</span><br><span class="line">                    Informix  :相当于selectKey的SQL为：select dbinfo(&apos;sqlca.sqlerrd1&apos;) from systables where tabid=1</span><br><span class="line">                    MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()</span><br><span class="line">                    SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()</span><br><span class="line">                    SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY</span><br><span class="line">                    JDBC      :相当于在生成的insert元素上添加useGeneratedKeys=&quot;true&quot;和keyProperty属性</span><br><span class="line">            &lt;generatedKey column=&quot;&quot; sqlStatement=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--</span><br><span class="line">                该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，</span><br><span class="line">                比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；</span><br><span class="line">                那么就可以设置searchString为&quot;^CUST_&quot;，并使用空白替换，那么生成的Customer对象中的属性名称就不是</span><br><span class="line">                custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；</span><br><span class="line"></span><br><span class="line">                注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，</span><br><span class="line">                如果使用了columnOverride元素，该属性无效；</span><br><span class="line"></span><br><span class="line">            &lt;columnRenamingRule searchString=&quot;&quot; replaceString=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；</span><br><span class="line">                column:要重新设置的列名；</span><br><span class="line">                注意，一个table元素中可以有多个columnOverride元素哈~</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;columnOverride column=&quot;username&quot;&gt;--&gt;</span><br><span class="line">            &lt;!-- 使用property属性来指定列要生成的属性名称 --&gt;</span><br><span class="line">            &lt;!--&lt;property name=&quot;property&quot; value=&quot;userName&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名</span><br><span class="line">            &lt;property name=&quot;javaType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- jdbcType用于指定该列的JDBC类型</span><br><span class="line">            &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名</span><br><span class="line">                注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler</span><br><span class="line">                只会生成类似：where id = #&#123;id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler&#125;的参数描述</span><br><span class="line">            &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line">            &lt;property name=&quot;delimitedColumnName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;!--&lt;/columnOverride&gt;--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现</span><br><span class="line">                column:指定要忽略的列的名字；</span><br><span class="line">                delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line"></span><br><span class="line">                注意，一个table元素中可以有多个ignoreColumn元素</span><br><span class="line">            &lt;ignoreColumn column=&quot;deptId&quot; delimitedColumnName=&quot;&quot;/&gt;</span><br><span class="line">            --&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></p><h3 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h3><p>配置完成之后，在如下位置，双击<code>mybatis-generator:generate</code>即可执行<br><img src="http://img.wanglixia.top/MBG安装-1-201939192516.png" alt="MBG安装-1-201939192516"></p><p>生成的代码在src/main/java/com.weyoung.generator里面，如下：<br><img src="http://img.wanglixia.top/生成内容如下-201939194822.png" alt="生成内容如下-201939194822"></p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> Mybatis Generator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（六）缓存配置Ehcache</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B05.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B05.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 缓存（Caching）可以存储经常会用到的信息，在需要的时候，直接返回这些信息。Spring对缓存的支持有两种方式：1）注解驱动的缓存；2）XML声明的缓存；本文使用第二种方式来实际进行配置。</p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><ul><li>缓存内容详解</li><li>配置Ehcache缓存</li><li>配置Mybatis Generator</li></ul><h2 id="缓存内容详解"><a href="#缓存内容详解" class="headerlink" title="缓存内容详解"></a>缓存内容详解</h2><p>&emsp;&emsp; 使用<code>@EnableCaching</code>和<code><a href="cache:annotation-driven/" target="_blank" rel="noopener">cache:annotation-driven/</a></code> 的工作方式是相同的，都会创建一个切面并触发Spring缓存注解的切点。根据所使用的注解以及缓存的状态，这个切面会从缓存中获取数据，将数据添加到缓存之中或者从缓存中移除某个值。在启用注解驱动的缓存时，还声明了一个缓存管理器的bean。缓存管理器是Spring缓存抽象的核心，能够与多个流行的缓存实现进行集成。</p><a id="more"></a><h3 id="如何启用缓存"><a href="#如何启用缓存" class="headerlink" title="如何启用缓存"></a>如何启用缓存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 使用<span class="doctag">@EnableCaching</span>启用注解驱动的缓存</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span>  <span class="comment">// 启用缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">()</span> </span>&#123;    <span class="comment">// 声明缓存管理器</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ConcurrentMapCacheManager();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>XML方式配置方式如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Ehcache配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 启用缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 声明缓存管理器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.concurrent.ConcurrentMapCacheManager"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>ConcurrentMapCacheManager 使用 java.util.concurrent.ConcurrentHashMap 作为缓存存储，这个缓存存储是基于内存的，因此其生命周期是与应用关联的，不太适合于生产级别的大型企业级应用程序，因此有其他的缓存管理器方案可供使用。</p><h3 id="配置缓存管理器"><a href="#配置缓存管理器" class="headerlink" title="配置缓存管理器"></a>配置缓存管理器</h3><p>Spring中内置了如下几种缓存管理器实现：</p><ol><li>SimpleCacheManager</li><li>NoOpCacheManager</li><li>ConcurrentMapCacheManager</li><li>CompositeCacheManager</li><li>EhCacheCacheManager<br>…</li></ol><p>SpringData提供的缓存管理器：</p><ol><li>RedisCacheManager（来自于Spring Data Redis项目）</li><li>GemfireCacheManager（来自于Spring Data GemFire项目）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> net.sf.ehcache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.ehcache.EhCacheCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.ehcache.EhCacheManagerFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 使用<span class="doctag">@EnableCaching</span>启用注解驱动的缓存</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span>  <span class="comment">// 启用缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheCacheManager <span class="title">cacheManager</span><span class="params">(CacheManager cm)</span> </span>&#123;    <span class="comment">// 配置EhCacheCacheManager</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> EhCacheCacheManager(cm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManagerFactoryBean <span class="title">ehcache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        EhCacheManagerFactoryBean ehCacheFactoryBean = <span class="keyword">new</span> EhCacheManagerFactoryBean();</span><br><span class="line">        ehCacheFactoryBean.setConfigLocation(<span class="keyword">new</span> ClassPathResource(<span class="string">""</span>));</span><br><span class="line">        <span class="keyword">return</span> ehCacheFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过CompositeCacheManager使用多个缓存管理器。</p><h3 id="一、为方法添加注解支持缓存"><a href="#一、为方法添加注解支持缓存" class="headerlink" title="一、为方法添加注解支持缓存"></a>一、为方法添加注解支持缓存</h3><p>以下注解如果放在单独的方法上时，注解所描述的缓存行为只作用于这个方法上，如果放在类级别，那么缓存行为就会应用到这个类的所有方法上。</p><table><thead><tr><th style="text-align:left">注解</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">@Cacheable</td><td style="text-align:left">Spring在调用方法之前，首先应该在缓存中查找方法的返回值。如果这个值能够找到，就会返回缓存的值。否则，这个方法就会被调用，返回值就会放到缓存之中</td></tr><tr><td style="text-align:left">@CachePut</td><td style="text-align:left">Spring应该将方法的返回值放到缓存中，在方法的调用前并不会检查缓存，方法始终会被调用</td></tr><tr><td style="text-align:left">@CacheEvict</td><td style="text-align:left">Spring应该在缓存中清除一个或多个条目</td></tr><tr><td style="text-align:left">@Caching</td><td style="text-align:left">一个分组的注解，能够同时应用多个其他的缓存注解</td></tr></tbody></table><h4 id="填充缓存"><a href="#填充缓存" class="headerlink" title="填充缓存"></a>填充缓存</h4><p>@Cacheable和@CachePut注解都可以填充缓存。</p><p>示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="自定义缓存key"><a href="#自定义缓存key" class="headerlink" title="自定义缓存key"></a>自定义缓存key</h4><p>默认的缓存key要基于方法的参数来确定，参数是一个map，那么其缓存的key也是这个map，因此需要把默认的key改为map的key，而不是这个map，所以需要自定义缓存key。 </p><p>Spring 提供了多个用来定义缓存规则的SpEL扩展<br>|表达式|描述|<br>|:—|:—|<br>|#root.args|传递给缓存方法的参数，形式为数组|<br>|#root.caches|该方法执行时所对应的缓存，形式为数组|<br>|#root.target|目标对象|<br>|#root.targetClass|目标对象的类，是#root.target.class的简写形式|<br>|#root.method|缓存方法|<br>|#root.methodName|缓存方法的名字，是#root.method.name的简写形式|<br>|#result|方法调用的返回值（不能用在@Cacheable主街上）|<br>|#Argument|任意的方法参数名（如#argName）或参数索引（如#a0或#p0）|</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> key=<span class="string">"#result.id"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">save</span><span class="params">(Spittle spittle)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="条件化缓存"><a href="#条件化缓存" class="headerlink" title="条件化缓存"></a>条件化缓存</h4><blockquote><p>前面说的是通过为方法添加Spring的缓存注解，Spring就会围绕着这个方法创建一个缓存切面。条件化缓存是说将缓存功能关闭的一些场景。@Cacheable和@CachePut提供两个属性用以实现条件化缓存：unless和condition。如果unless属性的SpEL表达式计算结果为true，缓存方法返回的数据不会放到缓存中。如果condition属性的SpEL表达式计算结果为false，对于这个方法缓存就会被禁用掉。</p></blockquote><p>unless属性只能阻止将对象放进缓存，但是在这个方法调用的时候，依然会去缓存中进行查找。如果condition的表达式计算结果为false，这个方法调用时，缓存是被禁用的，也就不会去缓存中查找，返回值也不会放进缓存中。</p><p>例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// unless用法，对于属性中包含NoCache的Spittle对象，不对其进行缓存</span></span><br><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> unless=<span class="string">"#result.message.contains('NoCache')"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// condition用法，如果findOne方法调用时，参数值小于10，不会在缓存中进行查找，返回的数据也不会放进缓存中</span></span><br><span class="line"><span class="meta">@Cacheable</span>(value=<span class="string">"spittleCache"</span> </span><br><span class="line">    unless=<span class="string">"#result.message.contains('NoCache')"</span></span><br><span class="line">    condition=<span class="string">"#id &gt;= 10"</span>)</span><br><span class="line"><span class="function">Spittle <span class="title">findOne</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br></pre></td></tr></table></figure></p><h4 id="移除缓存条目"><a href="#移除缓存条目" class="headerlink" title="移除缓存条目"></a>移除缓存条目</h4><p>@CacheEvict不会往缓存中添加任何东西，且如果带有该注解的方法被调用的话，缓存中的一个或更多的条目会被移除。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheEvict</span>(<span class="string">"spittleCache"</span>)</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">long</span> spittleId)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>注意：@Cacheable和@CacheEvict必须应用在返回值非void的方法上，@CacheEvict可以放在任意的方法上，甚至void方法</strong></p><p><strong>@Cacheable注解的属性，指定哪些缓存条目应该被移除掉</strong><br>|属性|类型|描述|<br>|:—|:—|:—|<br>|value|String[]|要使用的缓存名称|<br>|key|String|SpEL表达式，用来计算自定义的缓存key|<br>|condition|String|SpEL表达式，如果得到的值是false的话，缓存不会应用到方法调用上|<br>|allEntries|boolean|如果为true的话，特定缓存的所有条目都会被移除掉|<br>|beforeInvoication|boolean|如果为true的话，在方法调用之前移除条目，如果为false（默认值）的话，在方法成功调用之后再移除条目|</p><h3 id="二、使用XML声明缓存"><a href="#二、使用XML声明缓存" class="headerlink" title="二、使用XML声明缓存"></a>二、使用XML声明缓存</h3><table><thead><tr><th style="text-align:left">元素</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="cache:annotation-driven" target="_blank" rel="noopener">cache:annotation-driven</a></td><td style="text-align:left">启用注解驱动的缓存，等同于Java配置中的@EnableCaching</td></tr><tr><td style="text-align:left"><a href="cache:advice" target="_blank" rel="noopener">cache:advice</a></td><td style="text-align:left">定义缓存通知。结合<a href="aop:advisor" target="_blank" rel="noopener">aop:advisor</a>，将通知应用到切点上</td></tr><tr><td style="text-align:left"><a href="cache:caching" target="_blank" rel="noopener">cache:caching</a></td><td style="text-align:left">在缓存通知中定义缓存规则</td></tr><tr><td style="text-align:left"><a href="cache:cacheable" target="_blank" rel="noopener">cache:cacheable</a></td><td style="text-align:left">指明某个方法要进行缓存。等同于@Cacheable注解</td></tr><tr><td style="text-align:left"><a href="cache:cache-put" target="_blank" rel="noopener">cache:cache-put</a></td><td style="text-align:left">指明某个方法要填充缓存，但不会考虑缓存中时候已有匹配的值，等同于@CachePut注解</td></tr><tr><td style="text-align:left"><a href="cache:cache-evict" target="_blank" rel="noopener">cache:cache-evict</a></td><td style="text-align:left">指明某个方法要从缓存中移除一项或多项，等同于@CacheEvict注解</td></tr></tbody></table><h4 id="填充缓存-1"><a href="#填充缓存-1" class="headerlink" title="填充缓存"></a>填充缓存</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cacheable</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache:cacheable</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"findRecent"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义缓存key-1"><a href="#自定义缓存key-1" class="headerlink" title="自定义缓存key"></a>自定义缓存key</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cache-put</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"save"</span> <span class="attr">key</span>=<span class="string">"#result.id"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="移除缓存条目-1"><a href="#移除缓存条目-1" class="headerlink" title="移除缓存条目"></a>移除缓存条目</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache:cache-evict</span> <span class="attr">cache</span>=<span class="string">"spittleCache"</span> <span class="attr">method</span>=<span class="string">"remove"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置Ehcache缓存"><a href="#配置Ehcache缓存" class="headerlink" title="配置Ehcache缓存"></a>配置Ehcache缓存</h2><p>Ehcache的主要特性有:</p><ol><li>快速、精干，简单；</li><li>多种缓存策略；</li><li>缓存数据有两级:内存和磁盘，因此无需担心容量问题；</li><li>缓存数据会在虚拟机重启的过程中写入磁盘；</li><li>可以通过RMI、可插入API等方式进行分布式缓存；</li><li>具有缓存和缓存管理器的侦听借口；</li><li>支持多缓存管理器实例，以及一个实例的多个缓存区域；</li><li>提供Hibernate 的缓存实现；</li></ol><p>上面的声明应该改为以下方式</p><p>pom.xml添加配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加spring-ehcache.xml并配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/cache</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/cache/spring-cache.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Ehcache缓存配置文件<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Ehcache配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 启用缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache:annotation-driven</span> <span class="attr">cache-manager</span>=<span class="string">"cacheManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明缓存管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"ehcache"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.ehcache.EhCacheManagerFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/ehcache.xml"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- true:一个cacheManager对象共享，false：多个对象独立 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shared"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span> <span class="comment">&lt;!-- 这里是关键！！！没有必错 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cacheManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.cache.ehcache.EhCacheCacheManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cacheManager"</span> <span class="attr">ref</span>=<span class="string">"ehcache"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>spring-config.xml中添加配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加载Ehcache缓存配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:config/spring-ehcache.xml"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>在resources/config文件夹下添加ehcache.xml并添加配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="comment">&lt;!-- 这个name和updateCheck 都按这样配置最好，不然启动时会在前台报错403，IOException--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">name</span>=<span class="string">"ehcache"</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存位置 java.io.tmpdir:Java临时目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir/ehcache"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 默认缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">"100"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxEntriesLocalDisk</span>=<span class="string">"10000000"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--name：Cache的唯一标识</span></span><br><span class="line"><span class="comment">        maxElementsInMemory：内存中最大缓存对象数。</span></span><br><span class="line"><span class="comment">        maxElementsOnDisk：磁盘中最大缓存对象数，若是0表示无穷大。</span></span><br><span class="line"><span class="comment">        eternal：Element是否永久有效，一但设置了，timeout将不起作用。</span></span><br><span class="line"><span class="comment">        overflowToDisk：配置此属性，当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到磁盘中。</span></span><br><span class="line"><span class="comment">        timeToIdleSeconds：设置Element在失效前的允许闲置时间。仅当element不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。</span></span><br><span class="line"><span class="comment">        timeToLiveSeconds：设置Element在失效前允许存活时间。最大时间介于创建时间和失效时间之间。仅当element不是永久有效时使用，默认是0.，也就是element存活时间无穷大。</span></span><br><span class="line"><span class="comment">        diskPersistent：是否缓存虚拟机重启期数据。（Server重启时将缓存序列化到本地，后再加载，保证缓存在重启后依然有效）。</span></span><br><span class="line"><span class="comment">        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。</span></span><br><span class="line"><span class="comment">        diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。</span></span><br><span class="line"><span class="comment">        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。这里比较遗憾，Ehcache并没有提供一个用户定制策略的接口，仅仅支持三种指定策略，感觉做的不够理想。--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 系统缓存，用来缓存菜单、字典等 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"systemCatch"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"30"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这三个文件配置完了之后，Ehcache的配置也就完成了，下面我们说一下测试的方法。</p><h3 id="测试缓存配置"><a href="#测试缓存配置" class="headerlink" title="测试缓存配置"></a>测试缓存配置</h3><p>SysMenuServiceImpl.java 中添加如下代码。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysMenuServiceImpl</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">SysMenu</span>&gt; <span class="keyword">implements</span> <span class="title">SysMenuService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(SysMenuServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SysMenuDao sysMenuDao;</span><br><span class="line">    <span class="comment">// value对应ehcache.xml中的cache name，key就是这个缓存条目的key</span></span><br><span class="line">    <span class="meta">@Cacheable</span>(value=<span class="string">"systemCatch"</span>, key=<span class="string">"'SysMenuServiceImpl.systemCatch'"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SysMenu&gt; <span class="title">findMenuList</span><span class="params">(SysMenu sysMenu)</span> </span>&#123;</span><br><span class="line">        List&lt;SysMenu&gt; sysMenus = sysMenuDao.queryMenuList(sysMenu);</span><br><span class="line">        Long timestamp = System.currentTimeMillis();</span><br><span class="line">        logger.error(<span class="string">"timestamp&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span> + timestamp);</span><br><span class="line">        <span class="keyword">return</span> sysMenus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>SysMenuController.java 中添加如下代码，观察start 和 end方法之间会不会打印sql以及中间打印时间的日志。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"sysMenuList"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SysMenu&gt; <span class="title">getSysMenuList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SysMenu sysMenu = <span class="keyword">new</span> SysMenu();</span><br><span class="line">    sysMenu.setMenuId(<span class="string">"01"</span>);</span><br><span class="line">    logger.info(<span class="string">"-----------------------------------------------findMenuList start-----------------------------------"</span>);</span><br><span class="line">    List&lt;SysMenu&gt; menuList = sysMenuService.findMenuList(sysMenu);</span><br><span class="line">    logger.info(<span class="string">"-----------------------------------------------findMenuList end-----------------------------------"</span>);</span><br><span class="line">    <span class="keyword">return</span> menuList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>具体效果如下：</p><p><img src="http://img.wanglixia.top/ehcache-1-20193103302.png" alt="ehcache-1-20193103302"></p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.webresources.Cache.backgroundProcess The background cache eviction process was unable to free [10] percent of the cache for Context [/lx_note] - consider increasing the maximum size of the cache. After eviction approximately [9,686] KB of data remained in the cache.</span><br></pre></td></tr></table></figure><p>并没有报错，只是Console打印出来信息，提示不能自动释放10%的缓存，需要调大cache的最大容量；</p><p>解决方法：<br>Tomcat8 的conf/目录下的context.xml添加配置,默认大小是10240即10M，这边给调大了10倍。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Resources cachingAllowed=&quot;true&quot; cacheMaxSize=&quot;102400&quot; /&gt;</span><br></pre></td></tr></table></figure></p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> 异常 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（五）统一异常处理</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B04.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B04.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 在Java项目中，在控制器、业务层、数据库操作的过程中，总是会遇到各种可控和不可控的异常需要处理，如果我们在每一个异常可能出现的地方都手动使用try{}catch{}单独处理异常的话，会产生的最大的问题就是：异常处理过程中的返回错误信息、日志打印都可能不统一，导致代码冗余和不可维护。因此我们使用统一的方式处理异常：</p><a id="more"></a><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><h3 id="一、SpringMVC处理异常方式："><a href="#一、SpringMVC处理异常方式：" class="headerlink" title="一、SpringMVC处理异常方式："></a>一、SpringMVC处理异常方式：</h3><ol><li>使用@ExceptionHandler注解：弊端：进行异常处理的方法必须与出错的方法在同一个Controller里面；</li><li>实现HandlerExceptionResolver接口：可以进行全局的异常控制。</li><li>使用@ControllerAdvice注解：使用了该注解之后，需要进行异常处理的方法与出错的方法就不必须在同一个Controller中了。@ControllerAdvice + @ExceptionHandler也可以实现全局的异常捕捉。</li></ol><h3 id="二、为控制器添加通知"><a href="#二、为控制器添加通知" class="headerlink" title="二、为控制器添加通知"></a>二、为控制器添加通知</h3><blockquote><p>如果要在多个控制器中处理异常，使用@ExceptionHandler注解是很有用的，但是如果多个控制器类中都会抛出异常，那么所有的控制器中都有重复相同的@ExceptionHandler方法。因此，需要创建一个基础的控制器类，所有的控制器要扩展这个类，从而继承通用的@ExceptionHandler方法。</p></blockquote><p>&emsp;&emsp; Spring3.2引入了一个新的解决方案：控制器通知。控制器通知是所有带有@ControllerAdvice注解的类，这个类会包含一个或多个如下类型的方法：</p><ul><li>@ExceptionHandler注解标注的方法；</li><li>@InitBinder注解标注的方法；</li><li>@ModelAttribute注解标注的方法；</li></ul><p>&emsp;&emsp; @ControllerAdvice可以将所有的@ExceptionHandler方法收集到一个类中，把所有的控制器异常进行一致的处理。</p><p>添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```java</span><br><span class="line">package com.weyoung.framework.config;</span><br><span class="line"></span><br><span class="line">import com.weyoung.framework.exception.BusinessException;</span><br><span class="line">import com.weyoung.framework.web.Message;</span><br><span class="line">import com.weyoung.platform.pojo.UserInfo;</span><br><span class="line">import org.apache.log4j.Logger;</span><br><span class="line">import org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line">import org.springframework.web.bind.annotation.ModelAttribute;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">import static com.weyoung.framework.common.Constants.SESSION_DEFAULT;</span><br><span class="line">import static com.weyoung.framework.common.ErrorConstants.EXCEPTION_SYSTEM_MSG;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @作者 weyoung</span><br><span class="line"> * @功能描述 给控制器请求添加默认常用参数，统一处理异常</span><br><span class="line"> * @日期 2019/3/4</span><br><span class="line"> */</span><br><span class="line">@ControllerAdvice</span><br><span class="line">public class ControllerAdviceHandler &#123;</span><br><span class="line"></span><br><span class="line">    private static final Logger logger = Logger.getLogger(ControllerAdviceHandler.class);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @Description // 添加用户信息，可以在Controller中获取</span><br><span class="line">     **/</span><br><span class="line">    @ModelAttribute(&quot;BasUser&quot;)</span><br><span class="line">    public UserInfo basUser(HttpServletRequest request) &#123;</span><br><span class="line">        HttpSession session = request.getSession(true);</span><br><span class="line">        UserInfo user = (UserInfo) session.getAttribute(SESSION_DEFAULT);</span><br><span class="line">        return user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(value = Exception.class)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public Message exceptionHandler(Exception ex) &#123;</span><br><span class="line">        // 处理业务异常</span><br><span class="line">        if (ex instanceof BusinessException) &#123;</span><br><span class="line">            logger.error(&quot;BusinessException&quot;, ex);</span><br><span class="line">            // 返回业务异常code和message;</span><br><span class="line">            return Message.failed(((BusinessException) ex).getCode(), ex.getMessage());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            logger.error(&quot;Exception&quot;, ex);</span><br><span class="line">            return Message.failed(Message.FAILED_CODE, EXCEPTION_SYSTEM_MSG);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="三、处理业务异常"><a href="#三、处理业务异常" class="headerlink" title="三、处理业务异常"></a>三、处理业务异常</h3><p>BusinessException.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.framework.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.weyoung.framework.web.Message;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @作者 weyoung</span></span><br><span class="line"><span class="comment"> * @功能描述 业务异常处理</span></span><br><span class="line"><span class="comment"> * @日期 2019/3/4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BusinessException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">        <span class="keyword">this</span>.code = Message.FAILED_CODE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，在Controller中throw一个Exception，发现可以进入该通知了，配置成功。</p><p>在业务处理类中遇到可预知或不可预知的错误，直接由程序拦截处理，我们开发时只管throw Exception即可，控制器通知可以帮助我们处理和返回异常信息。</p><p>个人认为使用消息实体比如本文的Message类来统一规范地处理异常，不同的业务异常最好定义单独的error code，产生异常的信息和具体原因整理成文档，这样可以在上线之后不至于把敏感的错误信息返回到前端，又便于运维、实施同事能够快速地定位异常。</p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html">SSM框架整合笔记（四）使用注解配置切面</a></p></li></ul><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> 异常 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git基本使用</title>
      <link href="/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html"/>
      <url>/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; Git是一个开源的分布式版本控制系统，也是个内容管理系统(CMS),工作管理系统等。常见的网站如Github、Gitee、coding使用的都是Git。Git能够帮助我们记录每一次的修改和提交，创建分支、合并分支等。<br>本文主要介绍Git的基本操作和Git 图形化界面</p><h2 id="Windows版安装"><a href="#Windows版安装" class="headerlink" title="Windows版安装"></a>Windows版安装</h2><ol><li>下载链接：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></li></ol><p>打开-&gt;安装-&gt;一路next-&gt;finish。<br><img src="http://img.wanglixia.top/git_install_1-20193420129.png" alt="git_install_1-20193420129"></p><ol start="2"><li>安装完成后空白界面右键，如下图示，出现<figure class="highlight plain"><figcaption><span>GUI Here```和 ```Git Bash Here```两个选项：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![git_install_2-201934201420](http://img.wanglixia.top/git_install_2-201934201420.png)</span><br><span class="line"></span><br><span class="line">3. 点击```Git Bash Here```选项，弹出Git命令窗口，可以在该窗口进行Git操作；</span><br><span class="line"></span><br><span class="line">## 配置</span><br><span class="line"></span><br><span class="line">使用Git命令窗口，输入以下命令配置全局参数用户名和邮箱地址，使用该参数表示本地所有Git仓库都使用这个配置：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">git config --global user.name &quot;weyoung&quot;</span><br><span class="line">git config --global user.email &quot;ne_lucifer@163.com&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p><img src="http://img.wanglixia.top/git_工作流程-201934204551.png" alt="git_工作流程-201934204551"></p><h3 id="Git的相关概念"><a href="#Git的相关概念" class="headerlink" title="Git的相关概念"></a>Git的相关概念</h3><ul><li>远程仓库（remote）：Git的远程仓库；</li><li>工作空间（workspace）： 仓库文件夹里面除了.git目录以外的内容；</li><li>本地仓库（Repository）：使用commit命令将缓存区文件提交到本地仓库；</li><li>缓存区（stage或者index）：本地修改完文件之后需要add到缓存区，一般存放在.get目录下的index文件中；</li></ul><h2 id="一、Git常用命令"><a href="#一、Git常用命令" class="headerlink" title="一、Git常用命令"></a>一、Git常用命令</h2><h3 id="1-创建仓库和初始化"><a href="#1-创建仓库和初始化" class="headerlink" title="1. 创建仓库和初始化"></a>1. 创建仓库和初始化</h3><p><strong>这个操作主要用于本地创建源码或源文档，然后提交推送到远程仓库。</strong><br>新建目录localRepo执行以下命令初始化为Git仓库，.git是一个隐藏的目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init localRepo</span><br></pre></td></tr></table></figure></p><p>localRepo 为本地仓库<br><img src="http://img.wanglixia.top/git-init-1-201934211129.png" alt="git-init-1-201934211129"></p><h3 id="2-将文件添加到版本控制"><a href="#2-将文件添加到版本控制" class="headerlink" title="2. 将文件添加到版本控制"></a>2. 将文件添加到版本控制</h3><p>在localRepo中新建一个文件README.txt，使用以下命令可以将文件添加到缓存区（暂存区）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add README.txt</span><br><span class="line">git add *.java <span class="comment"># 这个命令就是把.java结尾的文件提交到暂存区</span></span><br></pre></td></tr></table></figure></p><h3 id="3-将暂存区文件提交到本地仓库"><a href="#3-将暂存区文件提交到本地仓库" class="headerlink" title="3. 将暂存区文件提交到本地仓库"></a>3. 将暂存区文件提交到本地仓库</h3><p>使用如下命令将暂存区文件提交到本地仓库，-m 后面的就是提交的说明内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;这里填写提交信息&apos;</span><br></pre></td></tr></table></figure></p><p><img src="http://img.wanglixia.top/git-commit-201934212219.png" alt="git-commit-201934212219"></p><h3 id="4-取消已缓存的内容"><a href="#4-取消已缓存的内容" class="headerlink" title="4. 取消已缓存的内容"></a>4. 取消已缓存的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD README.txt</span><br></pre></td></tr></table></figure><h3 id="5-Git分支管理"><a href="#5-Git分支管理" class="headerlink" title="5. Git分支管理"></a>5. Git分支管理</h3><h4 id="5-1-创建分支命令"><a href="#5-1-创建分支命令" class="headerlink" title="5.1. 创建分支命令"></a>5.1. 创建分支命令</h4><p>创建分支：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名称</span><br></pre></td></tr></table></figure></p><p>列出本地所有分支：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></p><h4 id="5-2-切换分支命令"><a href="#5-2-切换分支命令" class="headerlink" title="5.2. 切换分支命令"></a>5.2. 切换分支命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 分支名称</span><br></pre></td></tr></table></figure><h4 id="5-3-删除分支"><a href="#5-3-删除分支" class="headerlink" title="5.3. 删除分支"></a>5.3. 删除分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支名称</span><br></pre></td></tr></table></figure><h4 id="5-4-分支合并"><a href="#5-4-分支合并" class="headerlink" title="5.4. 分支合并"></a>5.4. 分支合并</h4><p>本地有多个分支且非当前分支有了更改的内容，通过以下命令合并到当前分支中。<br>如：本地有两个分支，一个newbranch、一个master（当前分支），可以将newbranch合并到master分支中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge newbranch</span><br></pre></td></tr></table></figure><h4 id="5-5-查看提交历史"><a href="#5-5-查看提交历史" class="headerlink" title="5.5. 查看提交历史"></a>5.5. 查看提交历史</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="6-从远程仓库克隆代码到本地（常用）"><a href="#6-从远程仓库克隆代码到本地（常用）" class="headerlink" title="6. 从远程仓库克隆代码到本地（常用）"></a>6. 从远程仓库克隆代码到本地（常用）</h3><p>这个是在日常工作中比较常用的命令，如已经有了现成的Git服务器和远程仓库，我们需要把远程仓库的项目克隆到本地。<br>使用以下命令：</p><p>git clone &lt;远程仓库路径&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/nelucifer/ssm-note.git</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/git-clone-201934215050.png" alt="git-clone-201934215050"></p><h3 id="7-从远程仓库获取更新"><a href="#7-从远程仓库获取更新" class="headerlink" title="7. 从远程仓库获取更新"></a>7. 从远程仓库获取更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class="line"><span class="comment"># 示例如下：</span></span><br><span class="line">git pull origin next:master</span><br></pre></td></tr></table></figure><h3 id="8-推送代码到远程仓库"><a href="#8-推送代码到远程仓库" class="headerlink" title="8. 推送代码到远程仓库"></a>8. 推送代码到远程仓库</h3><p>本地新增了一个文件，</p><ul><li>需要使用 <figure class="highlight plain"><figcaption><span>add``` 命令添加到缓存区；</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 然后使用 ```git commit``` 命令提交到本地仓库；</span><br><span class="line">* 最后使用 ```git push``` 命令推送到远程仓库。</span><br><span class="line"></span><br><span class="line">示例代码如下：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"># 示例如下</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h3><ul><li><code>git commit</code>：是将本地修改过的文件提交到本地库中；</li><li><code>git push</code>：是将本地库中的最新信息发送给远程库；</li><li><code>git pull</code>：是从远程获取最新版本到本地，并自动merge；</li><li><code>git fetch</code>：是从远程获取最新版本到本地，不会自动merge；</li><li><code>git merge</code>：是用于从指定的commit(s)合并到当前分支，用来合并两个分支；</li></ul><h2 id="二、Git图形化工具Source-Tree"><a href="#二、Git图形化工具Source-Tree" class="headerlink" title="二、Git图形化工具Source Tree"></a>二、Git图形化工具Source Tree</h2><p>Source Tree号称是最好用的Git GUI工具，很适合上手，如下：<br>包含拉取、提交、推送、获取、添加标签、添加分支，无需使用命令，基本可满足日常开发使用：</p><p><img src="http://img.wanglixia.top/SourceTree使用-20193422519.png" alt="SourceTree使用-20193422519"></p><h3 id="SourceTree-下载"><a href="#SourceTree-下载" class="headerlink" title="SourceTree 下载"></a>SourceTree 下载</h3><p>SourceTree 下载地址：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><h3 id="SourceTree-安装配置"><a href="#SourceTree-安装配置" class="headerlink" title="SourceTree 安装配置"></a>SourceTree 安装配置</h3><p>双击下载的exe文件进行安装，发现强制使用Bitbucket登录，目前免密登录的方式已经失效。老老实实注册Bitbucket吧。如果嫌比较繁琐的话，可以使用Git自带的GUI工具、tortoisegit等，也可以使用IDEA相关的软件可以使用IDEA自带的GIT工具吧。</p><p><img src="http://img.wanglixia.top/SourceTree-1-201934232613.png" alt="SourceTree-1-201934232613"></p><p>选择 Create one for free链接，注册账户，完成之后点击Bitbucket授权，点击下一步。</p><p><img src="http://img.wanglixia.top/SourceTree-3-201934232739.png" alt="SourceTree-3-201934232739"></p><p><img src="http://img.wanglixia.top/SourceTree-4-201934232850.png" alt="SourceTree-4-201934232850"></p><p><img src="http://img.wanglixia.top/SourceTree-5-201934234343.png" alt="SourceTree-5-201934234343"></p><p>安装完成之后，输入我们的项目的远程仓库地址：</p><p><img src="http://img.wanglixia.top/SourceTree-6-201934234631.png" alt="SourceTree-6-201934234631"></p><p>拉取该项目，完成项目修改之后暂存-&gt;修改描述-&gt;提交，提交时会弹出账号密码框，输入账号密码即可。<br>可以看到账户密码已经被添加了：</p><p><img src="http://img.wanglixia.top/SourceTree-10-2019350734.png" alt="SourceTree-10-2019350734"></p><p>完成。</p><h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><ul><li>易百教程-Git教程：<a href="https://www.yiibai.com/git/" target="_blank" rel="noopener">https://www.yiibai.com/git/</a></li></ul><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>觉得好看的话，请点击下方二维码扫描加关注，或者点个好看哦~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 工具 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（四）使用注解配置切面</title>
      <link href="/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html"/>
      <url>/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B03.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp; 面向切面编程（aspect-oriented programming，AOP），前面的文章里面描述AOP主要的作用是：日志记录，性能统计，安全控制，事务处理，异常处理，权限登录等等。本文中，我们使用切面来配置日志记录，其他的使用方式基本和这个一样。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><a id="more"></a><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>&emsp;&emsp; 该项目持续更新中，会在代码以及该文档里面详细注释和介绍。项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><h3 id="一、注解"><a href="#一、注解" class="headerlink" title="一、注解"></a>一、注解</h3><p>&emsp;&emsp; 注解(Annotation)：一个注解就是一个类，@interface用来声明一个注解，其中的每一个方法实际上是声明了一个配置参数。方法的名称就是参数的名称，返回值类型就是参数的类型（返回值类型只能是基本类型、Class、String、enum）。可以通过default来声明参数的默认值。</p><ul><li>定义注解格式： public @interface 注解名 {定义体，定义体中的方法名称就是注解参数名称}</li><li>注解参数的可支持数据类型：<ol><li>所有基本数据类型（int、float、boolean、byte、double、char、long、short）；</li><li>String 类型；</li><li>Class 类型；</li><li>enum 枚举类型；</li><li>Annotation类型；</li><li>以上所有类型的数组</li></ol></li></ul><h3 id="二、面向切面编程"><a href="#二、面向切面编程" class="headerlink" title="二、面向切面编程"></a>二、面向切面编程</h3><p>&emsp;&emsp;面向切面编程（AOP）：利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。可以参考本文内容：<a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a>；切面就是为了实现各个业务模块通用功能的复用，比如业务操作（Service）中我们需要记录日志，就使用切面来织入各业务模块。5种通知类型：前置通知、后置通知、环绕通知、返回通知、异常通知。</p><p>Spring 提供</p><h2 id="配置注解驱动的切面"><a href="#配置注解驱动的切面" class="headerlink" title="配置注解驱动的切面"></a>配置注解驱动的切面</h2><h3 id="一、添加依赖"><a href="#一、添加依赖" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h3><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置注解类"><a href="#二、配置注解类" class="headerlink" title="二、配置注解类"></a>二、配置注解类</h3><p>这个类是为了打印日志的时候声明该方法作用，也就是方法的注释。</p><p><code>Log.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.weyoung.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Log &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该注解的使用方式，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法名</span></span><br><span class="line"><span class="meta">@Log</span>(<span class="string">"登录"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">systemLogin</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String viewName = <span class="string">"/welcome"</span>;</span><br><span class="line">    <span class="keyword">return</span> viewName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、配置切面"><a href="#三、配置切面" class="headerlink" title="三、配置切面"></a>三、配置切面</h3><p><code>LogAspect.java</code>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.weyoung.aspect;</span><br><span class="line"><span class="comment">//import ...; 导入包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> // 配置业务处理-系统日志切面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/3 2:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Param</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    LoggerService loggerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // 异常日志打印到日志文件中</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(LogAspect.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // Controller层切点</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.weyoung.annotation.Log)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> // 环绕通知</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"logPointCut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">aroundMethod</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"进入切点..."</span>);</span><br><span class="line">        StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">        stopWatch.start();</span><br><span class="line">        MethodSignature signature = (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        Method method = signature.getMethod();</span><br><span class="line">        <span class="comment">// 获取注解上的描述</span></span><br><span class="line">        Log log = method.getAnnotation(Log.class);</span><br><span class="line">        String description = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (log != <span class="keyword">null</span>) &#123;</span><br><span class="line">            description = log.value();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 类名</span></span><br><span class="line">        String className = joinPoint.getTarget().getClass().getName();</span><br><span class="line">        <span class="comment">// 方法名</span></span><br><span class="line">        String methodName = signature.getName();</span><br><span class="line">        <span class="comment">// 方法参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="comment">// 进入方法</span></span><br><span class="line">        logger.info(<span class="string">"进入方法..."</span>);</span><br><span class="line">        Object returnValue = joinPoint.proceed(args);</span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        logger.info(<span class="string">"执行之后..."</span>);</span><br><span class="line">        stopWatch.getTotalTimeMillis()</span><br><span class="line">        <span class="comment">// 方法执行之后</span></span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        <span class="keyword">if</span> (attributes != <span class="keyword">null</span>) &#123;</span><br><span class="line">            HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> returnValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、Spring装配该日志切面"><a href="#四、Spring装配该日志切面" class="headerlink" title="四、Spring装配该日志切面"></a>四、Spring装配该日志切面</h3><p><code>spring-mvc.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 启动AOP AspectJ注解自动代理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.weyoung.aspect.LogAspect"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 在spring-mvc中添加如上配置即可，不需要再添加其他扫描。配置的日志执行后如下：</p><p><img src="http://img.wanglixia.top/ssm配置切面-201933133640.png" alt="ssm配置切面-201933133640"></p><h2 id="使用AOP方式配置事务"><a href="#使用AOP方式配置事务" class="headerlink" title="使用AOP方式配置事务"></a>使用AOP方式配置事务</h2><p>使用xml方式管理AOP事务；</p><h3 id="一、添加依赖-1"><a href="#一、添加依赖-1" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h3><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置AOP事务"><a href="#二、配置AOP事务" class="headerlink" title="二、配置AOP事务"></a>二、配置AOP事务</h3><p><code>spring-config.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事务管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"MySQLDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务通知属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义事务传播属性，添加事务的方法名，因此service命名时需要遵循该原则 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"edit*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"new*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"set*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"remove*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"change*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"load*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"serviceOperation"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.weyoung.service.*.*Impl.*(..))"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"serviceOperation"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、测试事务配置"><a href="#三、测试事务配置" class="headerlink" title="三、测试事务配置"></a>三、测试事务配置</h3><ol><li>代码添加保存方法，确保该保存方法能够正常保存。</li><li>添加两条参数，确保一条可以成功一条不能成功，在一个符合事务配置格式的service方法中调用该方法；</li><li>查询数据库：无数据插入，后台报错；</li><li>添加两条参数，确保一条可以成功一条不能成功，注释掉事务配置切面，再调用方法进行测试；</li><li>查询数据库：有一条数据插入，后台报错；</li><li>结论：事务配置成功，可正常回滚。</li></ol><p>service中方法示例代码如下，具体内容可在文首查看源码或留言讨论：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map1 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map1.put(<span class="string">"userId"</span>, <span class="string">"007"</span>);</span><br><span class="line">    map1.put(<span class="string">"petname"</span>, <span class="string">"genius"</span>);</span><br><span class="line">    map1.put(<span class="string">"name"</span>, <span class="string">"weyoung"</span>);</span><br><span class="line">    map1.put(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">    map1.put(<span class="string">"birth"</span>, <span class="string">"2019-03-03"</span>);</span><br><span class="line">    map1.put(<span class="string">"icon"</span>, <span class="string">"icon"</span>);</span><br><span class="line">    map1.put(<span class="string">"phone"</span>, <span class="string">"phone"</span>);</span><br><span class="line">    map1.put(<span class="string">"email"</span>, <span class="string">"ne_lucifer@163.com"</span>);</span><br><span class="line">    map1.put(<span class="string">"address"</span>, <span class="string">""</span>);</span><br><span class="line">    map1.put(<span class="string">"level"</span>, <span class="number">0</span>);</span><br><span class="line">    map1.put(<span class="string">"signature"</span>, <span class="string">"signature"</span>);</span><br><span class="line">    map1.put(<span class="string">"brief"</span>, <span class="string">"brief"</span>);</span><br><span class="line">    loginDao.saveUserInfo(map1);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"userId"</span>, <span class="string">"001"</span>);</span><br><span class="line">    map.put(<span class="string">"petname"</span>, <span class="string">"weyoug"</span>);</span><br><span class="line">    map.put(<span class="string">"name"</span>, <span class="string">"lixia"</span>);</span><br><span class="line">    map.put(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">    map.put(<span class="string">"birth"</span>, <span class="string">"2019-03-03"</span>);</span><br><span class="line">    map.put(<span class="string">"icon"</span>, <span class="string">"icon"</span>);</span><br><span class="line">    map.put(<span class="string">"phone"</span>, <span class="string">"phone"</span>);</span><br><span class="line">    map.put(<span class="string">"email"</span>, <span class="string">"ne_lucifer@163.com"</span>);</span><br><span class="line">    map.put(<span class="string">"address"</span>, <span class="string">""</span>);</span><br><span class="line">    map.put(<span class="string">"level"</span>, <span class="number">0</span>);</span><br><span class="line">    map.put(<span class="string">"signature"</span>, <span class="string">"signature"</span>);</span><br><span class="line">    map.put(<span class="string">"brief"</span>, <span class="string">"brief"</span>);</span><br><span class="line">    loginDao.saveUserInfo(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日志切面和事务切面配置成功!</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> AOP，日志 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（三）视图解析器Tiles、FreeMarker配置</title>
      <link href="/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html"/>
      <url>/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;在MVC开发模式下，View离不开模板引擎，在Java中模板引擎使用最多的就是JSP、Velocity和FreeMarker。在配置框架的过程中，一般的系统中的前端页面中总是有一些通用的头部、底部或者菜单栏，最原始的方法当然是为每个HTML页面添加需要引入的css或者js等公用资源，但是这种方式似乎太难以维护。<br><a id="more"></a><br>使用JSP的话，尽管JSP存在的时间很长、也特别像HTML，但是由于夹杂了各种标签库，显得特别混乱，因此在传统的单机应用中，在了解了常用的几个前端模板引擎（视图解析器），如Freemarker、Thymeleaf、Velocity、Tiles等：</p><ul><li>Velocity：自面世以来就以语法简单著称，其写法非常接近Java语法，学习成本低，而且其简单的语法给开发人员带来了很大的自由度，能够自由发挥；</li><li>FreeMarker： 使用后缀为ftl（FreeMarker Template Language，FTL）和html 的模板，处理动态网页优势比较强，由于不能写Java代码，可以实现严格的MVC分离；</li><li>Thymeleaf： 该模板会改变普通HTML的写法，需要在HTML中添加一些属性，能够按照原始的方式进行编辑甚至渲染，而不必经过任何类型的处理器；</li><li>JSP： JSP不是真正的HTML，但是JSP规范和Servlet规范是紧密耦合的，这也限制了它只能用在基于Servlet的Web应用之中。</li><li>Tiles：Apache Tiles，定义适用于所有页面的通用页面布局。但是Tiles的模板是需要和jsp结合的，内容页和模板页是独立的页面，因此不会影响HTML内容页的写法。</li></ul><p>本文内容：使用Tiles、FreeMarker配置前端模板引擎。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="demo下载地址"><a href="#demo下载地址" class="headerlink" title="demo下载地址"></a>demo下载地址</h2><p>该项目持续更新中，会在代码以及该文档里面详细注释和介绍。<br>项目托管在<code>码云</code>开源平台上，持续更新项目源码链接：</p><p><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p><p>本文描述的项目版本为<code>v1.0.1</code>，版本源码链接：<br><a href="https://gitee.com/nelucifer/ssm-note/releases/v1.0.1" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note/releases/v1.0.1</a></p><p><strong>注意：如果项目代码内容有变化和本例不太一样的话，请查看项目标签，标签会具体说明，使用方式如下：</strong></p><p><img src="http://img.wanglixia.top/ssm在码云上的tags-201932162926.png" alt="ssm在码云上的tags-201932162926"></p><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>在一个项目中可以配置多个视图解析器，如Tiles、FreeMarker等可以同时配置，为了使得模板简洁和统一，本文仅介绍Tiles和FreeMarker的单独配置。</p><ul><li>一、XML方式配置Tiles；</li><li>二、配置FreeMarker模板引擎；</li><li>三、FreeMarker拆分和复用页面；</li></ul><h2 id="一、配置Tiles"><a href="#一、配置Tiles" class="headerlink" title="一、配置Tiles"></a>一、配置Tiles</h2><h3 id="0-pom-xml引入依赖"><a href="#0-pom-xml引入依赖" class="headerlink" title="0. pom.xml引入依赖"></a>0. <code>pom.xml</code>引入依赖</h3><p><code>pom.xml</code> 添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles.version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">tiles.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tiles --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-extras<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-jsp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-spring-mvc-xml"><a href="#1-spring-mvc-xml" class="headerlink" title="1. spring-mvc.xml"></a>1. <code>spring-mvc.xml</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring-mvc 视图解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesViewResolver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模板引擎Tiles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"definitions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tiles的模板组件组装配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/WEB-INF/views/*-tiles.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建Tiles模板组件"><a href="#2-创建Tiles模板组件" class="headerlink" title="2. 创建Tiles模板组件"></a>2. 创建Tiles模板组件</h3><p>分析下我们要展示的页面内容，具体布局如下图：<br>其中 header、nav-bar、menu、content（body）、footer可以提取出来，如下：</p><ul><li>header： 主要用来引入外部文件【header.jsp】；</li><li>nav-bar：主要用来添加导航栏【nav-bar.jsp】；</li><li>menu： 菜单模块【menu.jsp】；</li><li>content： 内容模块，是页面主体【动态添加的内容】；</li><li>footer： 底部声明等【footer.jsp】；</li></ul><p><img src="http://img.wanglixia.top/ssm内容Tiles分析-20193216310.png" alt="ssm内容Tiles分析-20193216310"></p><p>具体思路如下，首先在<code>pom.xml</code>添加Tiles的相关依赖，在<code>spring-mvc.xml</code>中添加视图解析器的配置，在<code>default-tiles.xml</code>中组装主模板和各个页面，即可。详细步骤如下：</p><h4 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="1. pom.xml"></a>1. <code>pom.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles.version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">tiles.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Apache Tiles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-extras<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-jsp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tiles<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tiles-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tiles.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-spring-mvc-xml"><a href="#2-spring-mvc-xml" class="headerlink" title="2. spring-mvc.xml"></a>2. <code>spring-mvc.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- tiles视图解释器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesView"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewResolvers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"beanNameViewResolver"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"tilesViewResolver"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 模板引擎Tiles配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"tilesConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.TilesConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"definitions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/WEB-INF/views/*-tiles.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"preparerFactoryClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-组装各页面组件"><a href="#3-组装各页面组件" class="headerlink" title="3. 组装各页面组件"></a>3. 组装各页面组件</h4><p><code>default-tiles.xml</code>内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE tiles-definitions PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://tiles.apache.org/dtds/tiles-config_3_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tiles-definitions</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义base Tile，主布局 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"base"</span> <span class="attr">template</span>=<span class="string">"/templates/base.jsp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"header"</span> <span class="attr">value</span>=<span class="string">"/templates/components/header.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"nav"</span> <span class="attr">value</span>=<span class="string">"/templates/components/nav-bar.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"menu"</span> <span class="attr">value</span>=<span class="string">"/templates/components/menu.jsp"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"footer"</span> <span class="attr">value</span>=<span class="string">"/templates/components/footer.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义base Tile --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"empty"</span> <span class="attr">template</span>=<span class="string">"/templates/empty.jsp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"header"</span> <span class="attr">value</span>=<span class="string">"/templates/components/header.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扩展base Tile --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"/home"</span> <span class="attr">extends</span>=<span class="string">"base"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"/front-end/welcome.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 登录页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">definition</span> <span class="attr">name</span>=<span class="string">"/login"</span> <span class="attr">extends</span>=<span class="string">"empty"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">put-attribute</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"/front-end/system/index.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">definition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tiles-definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-主页面-base-jsp"><a href="#4-主页面-base-jsp" class="headerlink" title="4. 主页面 base.jsp"></a>4. 主页面 <code>base.jsp</code></h4><p>以下为主页面模板配置，引入的其他页面和其他jsp页面一样，具体详见项目源码，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"tiles"</span> <span class="attr">uri</span>=<span class="string">"http://tiles.apache.org/tags-tiles"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Created</span> <span class="attr">by</span> <span class="attr">IntelliJ</span> <span class="attr">IDEA.</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Description:</span> 该模板就是包含所有的模板（有导航栏、菜单栏、内容、页脚）</span></span><br><span class="line"><span class="tag">  <span class="attr">User:</span> <span class="attr">Mr.wang</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Date:</span> <span class="attr">2017</span>/<span class="attr">6</span>/<span class="attr">21</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Time:</span> <span class="attr">22:18</span></span></span><br><span class="line"><span class="tag">  <span class="attr">To</span> <span class="attr">change</span> <span class="attr">this</span> <span class="attr">template</span> <span class="attr">use</span> <span class="attr">File</span> | <span class="attr">Settings</span> | <span class="attr">File</span> <span class="attr">Templates.</span></span></span><br><span class="line"><span class="tag"><span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"header"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        自定义样式...</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"scroll-bar hold-transition skin-blue sidebar-mini"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"main-header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"nav"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"main-sidebar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"menu"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"lucifer_content"</span> <span class="attr">class</span>=<span class="string">"content-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"content"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-fixed-bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"main-footer"</span> <span class="attr">style</span>=<span class="string">"margin-left: 260px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tiles:insertAttribute</span> <span class="attr">name</span>=<span class="string">"footer"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、配置FreeMarker模板引擎"><a href="#二、配置FreeMarker模板引擎" class="headerlink" title="二、配置FreeMarker模板引擎"></a>二、配置FreeMarker模板引擎</h2><h3 id="0-pom-xml引入依赖-1"><a href="#0-pom-xml引入依赖-1" class="headerlink" title="0. pom.xml引入依赖"></a>0. <code>pom.xml</code>引入依赖</h3><p><code>pom.xml</code> 添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.20<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;freemarker.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-spring-mvc-xml-1"><a href="#1-spring-mvc-xml-1" class="headerlink" title="1. spring-mvc.xml"></a>1. <code>spring-mvc.xml</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring-mvc 视图解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewResolvers"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"beanNameViewResolver"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 模板引擎中添加FreeMarker配置 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"freeMarkerViewResolver"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker 模板引擎 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freeMarkerViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.springframework.web.servlet.view.freemarker.FreeMarkerView<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 识别为FreeMarker页面的文件后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".html"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentType"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在FreeMarker页面中使用request对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeRequestAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSessionAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSpringMacroHelpers"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"requestContextAttribute"</span> <span class="attr">value</span>=<span class="string">"rc"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- FreeMarker 模板引擎配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPaths"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/front-end<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span><span class="comment">&lt;!-- 设置FreeMarker环境属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--刷新模板的周期，单位为秒 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"default_encoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--模板的编码格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 本地化设置，设置默认地区 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_exception_handler"</span>&gt;</span>rethrow<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>#.####<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 设置默认数字输出格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"boolean_format"</span>&gt;</span>true,false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 设置默认布尔值输出格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"whitespace_stripping"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"tag_syntax"</span>&gt;</span>auto_detect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"url_escaping_charset"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-web-xml"><a href="#2-web-xml" class="headerlink" title="2. web.xml"></a>2. <code>web.xml</code></h3><p><strong>注意：</strong> FreeMarker配置首页为html页面的话，需要进行特别的配置，需要修改<code>web.xml</code>中设置的登录页，否则直接配置<code>index.html</code>的话会导致页面中的FreeMarker配置无效，因此需修改<code>web.xml</code>和<code>MainController.java</code>，这块需要注意！</p><p><code>web.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 默认进入页面，一般为登录页 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>MainController.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> // 登录页，控制启动时跳转</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/3/2 23:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Param</span> [request, response]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-组装FreeMarker页面"><a href="#3-组装FreeMarker页面" class="headerlink" title="3. 组装FreeMarker页面"></a>3. 组装FreeMarker页面</h3><p>在SSM项目中配置FreeMarker模板引擎时，需要使用特定的指令来配置模板和组装页面组件，页面结构如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">|---[front-end]（前端页面）</span><br><span class="line">|---|---index.html（登录页）</span><br><span class="line">|---|---welcome.html（首页）</span><br><span class="line">|---[tempaltes]（模板文件）</span><br><span class="line">|---|---[components]（模板组件）</span><br><span class="line">|---|---|---footer.html（页脚组件）</span><br><span class="line">|---|---|---header.html（页首组件）</span><br><span class="line">|---|---|---menu.html（菜单组件）</span><br><span class="line">|---|---|---nav-bar.html（导航栏组件）</span><br><span class="line">|---|---empty.html（没有菜单的主模板，如登录页使用）</span><br><span class="line">|---|---main.html（包含菜单和页脚的主模板，如首页使用）</span><br></pre></td></tr></table></figure><p>具体配置方式如下：</p><p><code>empty.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#macro</span> <span class="attr">empty</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">header.html</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        自定义的样式</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 插入内容页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#nested</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>empty.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#macro</span> <span class="attr">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">header.html</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">       自定义的样式</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"scroll-bar hold-transition skin-blue sidebar-mini"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"main-header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">nav-bar.html</span>"&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"main-sidebar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">menu.html</span>"&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"lucifer_content"</span> <span class="attr">class</span>=<span class="string">"content-wrapper"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 在这里嵌入主题内容 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">#nested</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-fixed-bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"main-footer"</span> <span class="attr">style</span>=<span class="string">"margin-left: 260px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">#include</span> "<span class="attr">..</span>/<span class="attr">templates</span>/<span class="attr">components</span>/<span class="attr">footer.html</span>"&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> InitFrame = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> setTitle = <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            title &amp;&amp; $(<span class="built_in">document</span>).attr(<span class="string">"title"</span>, title)</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;<span class="attr">setTitle</span>: setTitle&#125;;</span></span><br><span class="line"><span class="undefined">    &#125;)()</span></span><br><span class="line"><span class="javascript">    InitFrame.setTitle(<span class="string">"SSM框架整合"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>index.html</code>和<code>welcome.html</code>页面引用模板方式主要如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入布局指令的命名空间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#import</span> "<span class="attr">templates</span>/<span class="attr">main.html</span>" <span class="attr">as</span> <span class="attr">main</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 调用布局指令 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">@main.layout</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 下面的这些内容会自动嵌入到layout指令的nested块中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM框架整合笔记<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>~~欢迎关注下方微信公众号，记录javaweb常见的问题和相关技术，欢迎交流学习~~<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@main.layout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此，FreeMarker配置完成，详细注释和配置参考项目开头源码下载地址。</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> ssm </tag>
            
            <tag> tiles </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用SoapUI 5.3.0调试webservice接口（参数格式XML）</title>
      <link href="/SoapUI%E8%B0%83%E8%AF%95webservice%E6%8E%A5%E5%8F%A3.html"/>
      <url>/SoapUI%E8%B0%83%E8%AF%95webservice%E6%8E%A5%E5%8F%A3.html</url>
      <content type="html"><![CDATA[<p>最近项目中经常要调试webservice接口，从朋友处了解到他们调试webservice接口时使用SoapUI，觉得十分好用，个人也对此十分感兴趣，因此简要记录一下这个工具的使用。</p><a id="more"></a><h2 id="使用SoapUI-5-3-0调试webservice接口（参数格式XML）"><a href="#使用SoapUI-5-3-0调试webservice接口（参数格式XML）" class="headerlink" title="使用SoapUI 5.3.0调试webservice接口（参数格式XML）"></a>使用SoapUI 5.3.0调试webservice接口（参数格式XML）</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>下载SoapUI，我使用的是5.3.0 <a href="https://www.soapui.org/downloads/latest-release.html" target="_blank" rel="noopener">https://www.soapui.org/downloads/latest-release.html</a></li><li>WebService 服务接口</li></ul><h3 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h3><ol><li>新建调试项目</li></ol><p><img src="http://img.wanglixia.top/soapUI-webservice-1-2019227224144.png" alt="soapUI-webservice-1-2019227224144"></p><ol start="2"><li>输入项目名称及要调试的接口有效地址，输入完毕点击OK<br>soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new request,输入名称后如下图会自动生成如下格式代码；其中 </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web:in0</span>&gt;</span>中填写入参<span class="tag">&lt;/<span class="name">web:in0</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--或--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg0</span>&gt;</span>中填写入参<span class="tag">&lt;/<span class="name">arg0</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置3-2019227224353.png" alt="ssm-note webservice配置3-2019227224353"></p><p><strong>注意：xml格式的入参最好使用 &lt;[CDATA[]]&gt; 包起来。点击左上角的绿色三角就可以调试接口了。</strong></p><ol start="3"><li><p>新建测试套件 New TestSuite</p></li><li><p>在项目名称上右击，选择 New TestSuite,输入名称保存</p></li></ol><p><img src="http://img.wanglixia.top/SoapUI_5-2019227224836.png" alt="SoapUI_5-2019227224836"></p><ol start="5"><li><p>在自己新建的TestSuite名称上右击，选择 New TestCase,输入名称保存</p></li><li><p>在Test Steps上右击 选择 Add Step –&gt;SOAP Request,输入名称并选择接口，名称最好容易识别一点</p></li></ol><p><img src="http://img.wanglixia.top/SoapUI_7-2019227225543.png" alt="SoapUI_7-2019227225543"></p><p>接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。</p><hr><p>欢迎关注微信公众号weyoung，记录学习笔记和一些有趣的东西，欢迎交流~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="wechat_qrcode-2019115195545"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">个人博客</td><td style="text-align:left"><a href="https://www.wanglixia.top/">https://www.wanglixia.top/</a></td></tr><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> soapUI </tag>
            
            <tag> webservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（二）Druid和Webservice配置</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html</url>
      <content type="html"><![CDATA[<h2 id="SSM框架整合笔记（二）Druid和Webservice配置"><a href="#SSM框架整合笔记（二）Druid和Webservice配置" class="headerlink" title="SSM框架整合笔记（二）Druid和Webservice配置"></a>SSM框架整合笔记（二）Druid和Webservice配置</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="WebService"><a href="#WebService" class="headerlink" title="WebService"></a>WebService</h3><p>&emsp;&emsp;Web Service 是自包含（self-contained）、使用开放协议进行通信的应用程序组件。功能：实现应用程序之间的通信；将应用程序转换为网络应用程序；使用XML来编解码数据，并使用SOAP来传输数据。<br>元素：</p><ul><li>使用SOAP（简单对象访问协议）：是用于交换XML编码信息的轻量级协议；</li><li>WSDL（Web Service 描述语言）：用于描述Web Service及函数、参数和返回值，因为是基于XML的，因此WSDL既是机器可阅读的，又是人可阅读的；</li><li>UDDI：目的是为电子商务建立标准，是一套基于Web的、分布式的、为Web Service提供的、信息注册中心的实现标准规范，同时也包含一组使企业能将自身提供的Web Service注册，以使别的企业能够发现的访问协议的实现标准。</li><li>XML是Web Service的基础；</li></ul><p>SOAP：是一种使应用程序有能力通过 HTTP 交换信息的基于 XML 的简易协议。<br>WSDL：是基于 XML 的用来描述 Web services 以及如何访问它们的一种语言，可描述 web service，连同用于 web service 的消息格式和协议的细节。</p><h3 id="Druid"><a href="#Druid" class="headerlink" title="Druid"></a>Druid</h3><p>&emsp;&emsp;Druid是Java中的数据库连接池。Druid能够提供强大的监控和扩展功能。</p><a id="more"></a><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><ul><li>ssm项目使用CXF配置webservice。</li><li>ssm项目中配置druid数据库连接池，SQL监控。</li></ul><h2 id="一、使用CXF配置webservice"><a href="#一、使用CXF配置webservice" class="headerlink" title="一、使用CXF配置webservice"></a>一、使用CXF配置webservice</h2><h3 id="0-pom-xml"><a href="#0-pom-xml" class="headerlink" title="0. pom.xml"></a>0. pom.xml</h3><p><code>pom.xml</code>中添加依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cxf.version</span>&gt;</span>3.1.6<span class="tag">&lt;/<span class="name">cxf.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- cxf webservice --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-web-xml"><a href="#1-web-xml" class="headerlink" title="1. web.xml"></a>1. web.xml</h3><p><code>web.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--============Webservice配置start============--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在Web.xml中配置CXF监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.cxf.transport.servlet.CXFServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注意：&lt;servlet-mapping&gt;下的&lt;url-pattern&gt;指明了服务访问地址的形式,"/*"代表URL地址中，包名称后直接跟服务endpoint地址，</span></span><br><span class="line"><span class="comment">若指明&lt;url-pattern&gt;为/webservice/*,则URL地址为“包名webservice/endpoint?wsdl” --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CXFServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/webservice/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--============Webservice配置end============--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-spring-config-xml"><a href="#2-spring-config-xml" class="headerlink" title="2. spring-config.xml"></a>2. spring-config.xml</h3><p><code>spring-config.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用CXF方式配置webservice接口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;import resource="classpath:META-INF/cxf/cxf-servlet.xml"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动扫描webService --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.webservice"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义webservice的发布接口  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">implementor</span>=<span class="string">"#thirdService"</span> <span class="attr">address</span>=<span class="string">"/testService"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ThirdWebservice-java"><a href="#3-ThirdWebservice-java" class="headerlink" title="3. ThirdWebservice.java"></a>3. ThirdWebservice.java</h3><p>添加interface：<code>ThirdWebservice.java</code>，示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.webservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ThirdWebservice</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 对外发布webservice接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/26 0:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ThirdWebservice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取第三方请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> intoData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">getThirdPartyRequest</span><span class="params">(String code, String loginData, String intoData)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-ThirdWebserviceImpl-java"><a href="#4-ThirdWebserviceImpl-java" class="headerlink" title="4. ThirdWebserviceImpl.java"></a>4. ThirdWebserviceImpl.java</h3><p>添加java类：<code>ThirdWebserviceImpl.java</code>，示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.weyoung.webservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ThirdWebserviceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 对外发布webservice接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/2/26 0:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"thirdService"</span>)</span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThirdWebserviceImpl</span> <span class="keyword">implements</span> <span class="title">ThirdWebservice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getThirdPartyRequest</span><span class="params">(String code, String loginData, String intoData)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String result;</span><br><span class="line">        <span class="keyword">switch</span> (code) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"WS0001"</span>:</span><br><span class="line">                result = <span class="string">"WS0001"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"WS0002"</span>:</span><br><span class="line">                result = <span class="string">"WS0001"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                result = <span class="string">"OTHER"</span> + loginData + intoData;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h2><p>访问地址：<a href="http://localhost:8080/ssm-note/webservice/" target="_blank" rel="noopener">http://localhost:8080/ssm-note/webservice/</a> ，原访问项目后加”webservice/“，访问结果如下：<br><img src="http://img.wanglixia.top/ssm-note%20webservice配置-201922722921.png" alt="ssm-note webservice配置-201922722921"><br>点击蓝色链接后如下：<br><img src="http://img.wanglixia.top/ssm-note%20webservice配置1-2019227221015.png" alt="ssm-note webservice配置1-2019227221015"><br>使用soapUI测试webservice接口：</p><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置2-2019227222629.png" alt="ssm-note webservice配置2-2019227222629"></p><p>双击<code>Request 1</code>，填入参数，点击运行按钮，结果如下，调用成功：</p><p><img src="http://img.wanglixia.top/ssm-note%20webservice配置3-201922722283.png" alt="ssm-note webservice配置3-201922722283"></p><h2 id="二、配置druid数据库连接池，SQL监控"><a href="#二、配置druid数据库连接池，SQL监控" class="headerlink" title="二、配置druid数据库连接池，SQL监控"></a>二、配置druid数据库连接池，SQL监控</h2><h3 id="0-pom-xml-1"><a href="#0-pom-xml-1" class="headerlink" title="0. pom.xml"></a>0. pom.xml</h3><p><code>pom.xml</code>中添加依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;properties&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.0.25<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.14<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;/properties&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid==&gt;阿里巴巴数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-web-xml-1"><a href="#1-web-xml-1" class="headerlink" title="1. web.xml"></a>1. web.xml</h3><p><code>web.xml</code>中添加配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ============阿里巴巴数据库连接池start============ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.alibaba.druid.support.http.WebStatFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>exclusions<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.alibaba.druid.support.http.StatViewServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/druid/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ============阿里巴巴数据库连接池end============ --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-spring-config-xml-1"><a href="#2-spring-config-xml-1" class="headerlink" title="2. spring-config.xml"></a>2. spring-config.xml</h3><p><code>spring-config.xml</code>中添加配置，示例代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MySQL数据源配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"MySQLDataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.initialSize&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minIdle&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxActive&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxWait&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testWhileIdle&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这里建议配置为TRUE，防止取到的连接不可用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolPreparedStatementPerConnectionSize"</span> <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置提交方式，默认就是true，可以不用配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultAutoCommit"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.defaultAutoCommit&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 验证连接有效与否的SQL，不同的数据配置不同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name="validationQuery" value="select 1 " /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"stat"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyFilters"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logFilter"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logFilter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Log4jFilter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试Druid"><a href="#测试Druid" class="headerlink" title="测试Druid"></a>测试Druid</h2><p>访问地址：<a href="http://localhost:8080/ssm-note/druid/" target="_blank" rel="noopener">http://localhost:8080/ssm-note/druid/</a></p><p>访问后如下：</p><p><img src="http://img.wanglixia.top/ssm-note%20druid配置-201922723157.png" alt="ssm-note druid配置-201922723157"></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> webservice </tag>
            
            <tag> mybatis </tag>
            
            <tag> springmvc </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring系列学习之IoC与AOP</title>
      <link href="/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html"/>
      <url>/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>spring框架的释义：</p><blockquote><p>Spring框架是由于软件开发的复杂性而创建的。Spring使用的是基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅仅限于服务器端的开发。从简单性、可测试性和松耦合性角度而言，绝大部分Java应用都可以从Spring中受益。<br><a id="more"></a></p></blockquote><p>为什么Spring用来完成EJB完成的事情，那么这个EJB是什么玩意？概念：</p><blockquote><p>EJB：Enterprise JavaBean，对于商务软件来说，其核心部分就是她的业务逻辑，业务逻辑抽象了整个商务过程的流程，并使用计算机语言将他们实现。<br>……<br>J2EE对于这个问题的处理方法是将业务逻辑从客户端软件中抽取出来，封装在一个组件中。这个组件运行在一个独立的服务器上，客户端软件通过网络调用组件提供的服务来实现业务逻辑，而客户端软件的仅仅负责发送调用请求和显示处理结果。在J2EE中，这个运行在一个独立的服务器上，并封装了业务逻辑的组件就是EJB组件。</p></blockquote><p>从上面的概念中，可以理解为EJB概念说的就是C/S软件，简单来说EJB 就是将那些”类”放到一个服务器上，用C/S 形式的软件客户端对服务器上的”类”进行调用。<br>感兴趣的可以看下这篇文章<a href="https://blog.csdn.net/jojo52013145/article/details/5783677" target="_blank" rel="noopener">https://blog.csdn.net/jojo52013145/article/details/5783677</a></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Spirng中的两个核心概念：依赖注入DI（dependency injection）和面向切面编程AOP（aspect-oriented programming）。 </p><blockquote><p>为了降低Java开发的复杂性，Spring采取了以下四种关键策略：</p><ul><li>基于POJO（Plain Old Java Object）的轻量级和最小侵入性编程；</li><li>通过依赖注入和面向接口实现松耦合；</li><li>基于切面和管理进行声明式编程；</li><li>通过切面和模板减少样板式代码。</li></ul></blockquote><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p>传统的做法，每个对象负责管理它所依赖的对象的引用，这将会导致高度耦合和难以测试的代码。比如说，对象A要使用对象B，则在对象A中来控制对象B，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> B b;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.b = <span class="keyword">new</span> B();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b.sayHello(userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello "</span>+ userName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>耦合具有两面性，一方面，紧密耦合的代码难以测试、难以复用、难以理解；另一方面，一定程度的耦合又是必须的——完全没有耦合的代码什么也做不了。总之，耦合是必须的，但是应当被合理地管理。</p><p>创建应用组件之间协作的行为通常称为装配。Spring有多种装配bean的方式，采用XMl、使用Java进行配置。</p><p>通过DI，对象的依赖关系将由系统中负责协调各对象的第三方组件在创建对象的时候进行设定。<br>依赖注入的方式：</p><ol><li>构造器注入；</li><li>setter注入；</li><li>基于注解注入；</li></ol><h3 id="一、构造器注入"><a href="#一、构造器注入" class="headerlink" title="一、构造器注入"></a>一、构造器注入</h3><p>如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构造器注入</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> B b;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">(B b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.b = b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b.sayHello(userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>xml方式<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注册A --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">class</span>=<span class="string">"com.lucifer.spring.di.A"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注册B --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"com.lucifer.spring.di.B"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="二、setter注入"><a href="#二、setter注入" class="headerlink" title="二、setter注入"></a>二、setter注入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注册A --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">class</span>=<span class="string">"com.lucifer.spring.di.A"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意：这两种写法都可以，Spring将name值得每个单词的首字母转换为大写，再在前面拼上set构成set方法名，然后去对应的类中查找这个方法，通过反射调用实现注入，仅按照此种规则匹配，即对应的成员变量命名不做约束。也就是说 UserName 和 userName 都能匹配上 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 写法一 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property name="UserName" ref="b"&gt;&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 写法二 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">ref</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注册B --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"com.lucifer.spring.di.B"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">implements</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String userName123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello "</span>+ userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName123 = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、基于注解的注入"><a href="#三、基于注解的注入" class="headerlink" title="三、基于注解的注入"></a>三、基于注解的注入</h3><p>bean的属性autowire，autowire主要有三个属性值：constructor，byName，byType。</p><ul><li>constructor：通过构造方法进行自动注入，spring会匹配与构造方法参数类型一致的bean进行注入，如果有一个多参数的构造方法，一个只有一个参数的构造方法，在容器中查找到多个匹配多参数构造方法的bean，那么spring会优先将bean注入到多参数的构造方法中。</li><li>byName：被注入bean的id名必须与set方法后半截匹配，并且id名称的第一个单词的首字母必须小写，这个和手动set注入有点不同。</li><li>byType：查找所有的set方法，将符合参数类型的bean注入。</li></ul><p>注册bean的注解有以下几种：</p><ol><li>@Component：用于注册所有的bean；</li><li>@Repository：用于注册dao层的bean；</li><li>@Controller：用于注册控制层的bean；</li><li>@Service：用于注册服务层的bean；</li></ol><p>常见的问题，@Resource和@Autowired之间的区别是什么？<br>描述依赖关系的主要有两种：</p><ul><li>@Resource：java的注解，默认以byName的方式去匹配与属性名相同的bean的id，如果没有再以byType的方式查找，如果byType查找到多个的话，使用@Qualifier注解（Spring注解）指定某个具体名称的bean；</li><li>@Autowired：spring注解，默认是以byType的方式去匹配类型相同的bean，如果匹配到一个，那么就直接注入该bean，无论要注入的bean的那么是什么；如果匹配到多个，就会调用DefaultListableBeanFactory的determineAutowireCandidate方法来决定具体注入哪个bean。</li></ul><p>determineAutowireCandidate方法的逻辑是：</p><ol><li>先找Bean上有@Primary注解的，有则直接返回bean的name；</li><li>再找Bean上有@Order，@PriorityOrder注解的，有则返回bean的name；</li><li>最后再以名称匹配（ByName）的方式去查找相匹配的bean。</li><li>没有找到的话就抛出异常。</li></ol><p>还有一点要注意：如果使用了 @Qualifier 注解，那么当自动装配匹配到多个 bean 的时候就不会进入 determineAutowireCandidate 方法，而是直接查找与 @Qualifer 指定的 bean name 相同的 bean 去注入，找到了就直接注入，没有找到则抛出异常。</p><p><strong>注意</strong><br>如果通过set方法注入属性，那么Spring会通过默认的无参构造方法来实例化对象，所以如果在类中重写带有参数的构造方法，一定要把无参构造方法也写上，否则spring没有办法实例化对象，导致报错。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="1-依赖注入（DI）和控制反转（IoC）"><a href="#1-依赖注入（DI）和控制反转（IoC）" class="headerlink" title="1.依赖注入（DI）和控制反转（IoC）"></a>1.依赖注入（DI）和控制反转（IoC）</h4><ul><li><p><strong>谁控制谁，控制什么：</strong> 传统Java SE程序设计，我们直接在对象内部通过new进行创建对象，是程序主动去创建依赖对象；而IoC是有专门一个容器来创建这些对象，即由Ioc容器来控制对象的创建；谁控制谁？当然是IoC 容器控制了对象；控制什么？那就是主要控制了外部资源获取（不只是对象包括比如文件等）。</p></li><li><p><strong>为何是反转，哪些方面反转了：</strong> IoC：Inversion of Control，即“控制反转”，不是什么技术，而是一种设计思想，传统应用程序是由我们自己在对象中主动去直接获取依赖对象，也就是正转；而反转则是由容器来帮忙创建及注入依赖对象，为何是反转？因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是反转；哪些方面反转了？依赖对象的获取被反转了。</p></li></ul><p>理解DI的关键是：“谁依赖谁，为什么需要依赖，谁注入谁，注入了什么”</p><ul><li><strong>谁依赖谁：</strong> 应用程序依赖于IoC容器；</li><li><strong>为什么需要依赖：</strong> 应用程序需要IoC容器来提供对象需要的外部资源；</li><li><strong>谁注入谁：</strong> 很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象；</li><li><strong>注入了什么：</strong> 就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。</li></ul><p>其实IoC和DI是同一个概念的不同角度描述，由于控制反转概念比较模糊（可能只是理解为容易控制对象这一个层面，很难让人想到谁来维护对象关系），所以2004年大师级人物Martin Fowler又给出了一个新的名字：“依赖注入”，相对IoC 而言，“依赖注入”明确描述了“被注入对象依赖IoC容器配置依赖对象”。<br>我认为可以这么理解：使用依赖注入来实现了控制反转。</p><h2 id="面向切面编程"><a href="#面向切面编程" class="headerlink" title="面向切面编程"></a>面向切面编程</h2><p>DI能够让相互协作的软件组件保持松散耦合，而面向切面编程（aspect-oriented programming）允许把遍布在应用各处的功能分离出来形成可重用的组件。定义切点的表达式的语法采用的是AspectJ的切点表达式语言。</p><h3 id="一、AOP的相关概念"><a href="#一、AOP的相关概念" class="headerlink" title="一、AOP的相关概念"></a>一、AOP的相关概念</h3><ol><li>Aspect（切面）：通知和切点共同定义了切面的全部内容；</li><li>Joint Point（连接点）：程序执行过程中明确的点，是在应用执行过程中能够插入切面的一个点，切面代码利用这些点插入到应用的正常流程之中并添加新的行为；</li><li>Advice（通知）：AOP在特定的切入点上执行的增强处理，五个通知类型：<ol><li>前置通知（Before）：在目标方法被调用之前调用通知功能，@Before只需要指定切入点表达式即可；</li><li>后置通知（After）：在目标方法完成之后调用通知，此时不关心方法的输出是什么。不论拦截的方法是否有异常。在目标方法完成之后做增强，无论目标方法什么时候成功完成。@After可以指定一个切入点表达式；</li><li>环绕通知（Around）：需要放行操作。通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。环绕通知是最重要的通知类型，像事务、日志等都是环绕通知；</li><li>返回通知（After-returning）：在目标方法成功执行之后调用通知，@AfterReturning除了指定切入点表达式后，还可以指定一个返回值形参名returning，代表目标方法的返回值；</li><li>异常通知（After-throwing）：主要用来处理程序中未处理的异常，在目标抛出异常后调用通知，@AfterThrowing除了指定切入点表达式后，还可以指定一个throwing的返回值形参名，可以通过该形参名来访问目标方法中所抛出的异常对象；</li></ol></li><li>Pointcut（切入点）：带有通知的连接点，在程序中主要体现为书写切入点表达式。如果说通知定义了切面的“什么”和“何时”的话，那么切点就定义了“何处”；</li><li>AOP代理：AOP框架创建的对象，代理就是目标对象的增强。Spring中的AOP代理可以使JDK动态代理，也可以是CGLIB代理，前者基于接口，后者基于子类；</li><li>织入（Weaving）：实现AOP代理所声明的功能，即把切面应用到目标对象并创建新的代理对象的过程。在目标对象的生命周期中，可以在编译期、类加载期、运行期进行织入；</li><li>关注点：切面的具体功能方法被称为关注点。</li></ol><table><thead><tr><th style="text-align:left">注解</th><th style="text-align:left">通知</th></tr></thead><tbody><tr><td style="text-align:left">@After</td><td style="text-align:left">通知方法会在目标方法返回或抛出异常后调用</td></tr><tr><td style="text-align:left">@AfterReturning</td><td style="text-align:left">通知方法会在目标方法返回后调用</td></tr><tr><td style="text-align:left">@AfterThrowing</td><td style="text-align:left">通知方法会在目标方法抛出异常后调用</td></tr><tr><td style="text-align:left">@Around</td><td style="text-align:left">通知方法会将目标方法封装起来</td></tr><tr><td style="text-align:left">@Before</td><td style="text-align:left">通知方法会在目标方法调用之前执行</td></tr></tbody></table><p>Spring提供了4种类型的AOP支持：</p><ul><li>基于代理的经典Spring AOP；</li><li>纯POJO切面；</li><li>@AspectJ注解驱动的切面；</li><li>注入式AspectJ切面（适用于Spring各版本）；</li></ul><p>前面三种都是Spring AOP实现的变体，Spring AOP构建在动态代理基础之上，因此，Spring对AOP的支持局限于方法拦截；也正是因为Spring基于动态代理，所以Spring只支持方法连接点。</p><p>AOP主要的作用是：日志记录，性能统计，安全控制，事务处理，异常处理，权限登录等等。AOP代理由Spring的IoC容器负责生成、管理，其依赖关系也由IoC容器负责管理。</p><h3 id="二、Spring借助AspectJ的切点表达式语言来定义Spring切面"><a href="#二、Spring借助AspectJ的切点表达式语言来定义Spring切面" class="headerlink" title="二、Spring借助AspectJ的切点表达式语言来定义Spring切面"></a>二、Spring借助AspectJ的切点表达式语言来定义Spring切面</h3><p>Spring AOP所支持的AspectJ切点指示器<br>|AspectJ指示器|描述|<br>|:–|:–|<br>|arg()|限制连接点匹配参数为指定类型的执行方法|<br>|@args()|限制连接点匹配参数由指定注解标注的执行方法|<br>|execution()|用于匹配是连接点的执行方法|<br>|this()|限制连接点匹配AOP代理的bean引用为指定类型的类|<br>|target|限制连接点匹配目标对象为指定类型的类|<br>|@target()|限制连接点匹配特定的执行对象，这些对象对应的类要具有指定类型的注解|<br>|within()|限制连接点匹配指定的类型|<br>|@within()|限制连接点匹配指定注解所标注的类型（当使用Spring AOP时，方法定义在由指定的注解所标注的类里）|<br>|@annotation|限定匹配带有指定注解的连接点|</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">execution(* concert.Performance.perform(..))</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">*：返回任意类型；</span></span><br><span class="line"><span class="comment">concert.Performance：方法所属的类；</span></span><br><span class="line"><span class="comment">perform：方法；</span></span><br><span class="line"><span class="comment">..：使用任意参数；</span></span><br><span class="line"><span class="comment">execution：在方法执行时触发；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul><li><p>Spring常用的三种注入方式:<a href="https://blog.csdn.net/a909301740/article/details/78379720" target="_blank" rel="noopener">https://blog.csdn.net/a909301740/article/details/78379720</a></p></li><li><p>IoC基础——跟我学Spring3<a href="https://jinnianshilongnian.iteye.com/blog/1413846" target="_blank" rel="noopener">https://jinnianshilongnian.iteye.com/blog/1413846</a></p></li><li><p>Spring 实战（第四版） [美]Craig Walls 著 张卫滨 译</p></li></ul><hr><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><div align="center"><br><br><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"><br></div><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合笔记（一）——详细注释</title>
      <link href="/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html"/>
      <url>/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;接触SSM框架到现在也有很长时间了，之前也搭建过几个简单的项目，但是没有进行过记录学习和搭建的过程。网上关于ssm框架整合的资料也不少，不过说句实话，单看某一篇文章能够不踩坑的配置并跑起来的也不太多，在学习过程中筛选甄别这些就浪费了相当一部分时间。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B0.html#more">SSM框架整合笔记（一）详细注释</a></p></li><li><p><a href="https://www.wanglixia.top/ssm%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B01.html#more">SSM框架整合笔记（二）配置Druid和Webservice</a></p></li><li><p><a href="https://www.wanglixia.top/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B02.html#more">SSM框架整合笔记（三）配置Tiles、FreeMarker</a></p></li><li><p><a href="https://www.wanglixia.top/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1.html#more">Spring系列学习之IoC与AOP</a></p></li></ul><h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><p>&emsp;&emsp;本文理论+实践的方式，分享ssm的相关概念以及采用实践操作的方式搭建整套系统。把搭建过程中踩过的坑、笔记记录整理一下，用以和感兴趣的朋友分享下。</p><h2 id="demo下载地址"><a href="#demo下载地址" class="headerlink" title="demo下载地址"></a>demo下载地址</h2><p>该项目持续更新中，会在代码以及该文档里面详细注释和介绍。<br>项目托管在<code>码云</code>开源平台上，链接：<br><a id="more"></a><br><a href="https://gitee.com/nelucifer/ssm-note" target="_blank" rel="noopener">https://gitee.com/nelucifer/ssm-note</a>，点击<code>克隆/下载</code>获取该项目。</p><h2 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h2><ul><li>Maven</li><li>IDEA</li><li>Tomcat</li></ul><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Spring：4.2.5.RELEASE</li><li>Spring MVC</li><li>Mybatis：3.3.1</li><li>MySQL：5.6</li><li>IntelliJ IDEA： 2018.2.3</li><li>cxf webservice： webservice接口</li><li>pagehelper： 分页</li><li>Interceptor：拦截器配置</li><li>数据结构：powerdesigner16.5</li></ul><h2 id="实践步骤"><a href="#实践步骤" class="headerlink" title="实践步骤"></a>实践步骤</h2><h3 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h3><ol><li><p>打开IDEA，选择New-&gt;Projects，按照下面的步骤选择：<br>选择Maven，然后勾选Create from archetype，选择webapp这一个<br><img src="http://img.wanglixia.top/idea创建项目-2019220215556.png" alt="idea创建项目-2019220215556"></p></li><li><p>完成之后填入相应的maven项目组信息，GroupId是项目组织的标识符，对应java的包结构；ArtifactId是项目的标识符，对应项目的名称，即项目根目录的名称。groupId和artifactId统称为“坐标”。<br><img src="http://img.wanglixia.top/idea创建项目1-201922022652.png" alt="idea创建项目1-201922022652"></p></li><li><p>填写完成之后点击Next，选择setting.xml和repository路径，如下图：<br><img src="http://img.wanglixia.top/idea创建项目2-201922022821.png" alt="idea创建项目2-201922022821"></p></li><li><p>点击Finish后，maven会根据原型自动创建需要的一些配置信息以及目录结构，等待配置完成，初始项目结构如下：<br><img src="http://img.wanglixia.top/idea创建项目3-2019220221329.png" alt="idea创建项目3-2019220221329"></p></li><li><p>在main文件夹下创建文件夹java、resources，src文件夹下创建test，test文件夹下创建java文件夹；<br>在java文件夹上右键 -&gt; <code>Mark Directory as</code>，java文件夹选择<code>Sources Root</code>，resources文件夹上选择<code>Resources Root</code>，test文件夹下的java文件夹上选择<code>Test Resources Root</code>，<br>操作如下：<br><img src="http://img.wanglixia.top/idea创建项目4-201922104817.png" alt="idea创建项目4-201922104817"><br>完成后的项目结构如下：<br><img src="http://img.wanglixia.top/idea创建完成后的项目结构-201922105549.png" alt="idea创建完成后的项目结构-201922105549"></p></li></ol><h3 id="二、配置pom-xml和spring"><a href="#二、配置pom-xml和spring" class="headerlink" title="二、配置pom.xml和spring"></a>二、配置pom.xml和spring</h3><p>详细的解释直接在代码里面注释了。开始贴代码：</p><h4 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="1. pom.xml"></a>1. <code>pom.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--maven模块版本：声明项目描述符遵循哪一个POM模型版本，默认是4.0.0--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--项目组织的唯一标识符--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.weyoung<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--项目的唯一标识符，和groupId共同唯一标识该项目或组件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssm-note<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--打包方式，可以选择war和jar--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--项目的名称，Maven产生的文档用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>ssm-note Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--项目主页的URL，Maven产生的文档用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--项目的详细描述，Maven产生的文档用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>maven+ssm项目整合笔记<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目的问题管理系统--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">issueManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system</span>&gt;</span>jira<span class="tag">&lt;/<span class="name">system</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--该项目使用的问题管理系统的URL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">issueManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目开发者列表--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--某个项目开发者的信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者id--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>coder_lixia<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者的全名--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>lixia<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">email</span>&gt;</span>ne_lucifer@163.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者主页URL--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.wanglixia.top/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者项目中的角色--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">roles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">role</span>&gt;</span>Project Manager<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">roles</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者所属组织--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">organization</span>&gt;</span><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--项目开发者所属组织的URL--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">organizationUrl</span>&gt;</span><span class="tag">&lt;/<span class="name">organizationUrl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里</span></span><br><span class="line"><span class="comment">           activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin.maven-compiler</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">plugin.maven-compiler</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javac.target.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">javac.target.version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此处spring.version即为下面$&#123;spring.version的值&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-logging.version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">commons-logging.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>5.1.26<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.14<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slf4j.log4j12.version</span>&gt;</span>1.7.12<span class="tag">&lt;/<span class="name">slf4j.log4j12.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-api.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">servlet-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.0.25<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cxf.version</span>&gt;</span>3.1.6<span class="tag">&lt;/<span class="name">cxf.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.32<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.1.2<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.7.4<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 发现依赖和扩展的远程仓库列表 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 包含需要连接到远程仓库的信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 远程仓库id，可以用来匹配在settings.xml文件里配置的远程仓库 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 远程仓库名称 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 远程仓库URL --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 处理远程仓库里发布版本的下载 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- true或false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 更新构件的频率。Maven会比较本地POM和远程POM的时间戳。选项：always（一直），daily（默认每日），inteval：X（X是以分钟为单位），never（从不）--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>never<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当Maven验证构件校验文件失败时怎么做：ignore（忽略），fail（失败），warn（警告） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>never<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 用于定位和排序构件的仓库布局类型-可以使default（默认）或者legacy（遗留） --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories/repository元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目相关的所有依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 依赖的groupID --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 依赖的artifactID--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 依赖的版本号 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 依赖类型，默认类型是jar，类型一般和使用的打包方式对应，如jar，war等，也有例外，如test-jar等 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 依赖范围。</span></span><br><span class="line"><span class="comment">           - compile：默认范围，用于编译</span></span><br><span class="line"><span class="comment">           - provided：类似于编译</span></span><br><span class="line"><span class="comment">           - runtime：在运行时使用</span></span><br><span class="line"><span class="comment">           - test：用于test时使用</span></span><br><span class="line"><span class="comment">           - system： 需要外在提供相应的元素。通过systemPath来取得 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- systemPath：仅用于范围为system。提供相应的路径，不鼓励使用该元素 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;systemPath&gt;&lt;/systemPath&gt;--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 可选依赖，当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 当计算传递依赖时，从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的</span></span><br><span class="line"><span class="comment">        依赖。此元素主要用于解决版本冲突问题 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;exclusions&gt;</span></span><br><span class="line"><span class="comment">        &lt;exclusion&gt;</span></span><br><span class="line"><span class="comment">          &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">          &lt;artifactId&gt;spring-core&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">        &lt;/exclusion&gt;</span></span><br><span class="line"><span class="comment">      &lt;/exclusions&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1)Spring核心 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2)Spring DAO层 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3)Spring web --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4)Spring test --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-logging.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mybatis包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis spring插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mysql连接驱动包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid==&gt;阿里巴巴数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.log4j12.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jstl.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 文件上传 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 解析json--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  分页助手 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- cxf webservice --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cxf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 构建项目需要的信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>ssm-note<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 子项目可以引用的默认插件信息。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 插件列表 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-spring-config-xml"><a href="#2-spring-config-xml" class="headerlink" title="2. spring-config.xml"></a>2. <code>spring-config.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- base-package属性指定了需要扫描的类包，类包及其递归子包中所有的类都会被处理</span></span><br><span class="line"><span class="comment">         如果某个类的头上带有特定的注解【@Component/@Repository/@Service/@Controller】，</span></span><br><span class="line"><span class="comment"> 就会将这个对象作为Bean注册进Spring容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.service"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.dao"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置mybatis的sqlSessionFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"MySQLDataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 自动扫描的mybatis mapper.xml文件路径 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:/mappers/*.xml"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mybatis配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:config/mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 事务管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"MySQLDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描的dao接口所在的包名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.weyoung.dao"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入数据库配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceConfig"</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"location"</span> <span class="attr">value</span>=<span class="string">"classpath:config/jdbc.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务通知属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义事务传播属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"edit*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"new*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"set*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"remove*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"change*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"load*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"serviceOperation"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.weyoung.service.*.*Impl.*(..))"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"serviceOperation"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- MySQL数据源配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"MySQLDataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.initialSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minIdle&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxActive&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxWait&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testWhileIdle&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 这里建议配置为TRUE，防止取到的连接不可用 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolPreparedStatementPerConnectionSize"</span> <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置提交方式，默认就是true，可以不用配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultAutoCommit"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.defaultAutoCommit&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 验证连接有效与否的SQL，不同的数据配置不同 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name="validationQuery" value="select 1 " /&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"stat"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyFilters"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logFilter"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logFilter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Slf4jLogFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-spring-mvc-xml"><a href="#3-spring-mvc-xml" class="headerlink" title="3. spring-mvc.xml"></a>3. <code>spring-mvc.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描该包，使SpringMVC认为包下(包括子集)用了@controller注解的类是控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.weyoung.controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 默认的注解映射的支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"stringHttpMessageConverter"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 解决js,main.webapp.layouts.css,images访问不到的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/plugins/**"</span> <span class="attr">location</span>=<span class="string">"/plugins/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/layouts/**"</span> <span class="attr">location</span>=<span class="string">"/layouts/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/statics/**"</span> <span class="attr">location</span>=<span class="string">"/statics/"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--拦截器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.weyoung.system.LoginInterceptor"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 文件上传配置注意:这里申明的id必须为multipartResolver --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--文件编码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--文件大小最大值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"10485760000"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--内存中的最大值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxInMemorySize"</span> <span class="attr">value</span>=<span class="string">"40960"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--简单的上传异常处理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exceptionResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exceptionMappings"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"org.springframework.web.multipart.MaxUploadSizeExceededException"</span>&gt;</span>/error/upload_error.jsp</span><br><span class="line">                <span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--根据 controller 返回的字符串 找到viewResolver --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"beanNameViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.BeanNameViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HandlerMapping --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HandlerAdapter --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"contentNegotiationManager"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.accept.ContentNegotiationManagerFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"favorParameter"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"parameterName"</span> <span class="attr">value</span>=<span class="string">"format"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"ignoreAcceptHeader"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mediaTypes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                json=application/json</span><br><span class="line">                xml=application/xml</span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultContentType"</span> <span class="attr">value</span>=<span class="string">"text/html"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- SpringMVC消息处理——消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"stringHttpMessageConverter"</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span> <span class="attr">index</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/plain;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring-mvc 视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/front-end/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.ContentNegotiatingViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentNegotiationManager"</span> <span class="attr">ref</span>=<span class="string">"contentNegotiationManager"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultViews"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.json.MappingJackson2JsonView"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-jdbc-properties"><a href="#4-jdbc-properties" class="headerlink" title="4. jdbc.properties"></a>4. <code>jdbc.properties</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#============================================================================</span><br><span class="line"># MySQL</span><br><span class="line">#============================================================================</span><br><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql://localhost:3306/SSM_NOTE?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=lucifer</span><br><span class="line"></span><br><span class="line">#============================================================================</span><br><span class="line"># common settings</span><br><span class="line">#============================================================================</span><br><span class="line">jdbc.initialSize=5</span><br><span class="line">jdbc.minIdle=5</span><br><span class="line">jdbc.maxActive=100</span><br><span class="line">jdbc.maxWait=100000</span><br><span class="line">jdbc.defaultAutoCommit=false</span><br><span class="line">jdbc.removeAbandoned=true</span><br><span class="line">jdbc.removeAbandonedTimeout=600</span><br><span class="line">jdbc.testWhileIdle=true</span><br><span class="line">jdbc.timeBetweenEvictionRunsMillis=60000</span><br><span class="line">jdbc.minEvictableIdleTimeMillis=300000</span><br></pre></td></tr></table></figure><h4 id="5-log4j-properties"><a href="#5-log4j-properties" class="headerlink" title="5. log4j.properties"></a>5. <code>log4j.properties</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># 定义输出风格</span><br><span class="line">ConversionPattern=%d %-5p [%t] %c - %m%n</span><br><span class="line"></span><br><span class="line"># 配置根Logger</span><br><span class="line">## 日志输出级别</span><br><span class="line">log4j.rootLogger=debug,Console,D</span><br><span class="line">log4j.logger.com.cnblogs.lzrabbit=DEBUG</span><br><span class="line">log4j.logger.org.springframework=ERROR</span><br><span class="line">log4j.logger.org.mybatis=DEBUG</span><br><span class="line">log4j.logger.org.apache.ibatis=DEBUG</span><br><span class="line">log4j.logger.org.quartz=ERROR</span><br><span class="line">log4j.logger.org.apache.axis2=ERROR</span><br><span class="line">log4j.logger.org.apache.axiom=ERROR</span><br><span class="line">log4j.logger.org.apache=ERROR</span><br><span class="line">log4j.logger.httpclient=ERROR</span><br><span class="line">#log4j.additivity.org.springframework=false</span><br><span class="line"></span><br><span class="line"># ==========输出到控制台==========</span><br><span class="line">log4j.appender.Console=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.Console.Target=System.out</span><br><span class="line"># Layout：日志输出格式</span><br><span class="line"># org.apache.log4j.PatternLayout：可以灵活地指定布局模式</span><br><span class="line"># org.apache.log4j.HTMLLayout：以HTML表格形式布局</span><br><span class="line"># org.apache.log4j.SimpleLayout：包含日志信息的级别和信息字符串</span><br><span class="line"># org.apache.log4j.TTCCLayout：包含日志产生的时间、线程、类别等等信息</span><br><span class="line">log4j.appender.Console.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.Console.layout.ConversionPattern=$&#123;ConversionPattern&#125;</span><br><span class="line">#log4j.appender.Console.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"># ==========输出到日志文件==========</span><br><span class="line"># Appender为日志输出目的地，Log4j提供的appender有以下几种：</span><br><span class="line"># org.apache.log4j.ConsoleAppender（控制台），</span><br><span class="line"># org.apache.log4j.FileAppender（文件），</span><br><span class="line"># org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），</span><br><span class="line"># org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），</span><br><span class="line"># org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</span><br><span class="line">log4j.appender.D=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.D.DatePattern=&apos;.&apos;yyyy-MM-dd&apos;.log&apos;</span><br><span class="line">log4j.appender.D.File=logs/ssm-note.log</span><br><span class="line">log4j.appender.D.Append=true</span><br><span class="line">## 输出日志级别</span><br><span class="line">log4j.appender.D.Threshold=DEBUG</span><br><span class="line">log4j.appender.D.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.D.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"># ==========输出异常信息日志文件==========</span><br><span class="line">log4j.appender.E=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.E.DatePattern=&apos;.&apos;yyyy-MM-dd&apos;.log&apos;</span><br><span class="line">log4j.appender.E.File=logs/daily.log</span><br><span class="line">log4j.appender.E.Append=true</span><br><span class="line">log4j.appender.E.Threshold=ERROR</span><br><span class="line">log4j.appender.E.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.E.encoding=UTF-8</span><br><span class="line">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [%t:%r]-[%p]  %m%n</span><br><span class="line"></span><br><span class="line"># 打印参数</span><br><span class="line">#    %c 输出日志信息所属的类的全名</span><br><span class="line">#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d&#123;yyy-MM-dd HH:mm:ss&#125;，</span><br><span class="line">#      输出类似：2019-2-21 01:38:37</span><br><span class="line">#    %f 输出日志信息所属的类的类名</span><br><span class="line">#    %l 输出日志事件的发生位置，即输出日志信息的的语句处于它所在的类的第几行</span><br><span class="line">#    %m 输出代码中指定的信息，如log(message)中的message</span><br><span class="line">#    %n 输出一个回车换行符，Windows平台为&quot;rn&quot;,Unix平台为&quot;n&quot;</span><br><span class="line">#    %p 输出优先级，即DEBUG.INFO,WARN,ERROR,FATAL.如果是调用debug()输出的，则为DEBUG,以此类推</span><br><span class="line">#    %r 输出自应用启动到输出该日志信息所耗费的毫秒数</span><br><span class="line">#    %t 输出产生该日志的线程名</span><br></pre></td></tr></table></figure><h4 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. 其他</h4><p>登录业务实现代码：<code>LoginController.java</code>，<code>LoginDao.java</code>，<code>User.java</code>，<code>LoginService.java</code>，<code>LoginServiceImpl.java</code>，<code>LoginMapper.xml.xml</code>的具体实现请下载源码。</p><h3 id="三、数据结构"><a href="#三、数据结构" class="headerlink" title="三、数据结构"></a>三、数据结构</h3><h4 id="1-登录表结构"><a href="#1-登录表结构" class="headerlink" title="1. 登录表结构"></a>1. 登录表结构</h4><p><img src="http://img.wanglixia.top/ssm数据结构-201922523468.png" alt="ssm数据结构-201922523468"></p><h4 id="2-登录表语句"><a href="#2-登录表语句" class="headerlink" title="2. 登录表语句"></a>2. 登录表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> ssm_note;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ssm_note;</span><br><span class="line"><span class="keyword">use</span> ssm_note;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*==============================================================*/</span></span><br><span class="line"><span class="comment">/* DBMS name:      MySQL 5.0                                    */</span></span><br><span class="line"><span class="comment">/* Created on:     2019/2/22 1:09:58                            */</span></span><br><span class="line"><span class="comment">/*==============================================================*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> USER_LOGIN;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*==============================================================*/</span></span><br><span class="line"><span class="comment">/* Table: USER_LOGIN                                            */</span></span><br><span class="line"><span class="comment">/*==============================================================*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> USER_LOGIN</span><br><span class="line">(</span><br><span class="line">   <span class="keyword">id</span>                   <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   USER_NAME            <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   <span class="keyword">PASSWORD</span>             <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">   REG_TIME             datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">   primary <span class="keyword">key</span> (<span class="keyword">id</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="项目预览"><a href="#项目预览" class="headerlink" title="项目预览"></a>项目预览</h2><h3 id="一、登录页："><a href="#一、登录页：" class="headerlink" title="一、登录页："></a>一、<code>登录页：</code></h3><p><img src="http://img.wanglixia.top/ssm-note登录页-201922523532.png" alt="ssm-note登录页-201922523532"></p><h3 id="二、欢迎页："><a href="#二、欢迎页：" class="headerlink" title="二、欢迎页："></a>二、<code>欢迎页：</code></h3><p><img src="http://img.wanglixia.top/ssm-note欢迎页-2019225235329.png" alt="ssm-note欢迎页-2019225235329"></p><h2 id="资料推荐"><a href="#资料推荐" class="headerlink" title="资料推荐"></a>资料推荐</h2><ul><li><p>Spring文档：<a href="https://spring.io/docs" target="_blank" rel="noopener">https://spring.io/docs</a></p></li><li><p>史上最全的maven的pom.xml文件详解：<a href="https://www.cnblogs.com/hafiz/p/5360195.html" target="_blank" rel="noopener">https://www.cnblogs.com/hafiz/p/5360195.html</a></p></li><li><p>Spring 实战（第四版） [美]Craig Walls 著 张卫滨 译</p></li><li><p>Spring MVC 和 Spring 总结：<a href="https://www.cnblogs.com/doudouxiaoye/p/5693399.html" target="_blank" rel="noopener">https://www.cnblogs.com/doudouxiaoye/p/5693399.html</a></p></li><li><p>Mybatis 官方文档：<a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">http://www.mybatis.org/mybatis-3/zh/index.html</a></p></li></ul><h2 id="概念整理"><a href="#概念整理" class="headerlink" title="概念整理"></a>概念整理</h2><h3 id="1-Spring"><a href="#1-Spring" class="headerlink" title="1. Spring"></a>1. Spring</h3><p>&emsp;&emsp;创建Spring的主要目的是用来替代更加重量级的企业级Java技术，尤其是EJB。Spring提供了更加轻量级和简单的编程模型。增强了简单老式Java对象（Plain Old Java Object，POJO）的功能。</p><blockquote><p>为了降低Java开发的复杂性，Spring采取了以下四种关键策略：</p><ul><li>基于POJO（Plain Old Java Object）的轻量级和最小侵入性编程；</li><li>通过依赖注入和面向接口实现松耦合；</li><li>基于切面和管理进行声明式编程；</li><li>通过切面和模板减少样板式代码。</li></ul></blockquote><h3 id="2-Spring-MVC"><a href="#2-Spring-MVC" class="headerlink" title="2. Spring MVC"></a>2. Spring MVC</h3><p>&emsp;&emsp;<code>Spring MVC</code>基于模型-视图-控制器（Model-View-Controller，MVC）模式实现，能够构建像<code>Spring</code>框架那样灵活和松耦合的Web应用程序。<code>Spring MVC</code>是一个基于<code>mvc</code>的<code>web</code>框架。<code>Spring MVC</code>是<code>Spring</code>框架的一个模块，<code>Spring MVC</code>和<code>Spring</code>无需通过中间整合层进行整合。</p><h3 id="3-Mybatis"><a href="#3-Mybatis" class="headerlink" title="3. Mybatis"></a>3. Mybatis</h3><p>&emsp;&emsp;Mybatis是一款优秀的持久层框架，支持定制化SQL、存储过程以及高级映射。可以使用简单的XML或注解来配置和映射原生信息，将接口和Java的Pojo映射成数据库中的记录。</p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>欢迎扫描下方二维码，关注weyoung公众号，一起交流学习~~</p><p><img src="http://img.wanglixia.top/wechat_qrcode-2019115195545.jpg" alt="个人微信公众号"></p><p><strong>更多联系方式</strong></p><table><thead><tr><th style="text-align:left">平台</th><th style="text-align:left">链接</th></tr></thead><tbody><tr><td style="text-align:left">预览项目：</td><td style="text-align:left"><a href="https://nelucifer.gitee.io/" target="_blank" rel="noopener">https://nelucifer.gitee.io/</a></td></tr><tr><td style="text-align:left">个人微信公众号：</td><td style="text-align:left">weyoung</td></tr><tr><td style="text-align:left">segmentfault:</td><td style="text-align:left"><a href="https://segmentfault.com/u/nelucifer" target="_blank" rel="noopener">https://segmentfault.com/u/nelucifer</a></td></tr><tr><td style="text-align:left">CSDN:</td><td style="text-align:left"><a href="https://me.csdn.net/wlx001" target="_blank" rel="noopener">https://me.csdn.net/wlx001</a></td></tr><tr><td style="text-align:left">简书：</td><td style="text-align:left"><a href="https://www.jianshu.com/u/99211cc23788" target="_blank" rel="noopener">https://www.jianshu.com/u/99211cc23788</a></td></tr><tr><td style="text-align:left">掘金：</td><td style="text-align:left"><a href="https://juejin.im/user/59b08c575188250f4850e80e" target="_blank" rel="noopener">https://juejin.im/user/59b08c575188250f4850e80e</a></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 框架 </tag>
            
            <tag> mybatis </tag>
            
            <tag> springmvc </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery学习笔记（四）DOM篇</title>
      <link href="/jQuery-usage-4.html"/>
      <url>/jQuery-usage-4.html</url>
      <content type="html"><![CDATA[<p><img src="http://img.wanglixia.top/logo-jquery-20191111489.jpg" alt="logo-jquery-20191111489"></p><a id="more"></a><h3 id="DOM包裹wrap-方法"><a href="#DOM包裹wrap-方法" class="headerlink" title="DOM包裹wrap()方法"></a>DOM包裹wrap()方法</h3><p>如果要将元素用其他元素包裹起来，也就是给它增加一个父元素，JQuery提供了一个wrap方法</p><ul><li><code>.wrap(wrappingElement)</code>：在集合中匹配的每个元素周围包裹一个HTML结构</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给p元素增加一个div包裹</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'p'</span>).wrap(<span class="string">'&lt;div&gt;&lt;/div&gt;'</span>)</span><br></pre></td></tr></table></figure><p>最后的结构，p元素增加了一个父div的结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>.wrap(function)</code> ：一个回调函数，返回用于包裹匹配元素的 HTML 内容或 jQuery 对象<br>使用后的效果与直接传递参数是一样，只不过可以把代码写在函数体内部，写法不同而已<br>以第一个案例为例：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'p'</span>).wrap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;/div&gt;'</span>;   <span class="comment">//与第一种类似，只是写法不一样</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>.wrap()函数可以接受任何字符串或对象，可以传递给$()工厂函数来指定一个DOM结构。这种结构可以嵌套好几层深，但应该只包含一个核心的元素。每个匹配的元素都会被这种结构包裹。该方法返回原始的元素集，以便之后使用链式方法。</p><h3 id="DOM包裹unwrap-方法"><a href="#DOM包裹unwrap-方法" class="headerlink" title="DOM包裹unwrap()方法"></a>DOM包裹unwrap()方法</h3><p>unwarp()方法 ，作用与wrap方法是相反的。将匹配元素集合的父级元素删除，保留自身（和兄弟元素，如果存在）在原来的位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要删除这段代码中的div，一般常规的方法会直接通过remove或者empty方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div'</span>).remove();</span><br></pre></td></tr></table></figure><p>但是如果还要保留内部元素p</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'p'</span>).unwarp();</span><br></pre></td></tr></table></figure><p>找到p元素，然后调用unwarp方法，这样只会删除父辈div元素了<br>结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个方法不接受任何参数。</p><h3 id="DOM包裹wrapAll-方法"><a href="#DOM包裹wrapAll-方法" class="headerlink" title="DOM包裹wrapAll()方法"></a>DOM包裹wrapAll()方法</h3><p>wrap是针对单个dom元素处理，如果要将集合中的元素用其他元素包裹起来，也就是给他们增加一个父元素，针对这样的处理，JQuery提供了一个wrapAll方法<br><code>.wrapAll(wrappingElement)</code>：给集合中匹配的元素增加一个外面包裹HTML结构<br>简单的看一段代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给所有p元素增加一个div包裹</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'p'</span>).wrapAll(<span class="string">'&lt;div&gt;&lt;/div&gt;'</span>)</span><br></pre></td></tr></table></figure><p>最后的结构，2个P元素都增加了一个父div的结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.wrapAll(function)</code> ：一个回调函数，返回用于包裹匹配元素的 HTML 内容或 jQuery 对象<br>通过回调的方式可以单独处理每一个元素<br>以上面案例为例，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'p'</span>).wrapAll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;div/&gt;'</span>; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>以上的写法的结果如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br><code>.wrapAll()</code>函数可以接受任何字符串或对象，可以传递给$()工厂函数来指定一个DOM结构。这种结构可以嵌套多层，但是最内层只能有一个元素。所有匹配元素将会被当作是一个整体，在这个整体的外部用指定的 HTML 结构进行包裹。</p><h3 id="DOM包裹wrapInner-方法"><a href="#DOM包裹wrapInner-方法" class="headerlink" title="DOM包裹wrapInner()方法"></a>DOM包裹wrapInner()方法</h3><p>将合集中的元素内部所有的子元素用其他元素包裹起来，并当作指定元素的子元素<br><code>.wrapInner( wrappingElement )</code>：给集合中匹配的元素的内部，增加包裹的HTML结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给所有元素增加一个p包裹</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div'</span>).wrapInner(<span class="string">'&lt;p&gt;&lt;/p&gt;'</span>)</span><br></pre></td></tr></table></figure><p>最后的结构，匹配的di元素的内部元素被p给包裹了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.wrapInner(function)</code> ：允许我们用一个callback函数做参数，每次遇到匹配元素时，该函数被执行，返回一个DOM元素，jQuery对象，或者HTML片段，用来包住匹配元素的内容。<br>以上面案例为例，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div'</span>).wrapInner(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;p&gt;&lt;/p&gt;'</span>; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>当通过一个选择器字符串传递给<code>.wrapInner()</code> 函数，其参数应该是格式正确的 HTML，并且 HTML 标签应该是被正确关闭的。</p><h3 id="jQuery遍历之children-方法"><a href="#jQuery遍历之children-方法" class="headerlink" title="jQuery遍历之children()方法"></a>jQuery遍历之children()方法</h3><p><code>.children(selector)</code> 方法是返回匹配元素集合中每个元素的所有子元素（仅儿子辈，这里可以理解为就是父亲-儿子的关系）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"grandson"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码如果是<code>$(“div”).children()</code>，那么意味着只能找到ul，因为div与ul是父子关系，li与div是祖辈关系，因此无法找到。</p><ul><li><p>children()无参数<br>允许我们通过在DOM树中对这些元素的直接子元素进行搜索，并且构造一个新的匹配元素的jQuery对象<br>注意：jQuery是一个合集对象，所以通过children是匹配合集中每一给元素的第一级子元素</p></li><li><p>.children()方法选择性地接受同一类型选择器表达式</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).children(<span class="string">".selected"</span>)</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.div'</span>).children().css(<span class="string">'border'</span>, <span class="string">'3px solid red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到所有class=div的元素</span></span><br><span class="line"><span class="comment">//找到其对应的子元素ul，然后筛选出最后一个，给边宽加上颜色</span></span><br><span class="line">$(<span class="string">'.div'</span>).children(<span class="string">':last'</span>).css(<span class="string">'border'</span>, <span class="string">'3px solid blue'</span>)</span><br></pre></td></tr></table></figure><h3 id="jQuery遍历之find-方法"><a href="#jQuery遍历之find-方法" class="headerlink" title="jQuery遍历之find()方法"></a>jQuery遍历之find()方法</h3><p>jQuery是一个合集对象，快速查找DOM树中的这些元素的后代元素可以用find()方法，这也是开发使用频率很高的方法。 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"grandson"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>$(“div”).find(“li”)</code>，li与div是祖辈关系，通过find方法就可以快速的查找到了。</p><p><code>.find()</code>方法要注意的知识点：</p><ul><li>find是遍历当前元素集合中每个元素的后代。只要符合，不管是儿子辈，孙子辈都可以。</li><li>与其他的树遍历方法不同，选择器表达式对于 .find() 是必需的参数。如果我们需要实现对所有后代元素的取回，可以传递通配选择器 ‘*’。</li><li>find只在后代中遍历，不包括自己。</li><li>选择器 context 是由 .find() 方法实现的；因此，$(‘.item-ii’).find(‘li’) 等价于 $(‘li’, ‘.item-ii’)(找到类名为item-ii的标签下的li标签)。</li></ul><p><strong>注意：</strong><br><code>.find()</code>和<code>.children()</code>方法是相似的</p><ol><li>children只查找第一级的子节点，是父子关系查找</li><li>find查找范围包括子节点的所有后代节点，（包含父子关系）</li></ol><h3 id="jQuery遍历之parent-方法"><a href="#jQuery遍历之parent-方法" class="headerlink" title="jQuery遍历之parent()方法"></a>jQuery遍历之parent()方法</h3><p>快速查找合集里面的每一个元素的父元素（父亲-儿子的关系），此时可以用parent()方法，这个方法只会向上查找一级<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"grandson"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查找ul的父元素div</span></span><br><span class="line">$(ul).parent()</span><br></pre></td></tr></table></figure><p>parent()无参数<br>parent()方法允许在DOM树中搜索到这些元素的父级元素，从有序的向上匹配元素，并根据匹配的元素创建一个新的 jQuery 对象</p><p>注意：jQuery是一个合集对象，所以通过parent是匹配合集中每一个元素的父元素<br>parent()方法选择性地接受同一型选择器表达式,同样的也是因为jQuery是合集对象，可能需要对这个合集对象进行一定的筛选，找出目标元素，所以允许传一个选择器的表达式</p><h3 id="jQuery遍历之parents-方法"><a href="#jQuery遍历之parents-方法" class="headerlink" title="jQuery遍历之parents()方法"></a>jQuery遍历之parents()方法</h3><p>快速查找合集里面的每一个元素的所有祖辈元素，此时可以用parents()方法<br>其实也类似find与children的区别，parent只会查找一级，parents则会往上一直查到查找到祖先节点<br>理解节点查找关系：</p><p><div class="div"><br>    <ul class="son"><br>        <li class="grandson">1</li><br>    </ul><br></div><br>在li节点上找到祖 辈元素div， 这里可以用$(“li”).parents()方法</p><ul><li><p>parents()无参数<br>parents()方法允许在DOM树中搜索到这些元素的祖先元素，有序的向上匹配元素，并根据匹配的元素创建一个新的 jQuery 对象;<br>返回的元素秩序是从离他们最近的父级元素开始的<br>注意：jQuery是一个合集对象，所以通过parent是匹配合集中所有元素的祖辈元素</p></li><li><p>parents()方法选择性地接受同一型选择器表达式<br>同样的也是因为jQuery是合集对象，可能需要对这个合集对象进行一定的筛选，找出目标元素，所以允许传一个选择器的表达式<br>注意事项：</p></li></ul><ol><li>.parents()和.parent()方法是相似的，但后者只是进行了一个单级的DOM树查找</li><li>$( “html” ).parent()方法返回一个包含document的集合，而$( “html” ).parents()返回一个空集合。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到当前元素的所有祖辈元素,筛选出class="first-div"的元素</span></span><br><span class="line"><span class="comment">//并且附上一个边</span></span><br><span class="line">$(<span class="string">'.item-b'</span>).parents(<span class="string">'.first-div'</span>).css(<span class="string">'border'</span>, <span class="string">'2px solid blue'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>人人都可快速上手的GitBook使用笔记（持续更新中）</title>
      <link href="/gitbook-usage.html"/>
      <url>/gitbook-usage.html</url>
      <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>GitBook是Markdown与HTML完美的结合。</p><blockquote><p>百科介绍：GitBook是一个基于Node.js的命令行工具，可通过Markdown来制作电子书、在线文档等。<br>GitBook支持输出多种格式：</p><ol><li>PDF： 需要安装gitbook-pdf依赖；</li><li>eBook： 需要安装ebook-convert；</li><li>单HTML网页： 支持将内容输出为单页的HTML。</li></ol></blockquote><a id="more"></a><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><ul><li>需要安装Node.js；</li><li>安装GitBook命令行工具；</li><li>MarkDown常用语法；</li></ul><h2 id="本文介绍环境配置"><a href="#本文介绍环境配置" class="headerlink" title="本文介绍环境配置"></a>本文介绍环境配置</h2><ul><li>NPM版本： 5.6.0</li><li>OS版本：Windows10</li><li>CLI version: 2.3.2</li><li>GitBook version: 3.2.3</li></ul><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><ul><li>Gitbook好用的插件：<a href="https://plugins.gitbook.com/" target="_blank" rel="noopener">https://plugins.gitbook.com/</a></li><li>Gitbook使用文档：<a href="https://github.com/GitbookIO/gitbook" target="_blank" rel="noopener">https://github.com/GitbookIO/gitbook</a></li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><p>GitBook的初始化，编译和预览等均需要在命令行进行，就像hexo编写个人博客一样。</p><h3 id="安装GitBook工具"><a href="#安装GitBook工具" class="headerlink" title="安装GitBook工具"></a>安装GitBook工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-cli -g</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>新建一个目录，命令行打开该目录，然后以下输入命令，就可以初始化书籍，生成两个文件（没有生成其他教程说的book.json）：</p><ul><li><code>README.md</code>：书籍介绍</li><li><code>SUMMARY.md</code>：书籍目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook init</span><br></pre></td></tr></table></figure><h3 id="编译成html"><a href="#编译成html" class="headerlink" title="编译成html"></a>编译成html</h3><p>生成的文件在上述目录下的_book文件夹下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br></pre></td></tr></table></figure><h3 id="本地进行预览"><a href="#本地进行预览" class="headerlink" title="本地进行预览"></a>本地进行预览</h3><p>浏览器中打开<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>进行预览。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook serve</span><br></pre></td></tr></table></figure><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook update <span class="comment"># 更新gitbook</span></span><br></pre></td></tr></table></figure><h3 id="手动给GitBook添加book-json"><a href="#手动给GitBook添加book-json" class="headerlink" title="手动给GitBook添加book.json"></a>手动给GitBook添加book.json</h3><p>因为使用<code>gitbook init</code>生成的目录默认是没有book.json的，那么要引入其他的插件的话就需要自己<strong>手动</strong>在<strong>根目录</strong>创建一个<code>book.json</code>，<br>配置之后需要使用<code>gitbook install</code>安装<code>book.json</code>中配置的插件。<br>基本格式如下：</p><pre><code class="json">{  <span class="attr">"gitbook"</span>: <span class="string">"3.2.3"</span>,  <span class="attr">"title"</span>: <span class="string">"标题"</span>,  <span class="attr">"description"</span>: <span class="string">"文档描述"</span>,  <span class="attr">"author"</span>: <span class="string">"作者"</span>,  <span class="attr">"language"</span>: <span class="string">"zh-hans"</span>,  <span class="attr">"links"</span>: {    <span class="attr">"gitbook"</span>: <span class="literal">true</span>,    <span class="attr">"sharing"</span>: {      <span class="attr">"google"</span>: <span class="literal">false</span>,      <span class="attr">"facebook"</span>: <span class="literal">false</span>,      <span class="attr">"twitter"</span>: <span class="literal">false</span>,      <span class="attr">"all"</span>: <span class="literal">false</span>    }  },//分享按钮是否展示  "plugins": [    "github",    "donate",    "splitter",    "anchor-navigation-ex",    "-sharing",    "sharing-plus",    "-highlight",    "prism",    "disqus",    "editlink",    "baidu",    "sitemap",    "tbfed-pagefooter",    "fontsettings",    "simple-page-toc",    <span class="string">"links"</span>  ],  "pluginsConfig": {    "tbfed-pagefooter": {      "copyright": "",      "modify_label": "文件修改时间：",      "modify_format": "YYYY-MM-DD HH:mm:ss"    },// 文件的修改时间，以及版权声明等    "simple-page-toc": {      "maxDepth": 3,      "skipFirstH1": true    },    "sharing": {      "douban": false,      "facebook": false,      "google": false,      "hatenaBookmark": false,      "instapaper": false,      "line": false,      "linkedin": false,      "messenger": false,      "pocket": false,      "qq": false,      "qzone": false,      "stumbleupon": false,      "twitter": false,      "viber": false,      "vk": false,      "weibo": false,      "whatsapp": false,      "all": [        "weibo",        "qq",        "qzone",        "google",        <span class="string">"douban"</span>      ]    },    "github": {      "url": "https://github.com/nelucifer"    },    "donate": {      "wechat": "",      "title": "",      "button": "赏",      "wechatText": "微信打赏"    },    "anchor-navigation-ex": {      "associatedWithSummary": false,      "showLevel": true,      "multipleH1": true,      "mode": "float",      "pageTop": {        "showLevelIcon": false,        "level1Icon": "fa fa-hand-o-right",        "level2Icon": "fa fa-hand-o-right",        "level3Icon": "fa fa-hand-o-right"      }    },    "theme-default": {      "showLevel": true    },    "fontsettings": {      "theme": "white",      "family": "serif",      "size": 2    },// 显示样式以及文字大小的主题    "sidebar": {    },    "disqus": {      "shortName": "webpack-handbook" //生成评论    },    "github": {      "url": "https://github.com/nelucifer/front-template"    },    "editlink": {      "base": "https://github.com/nelucifer/",      "label": "编辑本页面" //内容顶部显示 编辑本页 链接，点击跳转到配置的源码存放位置    },    "baidu": {      "token": "" //百度站长工具统计    },    "sitemap": {      "hostname": "http://baidu.com/"//站点地图    },    "prism": {      "css": [        <span class="string">"prismjs/themes/prism-tomorrow.css"</span>      ]    }  }}</code></pre>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> GitBook </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>redis系列——windows下redis设置及安装windows服务</title>
      <link href="/redis-windows-install.html"/>
      <url>/redis-windows-install.html</url>
      <content type="html"><![CDATA[<p><img src="http://img.wanglixia.top/redis-logo-2019115132039.jpg" alt="redis-logo-2019115132039"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Redis是一个开源（BSD许可），内存数据结构存储，用作数据库，缓存和消息代理。 它支持数据结构，如字符串，散列，列表，集合，带有范围查询的排序集，位图，超级日志，带有半径查询和流的地理空间索引。 Redis具有内置复制，Lua脚本，LRU驱逐，事务和不同级别的磁盘持久性，并通过Redis Sentinel提供高可用性并使用Redis Cluster自动分区。本文简单记录一下windows下redis设置及安装成windows服务。<br><a id="more"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li><p>REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。</p></li><li><p>百度百科：Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。<br>它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p></li><li>官网介绍: Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.<br>Google 翻译：Redis是一个开源（BSD许可），内存数据结构存储，用作数据库，缓存和消息代理。 它支持数据结构，如字符串，散列，列表，集合，带有范围查询的排序集，位图，超级日志，带有半径查询和流的地理空间索引。 Redis具有内置复制，Lua脚本，LRU驱逐，事务和不同级别的磁盘持久性，并通过Redis Sentinel提供高可用性并使用Redis Cluster自动分区。</li></ul><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载windows版的redis（解压版），下载地址：https-github-com-ServiceStack-redis-windows-tree-master-downloads"><a href="#下载windows版的redis（解压版），下载地址：https-github-com-ServiceStack-redis-windows-tree-master-downloads" class="headerlink" title="下载windows版的redis（解压版），下载地址：https://github.com/ServiceStack/redis-windows/tree/master/downloads"></a>下载windows版的redis（解压版），下载地址：<a href="https://github.com/ServiceStack/redis-windows/tree/master/downloads" target="_blank" rel="noopener">https://github.com/ServiceStack/redis-windows/tree/master/downloads</a></h3><h3 id="下载Redis可视化工具-Redis-Desktop-Manager，"><a href="#下载Redis可视化工具-Redis-Desktop-Manager，" class="headerlink" title="下载Redis可视化工具 Redis Desktop Manager，"></a>下载Redis可视化工具 Redis Desktop Manager，</h3><h4 id="下载地址：https-redisdesktop-com-download"><a href="#下载地址：https-redisdesktop-com-download" class="headerlink" title="下载地址：https://redisdesktop.com/download"></a>下载地址：<a href="https://redisdesktop.com/download" target="_blank" rel="noopener">https://redisdesktop.com/download</a></h4><h4 id="百度网盘：链接：https-pan-baidu-com-s-1vcRywB4JTA2xPCUvh0n1DA-提取码：y1vv"><a href="#百度网盘：链接：https-pan-baidu-com-s-1vcRywB4JTA2xPCUvh0n1DA-提取码：y1vv" class="headerlink" title="百度网盘：链接：https://pan.baidu.com/s/1vcRywB4JTA2xPCUvh0n1DA 提取码：y1vv"></a>百度网盘：链接：<a href="https://pan.baidu.com/s/1vcRywB4JTA2xPCUvh0n1DA" target="_blank" rel="noopener">https://pan.baidu.com/s/1vcRywB4JTA2xPCUvh0n1DA</a> 提取码：y1vv</h4><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="解压redis-64-3-0-503-zip；cmd命令进入该目录"><a href="#解压redis-64-3-0-503-zip；cmd命令进入该目录" class="headerlink" title="解压redis-64.3.0.503.zip；cmd命令进入该目录"></a>解压<strong>redis-64.3.0.503.zip</strong>；cmd命令进入该目录</h3><table><thead><tr><th style="text-align:center">文件</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">redis-server</td><td style="text-align:center">启动redis</td></tr><tr><td style="text-align:center">redis-cli</td><td style="text-align:center">redis命令行工具</td></tr><tr><td style="text-align:center">redis-benchmark</td><td style="text-align:center">基准测试工具</td></tr><tr><td style="text-align:center">redis-check-aof</td><td style="text-align:center">AOF持久化文件检测工具和修复工具</td></tr><tr><td style="text-align:center">redis-check-dump</td><td style="text-align:center">RDB持久化文件检测工具和修复工具</td></tr><tr><td style="text-align:center">redis-sentinel</td><td style="text-align:center">启动redis-sentinel</td></tr></tbody></table><p>在解压后的文件夹里面，按住<code>shift</code>，然后鼠标右键点击空白区域，选择【在此处打开命令窗口】，快捷打开cmd窗口和当前目录。</p><h3 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h3><h4 id="带配置文件启动redis"><a href="#带配置文件启动redis" class="headerlink" title="带配置文件启动redis:"></a>带配置文件启动redis:</h4><p><code>redis.windows.conf</code> 这个文件是redis的配置文件，使用以下命令启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe redis-windows.conf</span><br></pre></td></tr></table></figure><h4 id="不带配置文件启动："><a href="#不带配置文件启动：" class="headerlink" title="不带配置文件启动："></a>不带配置文件启动：</h4><p>双击<code>redis-server.exe</code>；或者使用以下命令启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe</span><br></pre></td></tr></table></figure></p><h3 id="出现如下图时，启动成功。"><a href="#出现如下图时，启动成功。" class="headerlink" title="出现如下图时，启动成功。"></a>出现如下图时，启动成功。</h3><p><img src="http://img.wanglixia.top/redis-windows-install-1-2019110133458.png" alt="redis-windows-install-1-2019110133458"></p><h3 id="登录redis"><a href="#登录redis" class="headerlink" title="登录redis"></a>登录redis</h3><p>启动redis服务后，需要登录redis来进行操作，这个时候需要按照上面步骤重新打开一个命令窗口，使用<code>redis-cli</code>命令进行登录，命令如下</p><ul><li>-h 服务器/主机地址，本地就是<code>127.0.0.1</code></li><li>-p 端口号，默认应该是6379</li><li>-a 密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h 127.0.0.1 -a lucifer</span><br></pre></td></tr></table></figure><p>登录成功后，如下图示：<br><img src="http://img.wanglixia.top/redis-windows-install-登录成功-2-2019110163813.png" alt="redis-windows-install-登录成功-2-2019110163813"></p><h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p>打开redis.conf配置文件，我下载的版本配置文件名是<code>redis-windows.conf</code>，找到# requirepass foobared，去掉注释，井号代表注释，然后修改如下即可:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass 你的密码 <span class="comment">#我设置的是lucifer</span></span><br></pre></td></tr></table></figure></p><h2 id="安装成windows服务"><a href="#安装成windows服务" class="headerlink" title="安装成windows服务"></a>安装成windows服务</h2><p>自己本地练习的时候呢，每一次都要打开目录，然后输入命令来启动服务，再打开另外一个窗口进行操作，确实是不方便，接下来将redis服务安装成windows服务。<br>命令窗口执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-install redis.windows.conf</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ol><li>启动命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure><ol start="2"><li>停止命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-stop</span><br></pre></td></tr></table></figure><ol start="3"><li>卸载命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-uninstall</span><br></pre></td></tr></table></figure><h2 id="Redis可视化工具RedisDesktopManager"><a href="#Redis可视化工具RedisDesktopManager" class="headerlink" title="Redis可视化工具RedisDesktopManager"></a>Redis可视化工具RedisDesktopManager</h2><p>使用黑窗口操作虽然看起来足够炫酷，但是终究还是不那么方便，因此，需要使用到RDM工具，这块比较简单了就。安装，一路next。<br><img src="http://img.wanglixia.top/redis-windows-install-安装RDM-3-2019110165151.png" alt="redis-windows-install-安装RDM-3-2019110165151"><br>填入连接名，随便填，你认识就行；服务器地址、端口号、密码，点测试连接；<br><img src="http://img.wanglixia.top/redis-windows-install-测试连接-4-2019110165446.png" alt="redis-windows-install-测试连接-4-2019110165446"><br>可以缓存到内容<br><img src="http://img.wanglixia.top/redis-windows-install-连接成功-5-201911018212.png" alt="redis-windows-install-连接成功-5-201911018212"></p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> windows </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>好用的前端响应式框架——Bootstrap</title>
      <link href="/bootstrap-study-note.html"/>
      <url>/bootstrap-study-note.html</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>Bootstrap是美国Twitter公司的设计师Mark Otto和Jacob Thornton合作基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。<br><img src="http://img.wanglixia.top/bootstrap-201916235849.png" alt="bootstrap-201916235849"><br><a id="more"></a></p><h3 id="Bootstrap的优点："><a href="#Bootstrap的优点：" class="headerlink" title="Bootstrap的优点："></a>Bootstrap的优点：</h3><ul><li>移动设备优先。</li><li>响应式设计。基于bootstrap的网站和系统，能够自适应于台式机、平板电脑和手机。</li><li>容易上手。前置技能：HTML和CSS的基础知识即可。</li><li>浏览器支持比较好。IE、FireFox、Chrome、Opera、Safari等。</li><li>文档比较完善、内置组件比较多，容易定制。</li><li>开源。</li></ul><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>Bootstrap提供多种使用方式：直接下载Bootstrap并引入；使用BootstrapCDN；包管理工具；npm、RubyGems、Composer、NuGet。这里主要说一下使用第一种方式（直接下载Bootstrap并引入），也是最常见的一种方式，也可以直接使用BootstrapCDN提供的免费CDN加速版本。</p><ul><li>下载版本：<ol><li>下载适用于生产环境的Bootstrap（不包含文档）；</li><li>下载Bootstrap源码（包含文档）；</li><li>Sass 用于快速地在 Rails、Compass 或 只针对 Sass 的项目中引入。</li></ol></li><li>下载链接：<a href="https://v3.bootcss.com/getting-started/#download-composer" target="_blank" rel="noopener">https://v3.bootcss.com/getting-started/#download-composer</a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3>bootstrap/</li><li>css/<ul><li>bootstrap.css</li><li>bootstrap.min.css</li><li>bootstrap-theme.css</li><li>bootstrap-theme.min.css</li></ul></li><li>js/<ul><li>bootstrap.js</li><li>bootstrap.min.js<h3 id="Bootstrap使用"><a href="#Bootstrap使用" class="headerlink" title="Bootstrap使用"></a>Bootstrap使用</h3>在使用Bootstrap的html模板中进行使用。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap使用和效果预览<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/bootstrap-theme.min.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的 JavaScript 插件需要引入 jQuery) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="Bootstrap的相关概念"><a href="#Bootstrap的相关概念" class="headerlink" title="Bootstrap的相关概念"></a>Bootstrap的相关概念</h4><p>Bootstrap 包含了一个响应式的、移动设备优先的、不固定的网格系统，可以随着设备或视口大小的增加而适当地扩展到 12 列。<br>前面有说过bootstrap的一个优点，那就是移动设备优先：优先设计更小的宽度，即默认设计是移动设备的样式，再使用媒体查询来设置平板电脑、台式电脑以及大台式电脑。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 超小设备（手机，小于 768px） */</span></span><br><span class="line"><span class="comment">/* Bootstrap 中默认情况下没有媒体查询 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 小型设备（平板电脑，768px 起） */</span></span><br><span class="line">@<span class="keyword">media</span> (min-width: @screen-sm-min) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 中型设备（台式电脑，992px 起） */</span></span><br><span class="line">@<span class="keyword">media</span> (min-width: @screen-md-min) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 大型设备（大台式电脑，1200px 起） */</span></span><br><span class="line">@<span class="keyword">media</span> (min-width: @screen-lg-min) &#123; ... &#125;</span><br></pre></td></tr></table></figure></p><p>具体设置及行为见下表：</p><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">超小设备手机（&lt;768px）</th><th style="text-align:left">小型设备平板电脑（≥768px）</th><th style="text-align:left">中型设备台式电脑（≥992px）</th><th style="text-align:left">大型设备台式电脑（≥1200px）</th></tr></thead><tbody><tr><td style="text-align:left">网格行为</td><td style="text-align:left">一直是水平的</td><td style="text-align:left">以折叠开始，断点以上是水平的</td><td style="text-align:left">以折叠开始，断点以上是水平的</td><td style="text-align:left">以折叠开始，断点以上是水平的</td></tr><tr><td style="text-align:left">最大容器宽度</td><td style="text-align:left">None (auto)</td><td style="text-align:left">750px</td><td style="text-align:left">970px</td><td style="text-align:left">1170px</td></tr><tr><td style="text-align:left">Class 前缀</td><td style="text-align:left">.col-xs-</td><td style="text-align:left">.col-sm-</td><td style="text-align:left">.col-md-</td><td style="text-align:left">.col-lg-</td></tr><tr><td style="text-align:left">列数量和</td><td style="text-align:left">12</td><td style="text-align:left">12</td><td style="text-align:left">12</td><td style="text-align:left">12</td></tr><tr><td style="text-align:left">最大列宽</td><td style="text-align:left">Auto</td><td style="text-align:left">60px</td><td style="text-align:left">78px</td><td style="text-align:left">95px</td></tr><tr><td style="text-align:left">间隙宽度</td><td style="text-align:left">30px（一个列的每边分别 15px）</td><td style="text-align:left">30px（一个列的每边分别 15px）</td><td style="text-align:left">30px（一个列的每边分别 15px）</td><td style="text-align:left">30px（一个列的每边分别 15px）</td></tr><tr><td style="text-align:left">可嵌套</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td></tr><tr><td style="text-align:left">偏移量</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td></tr><tr><td style="text-align:left">列排序</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td><td style="text-align:left">Yes</td></tr></tbody></table><h4 id="Bootstrap怎么用？"><a href="#Bootstrap怎么用？" class="headerlink" title="Bootstrap怎么用？"></a>Bootstrap怎么用？</h4><p>在一个div中的class中定义col-<em>-</em>，第一个星号的值范围是[xs,sm,md,lg] ，第二个星号的值范围是1-12；因此设置的时候需要注意数值是否规范。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 在一个div中的class中定义col-*-*，第一个星号的值范围是[xs,sm,md,lg] ，第二个星号的值范围是1-12--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-*-*"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-*-*"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>      </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="Bootstrap布局组件"><a href="#Bootstrap布局组件" class="headerlink" title="Bootstrap布局组件"></a>Bootstrap布局组件</h4><ul><li>Bootstrap 字体图标</li><li>Bootstrap 下拉菜单</li><li>Bootstrap 按钮组</li><li>Bootstrap 按钮下拉菜单</li><li>Bootstrap 输入框组</li><li>Bootstrap 导航元素</li><li>Bootstrap 导航栏</li><li>Bootstrap 面包屑导航</li><li>Bootstrap 分页</li><li>Bootstrap 标签</li><li>Bootstrap 徽章</li><li>Bootstrap 超大屏幕</li><li>Bootstrap 页面标题</li><li>Bootstrap 缩略图</li><li>Bootstrap 警告</li><li>Bootstrap 进度条</li><li>Bootstrap 多媒体对象</li><li>Bootstrap 列表组</li><li>Bootstrap 面板</li><li>Bootstrap Wells<h4 id="Bootstrap插件"><a href="#Bootstrap插件" class="headerlink" title="Bootstrap插件"></a>Bootstrap插件</h4></li><li>Bootstrap 过渡效果</li><li>Bootstrap 模态框</li><li>Bootstrap 下拉菜单</li><li>Bootstrap 滚动监听</li><li>Bootstrap 标签页</li><li>Bootstrap 提示工具</li><li>Bootstrap 弹出框</li><li>Bootstrap 警告框</li><li>Bootstrap 按钮</li><li>Bootstrap 折叠</li><li>Bootstrap 轮播</li><li>Bootstrap 附加导航<h4 id="Bootstrap常用插件"><a href="#Bootstrap常用插件" class="headerlink" title="Bootstrap常用插件"></a>Bootstrap常用插件</h4></li><li>表单验证插件 bootstrapValidator</li><li>Messenger 弹框组件库<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3>文档上提供的BootstrapDialog模态框组件的实现比较繁琐，因此可以在网上找相关插件处理。<h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3></li><li>Bootstrap官网：<a href="http://www.bootcss.com/" target="_blank" rel="noopener">http://www.bootcss.com/</a></li><li>Bootstrap官方文档：<a href="https://v3.bootcss.com/components/" target="_blank" rel="noopener">https://v3.bootcss.com/components/</a><h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3>在学习过程中，经常在<strong>菜鸟教程</strong><a href="http://www.runoob.com/" target="_blank" rel="noopener">http://www.runoob.com/</a>查阅资料，表示感谢。</li></ul>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 前端 </tag>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mybatis常见错误记录</title>
      <link href="/mybatis%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95.html"/>
      <url>/mybatis%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;Mybatis使用过程中，常见的一些问题汇总记录。<br><a id="more"></a></p><h3 id="1-Mybatis执行SQL，查出来的比使用PL-SQL等工具查出来的记录多。"><a href="#1-Mybatis执行SQL，查出来的比使用PL-SQL等工具查出来的记录多。" class="headerlink" title="1. Mybatis执行SQL，查出来的比使用PL/SQL等工具查出来的记录多。"></a>1. Mybatis执行SQL，查出来的比使用PL/SQL等工具查出来的记录多。</h3><ul><li>问题描述：由于查询要使用到not in，因此 not in ()括号里面的东西自己使用了前端拼接传值，传值格式为’’,’’</li><li>问题处理：在Mapper.xml中使用了#{}，这块涉及到#{}和${}的区别。替换成${} 就好了。<h3 id="2-MyBatis-mapper文件中的变量引用方式-与-的差别"><a href="#2-MyBatis-mapper文件中的变量引用方式-与-的差别" class="headerlink" title="2. MyBatis mapper文件中的变量引用方式#{}与${}的差别"></a>2. MyBatis mapper文件中的变量引用方式#{}与${}的差别</h3>默认情况下,使用#{}语法,MyBatis会产生PreparedStatement语句中，并且安全的设置PreparedStatement参数，这个过程中MyBatis会进行必要的安全检查和转义。<br>示例1：<br>执行SQL：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> = #&#123;employeeName&#125;</span><br></pre></td></tr></table></figure></li></ul><p>参数：<code>employeeName</code>传入值为：<code>Smith</code><br>解析后执行的SQL：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> = ?</span><br></pre></td></tr></table></figure></p><p>执行SQL：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> = $&#123;employeeName&#125;</span><br></pre></td></tr></table></figure></p><p>参数：<code>employeeName</code>传入值为：<code>Smith</code><br>解析后执行的SQL：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> = Smith</span><br></pre></td></tr></table></figure></p><p>综上所述、${}方式会引发SQL注入的问题、同时也会影响SQL语句的预编译，所以从安全性和性能的角度出发，能使用#{}的情况下就不要使用${}<br>${}的使用场景：<br>有时候可能需要直接插入一个不做任何修改的字符串到SQL语句中。这时候应该使用${}语法。<br>比如，动态SQL中的字段名，如：<code>ORDER BY ${columnName}，not in ${items}</code><br>注意：当使用${}参数作为字段名或表名时、需指定statementType为“STATEMENT”，如：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryMetaList"</span> <span class="attr">resultType</span>=<span class="string">"Map"</span> <span class="attr">statementType</span>=<span class="string">"STATEMENT"</span>&gt;</span></span><br><span class="line">    Select * from emp where name = $&#123;employeeName&#125; ORDER BY $&#123;columnName&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="3-ssm-web项目启动报错（一）"><a href="#3-ssm-web项目启动报错（一）" class="headerlink" title="3. ssm-web项目启动报错（一）"></a>3. ssm-web项目启动报错（一）</h3><blockquote><p>Could not resolve type alias ‘map ‘. Cause: java.lang.ClassNotFoundException: Cannot find class: map<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByCode"</span> <span class="attr">resultType</span>=<span class="string">"com.lucifer.pojo.BaseParams"</span> <span class="attr">parameterType</span>=<span class="string">"java.util.map"</span>&gt;</span></span><br><span class="line">    SELECT BP.ID,BP.NAME FROM BASE_PARAMS BP WHERE BP.DOMAIN=#&#123;domain&#125; AND BP.IS_CANCEL='N'</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p>处理方式：把resultType改为resultMap，把parameterType改为parameterMap，重新发布并运行。</p><h3 id="4-ssm-web项目启动报错（二）"><a href="#4-ssm-web项目启动报错（二）" class="headerlink" title="4. ssm-web项目启动报错（二）"></a>4. ssm-web项目启动报错（二）</h3><blockquote><p>org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [<strong><em>**</em></strong>] will not be managed by Spring</p></blockquote><p>处理方式：</p><p><img src="http://img.wanglixia.top/mybatis-1-20191504549.png" alt="mybatis-1-20191504549"></p>]]></content>
      
      <categories>
          
          <category> 错误 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RxJava</title>
      <link href="/rxjava.html"/>
      <url>/rxjava.html</url>
      <content type="html"><![CDATA[<h2 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a>RxJava</h2><p>当被观察者(Observable)的生成速度大于观察者(Observer)的处理速度会出现 Backpressure 现象(只有在异步环境下会发生).<br>会抛出 MissingBackpressureException 异常信息<br><a id="more"></a></p><h2 id="Hot-and-Cold-Observables"><a href="#Hot-and-Cold-Observables" class="headerlink" title="Hot and Cold Observables"></a>Hot and Cold Observables</h2><ul><li>Cold Observables：当被订阅后才开始发送事件的Observable(每个Subscriber都能接收到完整的事件)</li><li>Hot Observables:  不管有没有被订阅,都会去发送事件的 Observable</li></ul><p>Hot Observable 是不支持背压的,Cold Observable 有一部分并不支持背压(比如interval，timer等操作符创建的Observable)<br>rxJava2.0 已经解决了这个问题(?:Observable,有的支持背压,有的不支持)</p><p>cold observable 相当于响应式拉(就是observer处理完了一个事件就从observable拉取下一个事件),hot observable通常不能很好的处理响应式拉模型,例如使用onBackpressureBuffer或者onBackpressureDrop 操作符,和其他操作符比<br>如operators, throttling, buffers, or windows.</p><p>observeOn这个操作符内部有一个缓冲区，默认长度是16.经常用到的Observable.create 就是 Cold Observable,而 just, range, timer 和 from 这些创建的同样是 Cold Observable.我们一般使用的都是Cold Observable,除非特殊需求,才会使用Hot Observable</p><h2 id="背压操作符"><a href="#背压操作符" class="headerlink" title="背压操作符"></a>背压操作符</h2><p>rxJava1.X 针对不支持背压提供的操作符有：sample(),throttleLast(),throttleFirst(),throttleWithTimeout(),debounce(),onBackpressurebuffer(),onBackpressureDrop()</p><h2 id="RxJava1-x-vs-RxJava2-x"><a href="#RxJava1-x-vs-RxJava2-x" class="headerlink" title="RxJava1.x vs RxJava2.x"></a>RxJava1.x vs RxJava2.x</h2><ul><li>2.x 发送事件时不能传 null,否则会抛出空指针异常</li><li>2.x 中 Observable 不再支持背压, 用 Flowable 来支持背压</li><li>线程调度方面 2.x 取消 Schedulers.immediate()</li></ul><h2 id="RxJava2-Backpressure"><a href="#RxJava2-Backpressure" class="headerlink" title="RxJava2 Backpressure"></a>RxJava2 Backpressure</h2><p>Observable拆分成了新的 Observable 和 Flowable,Observable 不具备处理背压能力,Flowable 解决了背压问题,Backpressure 只在异步情况下产生,RxJava2 的处理策略仅仅是对观察者接收事件的处理</p><p>1.ERROR<br>产生背压问题会抛出 MissingBackpressureException 异常信息<br>在异步调用时,RxJava中有个缓存池，用来缓存消费者处理不了暂时缓存下来的数据,缓存池的默认大小为128,即只能<br>缓存128个事件.无论request()中传入的数字比128大或小,缓存池中在刚开始都会存入128个事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Flowable.create(new FlowableOnSubscribe&lt;&gt;(),BackpressureStrategy.ERROR)</span><br><span class="line">.subscribe(new Subscriber());</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>BUFFER<br>把RxJava中默认的只能存128个事件的缓存池换成一个大的缓存池，支持存很多很多的数据,比较消耗内存</p></li><li><p>DROP  LATEST<br>DROP 丢弃事件,LATEST使消费者能够接收到生产者产生的最后一个事件</p></li></ol>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> RxJava </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记使用hexo搭建个人博客-报错集锦</title>
      <link href="/hexo-coding-github-%E6%8A%A5%E9%94%99%E9%9B%86%E9%94%A6.html"/>
      <url>/hexo-coding-github-%E6%8A%A5%E9%94%99%E9%9B%86%E9%94%A6.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;使用hexo+github/coding+next搭建个人博客过程中遇到的一些问题集中整理，包括：</p><ul><li>报错一：<code>TypeError: Cannot set property ‘lastIndex’ of undefined</code></li><li>报错二：<code>Permission denied (publickey).</code></li><li>报错三：<code>Error: ERROR: Repository not found. fatal: Could not read from remote repository.</code><a id="more"></a></li></ul><h4 id="报错一：TypeError-Cannot-set-property-‘lastIndex’-of-undefined"><a href="#报错一：TypeError-Cannot-set-property-‘lastIndex’-of-undefined" class="headerlink" title="报错一：TypeError: Cannot set property ‘lastIndex’ of undefined"></a>报错一：TypeError: Cannot set property ‘lastIndex’ of undefined</h4><p>问题描述：使用<code>hexo g</code> 报错</p><blockquote><p>TypeError: Cannot set property ‘lastIndex’ of undefined</p></blockquote><p><img src="http://img.wanglixia.top/hexo-coding-github-%E6%8A%A5%E9%94%99%E9%9B%86%E9%94%A61.png" alt="hexo-coding-github-报错集锦"><br>问题处理：在hexo中的<code>_config.yml</code> 文件中的高亮功能设置错了，不是主题的<code>_config.yml</code>，其中的 auto_detect 应该设置为 false。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure></p><p>改过之后再执行就好了。</p><h4 id="报错二：-Permission-denied-publickey"><a href="#报错二：-Permission-denied-publickey" class="headerlink" title="报错二： Permission denied (publickey)."></a>报错二： Permission denied (publickey).</h4><p>问题处理：<br>第一步：创建SSH Key。windows下的目录<code>C:\Users\用户名.ssh</code>，看看有没有.ssh目录，，如果有，再看看这个目录下有没有<code>id_rsa<code>和</code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"ne_lucifer@163.com"</span></span><br></pre></td></tr></table></figure></p><p>你需要把邮件地址换成你自己的邮件地址，然后点击回车，使用默认值即可。<br>第二步：登录Github（登录后路径<code><a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a></code>）或者Coding(登录后路径<code></code>)，按如下步骤操作，用记事本打开<code>id_rsa.pub</code>，全选，把里面的内容粘贴到公钥内容里，title随便起一个<br><img src="http://img.wanglixia.top/hexo-coding-github-%E6%8A%A5%E9%94%99%E9%9B%86%E9%94%A62-1.png" alt="hexo-coding-github-报错集锦2-1"><br><img src="http://img.wanglixia.top/hexo-coding-github-%E6%8A%A5%E9%94%99%E9%9B%86%E9%94%A62-2.png" alt="hexo-coding-github-报错集锦2-2"></p><h4 id="报错三：-Error-ERROR-Repository-not-found-fatal-Could-not-read-from-remote-repository"><a href="#报错三：-Error-ERROR-Repository-not-found-fatal-Could-not-read-from-remote-repository" class="headerlink" title="报错三： Error: ERROR: Repository not found. fatal: Could not read from remote repository."></a>报错三： Error: ERROR: Repository not found. fatal: Could not read from remote repository.</h4><p>问题描述：使用<code>hexo d</code>部署项目到pages服务时报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: ERROR: Repository not found.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (F:\WorkSpaces\hexo\blog\node_modules\hexo-util\lib\spawn.js:37:17)</span><br><span class="line">    at ChildProcess.emit (events.js:182:13)</span><br><span class="line">    at ChildProcess.cp.emit (F:\WorkSpaces\hexo\blog\node_modules\cross-spawn\lib\enoent.js:40:29)</span><br><span class="line">    at maybeClose (internal/child_process.js:962:16)</span><br><span class="line">    at Socket.stream.socket.on (internal/child_process.js:381:11)</span><br><span class="line">    at Socket.emit (events.js:182:13)</span><br><span class="line">    at Pipe._handle.close (net.js:606:12)</span><br></pre></td></tr></table></figure></p><p>查看远端有没有这个分支；<br>使用<code>ssh -T <a href="mailto:git@git.coding.net" target="_blank" rel="noopener">git@git.coding.net</a></code>命令，会出现下面信息，输入yes然后回车即可部署。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;git.coding.net (118.25.166.124)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:这块是一串编码.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> coding </tag>
            
            <tag> next </tag>
            
            <tag> gitalk </tag>
            
            <tag> 报错 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记使用hexo搭建个人博客（三）</title>
      <link href="/hexo-coding-github-3.html"/>
      <url>/hexo-coding-github-3.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;使用hexo+next+github/coding+gitalk添加博客评论系统,以及hexo+next+码云+issue，这里使用的是next主题，如有问题，可以在博客下方评论。本文内容如下：</p><ul><li>使用gitalk为博客添加评论功能、</li><li>vscode 使用七牛云做图床、 </li><li>Hexo Next主题SEO优化、</li><li>Hexo 添加RSS订阅<a id="more"></a><h2 id="next主题添加gitalk"><a href="#next主题添加gitalk" class="headerlink" title="next主题添加gitalk"></a>next主题添加gitalk</h2></li></ul><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>在使用gitalk作为评论系统之前，需要在github上注册新的应用； <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">注册GitHub应用链接</a>。<br>按如下描述填写:<br><img src="http://img.wanglixia.top/hexo-coding-github-3-github%E6%B3%A8%E5%86%8C%E5%BA%94%E7%94%A8.png" alt="github注册应用"><br>填写完成后，点击绿色按钮，跳转到一下页面，<br>可以看到<code>Client ID</code>和<code>Client Secret</code>，后面会用到。<br><img src="http://img.wanglixia.top/hexo-coding-github-3-github%E6%B3%A8%E5%86%8C%E5%BA%94%E7%94%A8%E4%BF%9D%E5%AD%98%E5%90%8E.png" alt="github注册应用保存后跳转的页面"><br>在项目目录下执行如下命令<code>npm install gitalk –save</code> 安装<code>gitalk</code>；</p><h3 id="修改的内容"><a href="#修改的内容" class="headerlink" title="修改的内容"></a>修改的内容</h3><h4 id="新建gitalk-swig；"><a href="#新建gitalk-swig；" class="headerlink" title="新建gitalk.swig；"></a>新建<code>gitalk.swig</code>；</h4><p>路径<code>themes/next/layout/_third-party/comments/gitalk.swig</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var gitalk = new Gitalk(&#123;</span><br><span class="line">          clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;,</span><br><span class="line">          clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;,</span><br><span class="line">          repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;,</span><br><span class="line">          owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;,</span><br><span class="line">          admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;],</span><br><span class="line">          id: location.pathname,</span><br><span class="line">          distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(&apos;gitalk-container&apos;)           </span><br><span class="line">       &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="修改comments-swig"><a href="#修改comments-swig" class="headerlink" title="修改comments.swig"></a>修改<code>comments.swig</code></h4><p>路径<code>themes/next/layout/_partials/comments.swig</code>，在最后一个<code>div</code>里面加上如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line">    &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h4 id="修改index-swig"><a href="#修改index-swig" class="headerlink" title="修改index.swig"></a>修改<code>index.swig</code></h4><p>路径<code>themes/next/layout/_third-party/comments/index.swig</code>，在最后一行加上如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="新建gitalk-styl"><a href="#新建gitalk-styl" class="headerlink" title="新建gitalk.styl"></a>新建<code>gitalk.styl</code></h4><p>路径<code>themes/next/source/css/_common/components/third-party/gitalk.styl</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.gt-header a, .gt-comments a, .gt-popup a</span><br><span class="line">  border-bottom: none;</span><br><span class="line">.gt-container .gt-popup .gt-action.is--active:before</span><br><span class="line">  top: 0.7em;</span><br></pre></td></tr></table></figure></p><h4 id="修改third-party-styl"><a href="#修改third-party-styl" class="headerlink" title="修改third-party.styl"></a>修改<code>third-party.styl</code></h4><p>路径<code>themes/next/source/css/_common/components/third-party/gitalk.styl</code>，在最后一行加上如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure></p><h4 id="修改文件-config-yml"><a href="#修改文件-config-yml" class="headerlink" title="修改文件_config.yml"></a>修改文件<code>_config.yml</code></h4><p>路径<code>themes/next/_config.yml</code>，注意是主题的配置文件，增加内容如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  githubID:</span> <span class="string">nelucifer</span>  <span class="comment"># 例：nelucifer</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">nelucifer.github.io</span>   <span class="comment"># 存储你评论 issue 的 Github 仓库名（建议直接用 GitHub Page 的仓库名） 例：nelucifer.github.io </span></span><br><span class="line"><span class="attr">  ClientID:</span> <span class="string">这块填注册Github应用成功之后的ClientID</span></span><br><span class="line"><span class="attr">  ClientSecret:</span> <span class="string">注册Github应用成功之后的ClientSecret</span></span><br><span class="line">  <span class="comment">#owner: 'Github 用户名',</span></span><br><span class="line"><span class="attr">  adminUser:</span> <span class="string">['nelucifer']</span> <span class="comment">#指定可初始化评论账户，Github仓库的管理员，可以有多个</span></span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#id: 'window.location.pathname' #页面的唯一标识，gitalk根据这个标识自动创建的issue的标签,此处使用页面的相对路径作为标识</span></span><br></pre></td></tr></table></figure></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>&emsp;&emsp;在使用gitalk作为评论系统的时候，参考了以下文章，特此添加链接，表示感谢：</p><ul><li><a href="https://blog.csdn.net/hyb612/article/details/78299971" target="_blank" rel="noopener">hexo 博客next主题集成gitment或者gitalk评论系统</a><br></li><li><a href="https://blog.csdn.net/dataiyangu/article/details/84961965" target="_blank" rel="noopener">hexo next主题深度优化(五)，评论系统换成gittalk</a></li></ul><h2 id="vscode-七牛云"><a href="#vscode-七牛云" class="headerlink" title="vscode + 七牛云"></a>vscode + 七牛云</h2><p>现在使用七牛云做图床需要已经备案的域名，测试域名不能用啦。</p><h3 id="准备-1"><a href="#准备-1" class="headerlink" title="准备"></a>准备</h3><ul><li>下载vscode，<a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">这儿是下载链接</a></li><li>七牛云，<a href="https://developer.qiniu.com/" target="_blank" rel="noopener">传送门</a><h4 id="安装七牛云插件"><a href="#安装七牛云插件" class="headerlink" title="安装七牛云插件"></a>安装七牛云插件</h4></li><li>安装插件：<code>qiniu-upload-image</code></li><li>文件&gt;首选项&gt;设置，在右侧setting.json填写自己的配置覆盖默认配置。配置文件如下，使用的配置是七牛云里面的【密钥管理】：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 一个有效的七牛 AccessKey 签名授权。</span><br><span class="line">  &quot;qiniu.access_key&quot;: &quot;密钥管理里面的AK&quot;,</span><br><span class="line"></span><br><span class="line">  // 七牛图片上传空间。</span><br><span class="line">  &quot;qiniu.bucket&quot;: &quot;weyoung-pub&quot;,</span><br><span class="line"></span><br><span class="line">  // 七牛图床域名。</span><br><span class="line">  &quot;qiniu.domain&quot;: &quot;自己配置的图床域名，使用二级域名就行&quot;,</span><br><span class="line"></span><br><span class="line">  // 七牛图片上传工具开关</span><br><span class="line">  &quot;qiniu.enable&quot;: true,</span><br><span class="line"></span><br><span class="line">  // 七牛图片上传路径，参数化命名。</span><br><span class="line">  &quot;qiniu.remotePath&quot;: &quot;$&#123;fileName&#125;-$&#123;dateTime&#125;&quot;,</span><br><span class="line"></span><br><span class="line">  // 一个有效的七牛 SecretKey 签名授权。</span><br><span class="line">  &quot;qiniu.secret_key&quot;: &quot;密钥管理里面的SK&quot;,</span><br><span class="line">  &quot;files.autoSave&quot;: &quot;afterDelay&quot;,</span><br><span class="line">  &quot;terminal.integrated.shell.windows&quot;: &quot;C:\\Windows\\System32\\cmd.exe&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用快捷键"><a href="#使用快捷键" class="headerlink" title="使用快捷键"></a>使用快捷键</h4><blockquote><p>粘贴图片路径上传：SHIFT + P<br>直接选择图片上传：SHIFT + O</p></blockquote><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>Ctrl+P 输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ext install qiniu-upload-image</span><br></pre></td></tr></table></figure></p><h4 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h4><h2 id="Hexo-Next-主题SEO优化"><a href="#Hexo-Next-主题SEO优化" class="headerlink" title="Hexo Next 主题SEO优化"></a>Hexo Next 主题SEO优化</h2><h3 id="SEO-？"><a href="#SEO-？" class="headerlink" title="SEO ？"></a>SEO ？</h3><p>汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。</p><h3 id="针对百度搜索引擎的优化"><a href="#针对百度搜索引擎的优化" class="headerlink" title="针对百度搜索引擎的优化"></a>针对百度搜索引擎的优化</h3><h4 id="1-添加百度sitemap，生成sitemap文件"><a href="#1-添加百度sitemap，生成sitemap文件" class="headerlink" title="1. 添加百度sitemap，生成sitemap文件"></a>1. 添加百度sitemap，生成sitemap文件</h4><p>安装两个插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save-dev</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure></p><p>上面的是传统的sitemap，下面的是百度专有的sitemap。<br>测试是否安装成功。使用命令<code>hexo s</code>本地预览。<br>本地预览：[<a href="http://localhost:4000/sitemap.xml]http://localhost:4000/sitemap.xml" target="_blank" rel="noopener">http://localhost:4000/sitemap.xml]http://localhost:4000/sitemap.xml</a> 和 [<a href="http://localhost:4000/baidusitemap.xml]http://localhost:4000/baidusitemap.xml" target="_blank" rel="noopener">http://localhost:4000/baidusitemap.xml]http://localhost:4000/baidusitemap.xml</a> 显示sitemap文件内容。</p><h4 id="2-注册百度搜索资源工具"><a href="#2-注册百度搜索资源工具" class="headerlink" title="2. 注册百度搜索资源工具"></a>2. 注册百度搜索资源工具</h4><p>地址：<a href="https://ziyuan.baidu.com/" target="_blank" rel="noopener">https://ziyuan.baidu.com/</a><br>添加网站之后，需要验证，验证方式有<code>文件验证</code>、<code>HTML标签验证</code>、<code>CNAME验证</code>。<br>网上的例子：使用<code>文件验证</code>进行验证。</p><ul><li>下载验证文件，放到博客项目的<code>source</code>文件夹下，使用<code>hexo g -d</code>，部署到自己的网站上；</li><li>部署之后，在站长工具页面点击验证，能够访问证明验证成功；</li><li>然后点击【完成验证】按钮，为保持验证通过的状态,成功验证后请不要删除HTML文件。</li></ul><p><strong>我使用这个验证失败，hexo会为文件加上一些样式，验证好几次验证不通过</strong></p><p>使用<code>HTML标签验证</code>进行验证。我使用的是<code>Hexo + NexT</code>。</p><ul><li>在<code>themes/next/layout/_partials/head.swig</code>文件中，修改meta标签为站长工具里面给出的标签。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.baidu_site_verification %&#125;</span><br><span class="line">  &lt;meta name=&quot;baidu-site-verification&quot; content=&quot;这块修改&quot; /&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ul><p>或者在 <code>themes/next/_config.yml</code> 添加或者修改，<strong>注意格式</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度搜索引擎优化</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> <span class="string">站长工具里面给出的标签</span></span><br></pre></td></tr></table></figure><ul><li>在<code>themes/next/_config.yml</code>中将<figure class="highlight plain"><figcaption><span>false``` 改为<code>true</code></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* 使用&lt;code&gt;hexo g -d&lt;/code&gt;，部署到自己的网站上，如果不清楚部署的可以看前两篇文章；</span><br><span class="line">* 然后点击【完成验证】按钮，等待百度的审核结果</span><br><span class="line"></span><br><span class="line">#### 3. 添加robots，方便搜索蜘蛛进行检索</span><br><span class="line">&amp;emsp;&amp;emsp;百度百科：robots是网站跟爬虫间的协议，用简单直接的txt格式文本方式告诉对应的爬虫被允许的权限，也就是说robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。</span><br><span class="line"></span><br><span class="line">新建&lt;code&gt;robots.txt&lt;/code&gt;文件，添加以下文件内容，把&lt;code&gt;robots.txt&lt;/code&gt;放在的&lt;code&gt;source&lt;/code&gt;文件下。</span><br><span class="line">文件内容：</span><br></pre></td></tr></table></figure></li></ul><h1 id="hexo-robots-txt"><a href="#hexo-robots-txt" class="headerlink" title="hexo robots.txt"></a>hexo robots.txt</h1><p>User-agent: * Allow: /<br>Allow: /archives/<br>Allow: /about/<br>Disallow: /js/<br>Disallow: /css/<br>Disallow: /fonts/<br>Disallow: /images/</p><p>Sitemap: <a href="http://www.wanglixia.top/sitemap.xml">http://www.wanglixia.top/sitemap.xml</a><br>Sitemap: <a href="http://www.wanglixia.top/baidusitemap.xml">http://www.wanglixia.top/baidusitemap.xml</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">在百度站长工具-【链接提交】中填写数据文件地址并提交。</span><br><span class="line"></span><br><span class="line">#### 4. 优化结构 </span><br><span class="line">这个我不懂，参考资料: 作者：浪子燕青啦啦啦 [HEXO SEO 高级优化](https://blog.csdn.net/lzy98/article/details/81140704)</span><br><span class="line">seo搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，于是，我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下：</span><br><span class="line">```yml</span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://www.wanglixia.top/  #你的域名</span><br><span class="line">root: /</span><br><span class="line">#permalink: :year/:month/:day/:title/  为了利于SEO，改为以下方式</span><br><span class="line">permalink: :title.html</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></p><p>首页标题优化，SEO最重要的是你的标题，一般搜索都是搜索你的标题，更改<code>index.swig</code>文件(<code>your-hexo-site\themes\next\layout</code>);</p><h2 id="您的站点有链接未通过https检验"><a href="#您的站点有链接未通过https检验" class="headerlink" title="您的站点有链接未通过https检验"></a>您的站点有链接未通过https检验</h2><p>因为一直使用的是http，百度验证需要使用https。我是使用coding+github双线部署的；</p><ul><li><p>coding 设置强制https访问<br>打开项目，【代码】-&gt;【Pages服务】-&gt;【强制 HTTPS 访问】</p></li><li><p>github 设置强制https访问<br>打开项目，【setting】-&gt;【Enforce HTTPS】的勾打上；<br>完成；访问一下，看下有没有变化啦！</p></li></ul><h2 id="Hexo添加RSS订阅"><a href="#Hexo添加RSS订阅" class="headerlink" title="Hexo添加RSS订阅"></a>Hexo添加RSS订阅</h2><h3 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>在项目根目录的<code>_config.yml</code>添加内容：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">    <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span>                       <span class="comment"># 实现博客订阅功能</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></p><p>使用<code>hexo g -d</code>生成并部署。<br>使用方法：邮件中【新建订阅】，我的订阅地址为：<a href="https://www.wanglixia.top/atom.xml">https://www.wanglixia.top/atom.xml</a>，如图：<br><img src="http://img.wanglixia.top/hexo-coding-github-3-添加RSS订阅-201911123752.png" alt="hexo-coding-github-3-添加RSS订阅-201911123752"></p><p>完成</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> coding </tag>
            
            <tag> next </tag>
            
            <tag> gitalk </tag>
            
            <tag> gitee </tag>
            
            <tag> 码云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm常用命令</title>
      <link href="/npm-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
      <url>/npm-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp; 使用npm的时候，有一些命令及配置常用到，记录。</p><a id="more"></a><h3 id="npm修改源"><a href="#npm修改源" class="headerlink" title="npm修改源"></a>npm修改源</h3><p>&emsp;&emsp;使用npm在npm install时，速度特别慢，因此修改npm的数据源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p><p>修改后，即可进行下载啦，速度快了好多~~</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>读书笔记之陀氏-穷人的美德</title>
      <link href="/%E7%9C%8B%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%99%80%E6%B0%8F-%E7%A9%B7%E4%BA%BA%E7%9A%84%E7%BE%8E%E5%BE%B7.html"/>
      <url>/%E7%9C%8B%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%99%80%E6%B0%8F-%E7%A9%B7%E4%BA%BA%E7%9A%84%E7%BE%8E%E5%BE%B7.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;陀氏的《穷人的美德》，摘部分内容于此文中。</p><a id="more"></a><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><h4 id="穷人的美德就是会赚钱"><a href="#穷人的美德就是会赚钱" class="headerlink" title="穷人的美德就是会赚钱"></a>穷人的美德就是会赚钱</h4><ul><li>穷人最重要的美德就是会赚钱，道德就是一个人不该成为其他人的累赘 。</li><li>要爱别人，首先爱自己，因为世界上的一切都是以个人利益为基础的。</li><li>有几个人的表现特别突出，自然招来一些流言蜚语。因为没有流言蜚语，世界就无法存在，千百万人就会像苍蝇一样，因为寂寞无聊而死去。</li></ul><h4 id="用千万件好事去抵一桩小罪"><a href="#用千万件好事去抵一桩小罪" class="headerlink" title="用千万件好事去抵一桩小罪"></a>用千万件好事去抵一桩小罪</h4><ul><li>命定的事总是会实现的，有价值的人将占有他应有的位置，而无价值的人将永远躲进小胡同，躲进他肮脏的小胡同，他喜爱而且正适合于他的小胡同，并且就在那污秽和臭气中，心甘情愿而且愉快地结束他的生命。</li><li>我们每个人都应该对世上一切人和一切事物负责，这一点是毫无疑义的，这不但是因为大家都参与了整个世界的罪恶，也是因为个人本来就应该为世上的一切人和一切事物负责。</li><li>在这种放荡生活里至少有一种固定不变的东西，它甚至是以天性为基础，而不是为幻想所左右的，它犹如血液中永不熄灭的炭火，永远燃烧着，还要燃烧很久很久，随着年龄的增长，或许也不能让它很快熄灭。</li></ul><h4 id="一时糊涂与意志衰退"><a href="#一时糊涂与意志衰退" class="headerlink" title="一时糊涂与意志衰退"></a>一时糊涂与意志衰退</h4><h4 id="天才人物与犯罪的权利"><a href="#天才人物与犯罪的权利" class="headerlink" title="天才人物与犯罪的权利"></a>天才人物与犯罪的权利</h4><ul><li>总而言之，我得出结论，所有这些人，不仅是那些伟大的，就连那些稍微越出常轨的人，也就是说，就连那些稍微能提出点儿什么新见解的人，就其天性来说，必须是罪人–当然，只是在一定程度上，不然，他们就难以越出常轨；而让他们循规蹈矩，不越雷池一步，他们当然不会同意，这又是由于他们的天性，而照我看，他们甚至有责任不同意。</li><li>按照自然规律，人一般可以分作两类：一类是低级的（平凡的），也可以这么说吧。仅仅是一种繁殖同类的材料；另一类是名副其实的人，也就是有天赋或天才，能在自己的社会上发表新见解的人。……第一类人永远是当代的主人，第二类人却是未来的主人。第一类人保全世界，增加人的数量；第二类人则推动世界向前发展，引导它达到自己的目的。无论是这一类人，还是那一类人，都有完全同等的生存权利。</li></ul><h4 id="我杀死的只是原则"><a href="#我杀死的只是原则" class="headerlink" title="我杀死的只是原则"></a>我杀死的只是原则</h4><ul><li>一般说，有新思想的人，即使只是稍微能发表某种新见解的人，通常是生得很少的，甚至少得出奇。明确的只有一点：必须有某种自然法则来正确无误地确定人的出生规律，正确无误地确定分类和区分他们的规律。</li><li>对于一个知识全面、思想深刻的人，痛苦是必然的，既有精神上的痛苦，也有肉体上的痛苦，我觉得，真正的伟人应该察觉到人世间极大地忧虑。</li><li>……“单就这一点来说，我就是一只虱子，因为，第一，现在我认为我是只虱子；第二，因为整整一个月来，我一直在打搅仁慈的上帝，请他作证，说是，我这么做不是为了自己肉体上的享受和满足自己的淫欲，而是有一个让人感到高兴的崇高目的–哈–哈！… …”</li></ul><h4 id="谁能敢作敢为，谁就最最正确"><a href="#谁能敢作敢为，谁就最最正确" class="headerlink" title="谁能敢作敢为，谁就最最正确"></a>谁能敢作敢为，谁就最最正确</h4><ul><li>权力只会给予敢于觊觎并夺取它的人。这里只有一个条件，仅仅一个条件：只要敢作敢为！</li><li>既然我反复自问：我有没有权利掌握权力？–那么，这就是说，我没有权利掌握权力。</li></ul><h4 id="总是希望生命有更大的意义"><a href="#总是希望生命有更大的意义" class="headerlink" title="总是希望生命有更大的意义"></a>总是希望生命有更大的意义</h4><ul><li>他一向认为，单单生存是不够的，他总是希望生命有更大的意义。也许只是由于他抱有希望，当时他才自认为是一个比别人享有更多权利的人吧！</li></ul>]]></content>
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 陀思妥耶夫斯基 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学习jdk1.8-Lambda 表达式 与Collections</title>
      <link href="/2018813214038%E5%AD%A6%E4%B9%A0jdk1-8.html"/>
      <url>/2018813214038%E5%AD%A6%E4%B9%A0jdk1-8.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;直到现在jdk1.8版本已经发布了有近5个年头了。今天做一个浅显的学习和记录，便于后面的查找。如果你也有兴趣，不妨一起交流交流，如有不对之处，还请指点指点…</p><a id="more"></a><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>&emsp;&emsp;看牛逼的代码，到处都是知识点。咱研究研究一些简单的，使用一些示例代码来进行操作。</p><h3 id="Lambda-表达式"><a href="#Lambda-表达式" class="headerlink" title="Lambda 表达式"></a>Lambda 表达式</h3><p>老版本的Java中的排序方式,实现一组字符串按照字典反序排列，排序结果<code>[“peter”,”jany”,”brain”,”anna”,”alex”]</code>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; names = Arrays.asList(<span class="string">"peter"</span>,<span class="string">"anna"</span>,<span class="string">"brain"</span>,<span class="string">"jany"</span>,<span class="string">"alex"</span>);</span><br><span class="line"></span><br><span class="line">Collections.sort(names, <span class="keyword">new</span> Comparator&lt;String&gt;()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String a, String b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b.compareTo(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>Comparator 中 compare方法介绍：<br><img src="http://img.wanglixia.top//Comparator-compare-2018813224649.png" alt="Comparator-compare-2018813224649"><br>Collections 中 sort方法介绍：<br>该方法默认的排序是正序<br><img src="http://img.wanglixia.top//Collections_sort_1-2018813225316.png" alt="Collections_sort_1-2018813225316"><br><img src="http://img.wanglixia.top//Collections_sort_2-2018813225325.png" alt="Collections_sort_2-2018813225325"><br>String的compareTo方法：<br><code>public int compareTo(String anotherString)</code>如果参数字符串等于此字符串，则值为0 ; 如果这个字符串的字典比字符串参数小，则值小于0; 如果此字符串的字典大小超过字符串参数，则值大于0 。<br>Java8中的lambda表达式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(names,(String a, String b) -&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> b.compareTo(a);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>更简单的方式:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(names,(String a, String b) -&gt; b.compareTo(a));</span><br></pre></td></tr></table></figure></p><p>更更简单的方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(names,(a,b) -&gt; b.compareTo(a));</span><br></pre></td></tr></table></figure></p><p>一种不使用lambda表达式的方法，<code>reverseOrder()</code> 以反字典（字母顺序）排列阵列：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(names, Comparator.reverseOrder());</span><br></pre></td></tr></table></figure></p><h3 id="Stream-接口"><a href="#Stream-接口" class="headerlink" title="Stream 接口"></a>Stream 接口</h3><p>&emsp;&emsp;Java8 中的 Stream 是对集合（Collection）对象功能的增强，它专注于对集合对象进行各种非常便利、高效的聚合操作（aggregate operation），或者大批量数据操作 (bulk data operation)。Stream API 借助于同样新出现的 Lambda 表达式，极大的提高编程效率和程序可读性，串行Stream上的操作是在一个线程中依次完成，而并行Stream则是在多个线程上同时执行。</p><ol><li>创建一个stream的方式,<code>Collection.stream()</code>创建了一个串行的stream；<code>Collection.parallelStream()</code>创建了一个并行的stream；：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; stringCollection = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">stringCollection.add(<span class="string">"ddd"</span>);</span><br><span class="line">stringCollection.add(<span class="string">"ccc"</span>);</span><br><span class="line">stringCollection.add(<span class="string">"bbb"</span>);</span><br><span class="line">stringCollection.add(<span class="string">"aaa"</span>);</span><br><span class="line">Stream&lt;String&gt; stream = stringCollection.stream();</span><br><span class="line">Stream&lt;String&gt; stringStream = stringCollection.parallelStream();</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk1.8 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows server 2012 的一些使用记录</title>
      <link href="/windows-server-2012.html"/>
      <url>/windows-server-2012.html</url>
      <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>windows server 2012 的一些操作记录。</p><ul><li><a href="#关闭IIS服务器">关闭IIS服务器</a></li></ul><a id="more"></a><h3 id="关闭IIS服务器"><a href="#关闭IIS服务器" class="headerlink" title="关闭IIS服务器"></a>关闭IIS服务器</h3><p>&emsp;&emsp;win+r输入services.msc打开服务，找到 <code>World Wide Web Publishing Service</code> 选择停止，用不到的话，选择禁用，然后确定；<br><img src="http://img.wanglixia.top//windows_server_stop_w3svc-201872323230.png" alt="windows_server_stop_w3svc-201872323230"></p>]]></content>
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Oracle中的常用函数</title>
      <link href="/Oracle%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0.html"/>
      <url>/Oracle%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0.html</url>
      <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>整理一些oracle中最常用的方法，以作记录，便于使用时进行查找。（持续更新…）</p><h2 id="常用的一些函数"><a href="#常用的一些函数" class="headerlink" title="常用的一些函数"></a>常用的一些函数</h2><h3 id="nvl函数的使用-nvl-paramA-paramA-用于返回一个不为null的值；"><a href="#nvl函数的使用-nvl-paramA-paramA-用于返回一个不为null的值；" class="headerlink" title="nvl函数的使用:nvl(paramA,paramA)用于返回一个不为null的值；"></a>nvl函数的使用:nvl(paramA,paramA)用于返回一个不为null的值；</h3><pre><code>1. 有一个参数为null的情况，返回不为null的那个值；下例返回的就是 &lt;code&gt;1&lt;/code&gt;;<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> nvl(<span class="number">1</span>, <span class="literal">null</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure>2. 两个参数都为null的情况，返回值为null；下例返回的结果就是&lt;code&gt;null&lt;/code&gt;;<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> nvl(<span class="literal">null</span>,<span class="literal">null</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure>3. 两个参数都不为null的情况，返回第一个参数；下例返回的结果就是&lt;code&gt;1&lt;/code&gt;;<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> nvl(<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure></code></pre><p><strong>注意</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> nvl(<span class="string">''</span>,<span class="number">0.08</span>) <span class="keyword">from</span> dual;<span class="comment">--在oracle中返回的是.08</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">decode</span>(<span class="string">''</span>,<span class="literal">null</span>,<span class="number">0.08</span>) <span class="keyword">from</span> dual;<span class="comment">--返回0.08</span></span><br></pre></td></tr></table></figure><p>### </p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>winsows10环境下解决vmware中windows server服务器ping不通</title>
      <link href="/2018-07-22-vmware-ping.html"/>
      <url>/2018-07-22-vmware-ping.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;使用vmware安装了windows server 2012，安装完毕之后，想从宿主机上远程到虚拟机中，发现本地网络和虚拟机网络不能ping通，试用了一个办法，可以ping通了，特意记录一下。<br><a id="more"></a></p><h3 id="环境参考"><a href="#环境参考" class="headerlink" title="环境参考"></a>环境参考</h3><ul><li>VMware® Workstation 14 Pro：14.1.1 build-7528167</li><li>宿主机：windows 10 </li><li>虚拟机：windows server 2012</li></ul><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ul><li>下面是宿主机的ip，即现在使用的是本地的主机：<br><img src="/images/blog/宿主机的ip.png" alt="宿主机的ip地址"></li><li>打开VMware-编辑-虚拟网络编辑器，选择右下角更改设置，设置NAT模式的子网地址跟主机一样，这里设置为192.168.2.0<br><img src="/images/blog/vmware的子网地址.png" alt="vmware的子网地址"></li><li>NAT设置 网关IP 也为192.168.2.***，DHCP的起始IP和结束IP的前三段也设置成跟主机一样的。然后就可以主机就可以ping通虚拟机了。</li></ul><h3 id="在远程的过程中还有一个问题"><a href="#在远程的过程中还有一个问题" class="headerlink" title="在远程的过程中还有一个问题"></a>在远程的过程中还有一个问题</h3><p>&emsp;&emsp;就是在远程的时候提示“出现身份验证错误，要求的函数不受支持…可能是由于CredSSP加密Oracle修正”，错误如下：<br><img src="/images/blog/CredSSP加密Oracle修正.png" alt="要求的函数不受支持"><br>处理这个问题是应该在<b style="color='red'">本地机器</b>进行修改，修改的方法是：</p><ul><li>win+r键打开运行框，然后输入<code>gpedit.msc</code>，回车，打开本地组策略编辑器；</li><li>在 “计算机配置-管理模板-系统-凭据分配”中 找到允许Oracle修正，之后双击，打开如下界面，点击已启用，保护级别选择易受攻击，保存即可。<br><img src="/images/blog/20180722050250.png" alt="修改允许Oracle修正"></li></ul><hr><h3 id="修正-2018-07-22-22-10"><a href="#修正-2018-07-22-22-10" class="headerlink" title="修正 2018-07-22 22:10"></a>修正 2018-07-22 22:10</h3><p>&emsp;&emsp;上述方法会导致虚拟机不能联网，以下能够<b>保证虚拟机上网，且主机能够远程虚拟机</b>的办法。本次不使用虚拟机进行网络设置，改为使用windows自带的网络设置。<br>该方法，主机修改为静态IP。首先，在主机命令行中执行<code>ipconfig/all</code>命令，查看本机IP，默认网关、以及DNS服务器地址。再将本机TCP/IPv4设置为以下属性：<br><img src="/images/blog/主机的静态ip设置.png" alt="主机的静态ip设置.png"><br>主机TCP/IPv4共享属性：<br><img src="/images/blog/主机的静态ip共享设置.png" alt="主机的静态ip共享设置.png"><br>即可。</p>]]></content>
      
      <categories>
          
          <category> vmware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记使用hexo搭建个人博客（二）</title>
      <link href="/hexo-coding-github-2.html"/>
      <url>/hexo-coding-github-2.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;使用hexo+github/coding免费搭建个人博客，本文记录hexo博客的一些个性化配置。包括：</p><ul><li>修改主题、</li><li>头像、</li><li>评论、</li><li>搜索、</li><li>DaoVoice在线联系、</li><li>顶部加载条、</li><li>访问量统计、</li><li>第三方统计、<a id="more"></a></li></ul><h2 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h2><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>下载next主题，完成后，修改站点配置文件的 theme: landscape 为 theme: next，然后执行 hexo s 预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="增加头像并加旋转特效"><a href="#增加头像并加旋转特效" class="headerlink" title="增加头像并加旋转特效"></a>增加头像并加旋转特效</h3><h3 id="增加统计字数、阅读时长"><a href="#增加统计字数、阅读时长" class="headerlink" title="增加统计字数、阅读时长"></a>增加统计字数、阅读时长</h3><p>&emsp;&emsp;在主题配置文件themes/next/_config.yml中找到以下内容：将wordcount、min2read修改为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  min2read:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  totalcount:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>本地完成以上配置之后还需要增加<code>hexo-wordcount</code>插件，在命令行中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>安装完毕之后，就可以预览了效果了。自定义样式，如<code>字数统计:<strong><em></em></strong></code>修改为<code>字数统计:字</code>,在themes/next/layout/_macro/post.swig中找到以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p><code>阅读时长:<strong><em></em></strong></code>修改为<code>阅读时长:分钟</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;&#123; min2read(post.content) &#125;&#125; </span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>即可。</p><h3 id="hexo增加七牛云图床及上传"><a href="#hexo增加七牛云图床及上传" class="headerlink" title="hexo增加七牛云图床及上传"></a>hexo增加七牛云图床及上传</h3><p>参考自： <a href="https://blog.csdn.net/qq_32454537/article/details/79482850" target="_blank" rel="noopener">使用VSCode+七牛云图床插件+自定义快捷键配置Hexo博文编写环境</a></p><p>工具：</p><ul><li>使用VSCode进行博客编写；</li><li><code>qiniu-upload-image</code>插件，需要进行配置；</li><li><code>vscode-Hexo</code>插件；</li><li>使用<a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云,点击访问</a>作为图床，这个需要自己申请和认证哈，我的认证花了两天时间~~</li></ul><p><img src="http://img.wanglixia.top//七牛云新建存储空间-201872223148.png" alt="七牛云新建存储空间-201872223148"></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记使用hexo搭建个人博客（一）</title>
      <link href="/hexo-coding-github-1.html"/>
      <url>/hexo-coding-github-1.html</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;作为一个码农来说，笔记是必不可少的，一是为了记录，二是为了分享。特意将使用hexo+github/coding免费搭建个人博客的过程也记录了一下，网上类似的文章太多了，有些配置的版本不一样，本文记录hexo环境的搭建及部署到coding/github上.</p><a id="more"></a><h3 id="Hexo是什么？"><a href="#Hexo是什么？" class="headerlink" title="Hexo是什么？"></a>Hexo是什么？</h3><p>&emsp;&emsp;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>&emsp;&emsp;<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">详情可参考Hexo官方文档</a></p><h3 id="环境及版本"><a href="#环境及版本" class="headerlink" title="环境及版本"></a>环境及版本</h3><ul><li>系统: windows 10 </li><li>git: version 2.9.0.windows.1</li><li>node: v10.6.0</li><li>hexo: 3.7.1</li><li>hexo-cli: 1.1.0</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>到此步骤已经认为你已经安装了git和node.js。</p><ol><li>创建一个目录，比如在E盘根目录下，创建一个hexo文件夹，使用命令行进入此文件夹，(也可以进入此文件夹，右键Git Bash Here)输入：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>命令执行后的效果参考：</p><p><img src="http://img.wanglixia.top/hexo_install-20189921255.png" alt="hexo命令执行完毕效果"></p><ol start="2"><li>初始化项目，输入hexo init 项目名，如hexo init blog,将会自动生成blog目录，并自动生成一些目录及文件；</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>   <img src="http://img.wanglixia.top/hexo_install_2-201915162144.png" alt="hexo_install_2-201915162144"><br>   <img src="http://img.wanglixia.top/hexo_install_3-20191516220.png" alt="hexo_install_3-20191516220"></p><ol start="3"><li>现在可以开始预览了,会出现提示在网址<a href="http://localhost:4000/预览" target="_blank" rel="noopener">http://localhost:4000/预览</a></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>&emsp;&emsp;在项目根目录，有个_config.yml,这个是站点配置文件，一些重要的配置都是在这里进行的。 详细的通用配置就参考官网吧，就不重复说了。下面主要记录一下一些个性化的功能。</p><ul><li>常用命令：<ul><li>hexo clean ：清除缓存文件 (db.json) 和已生成的静态文件 (public)。</li><li>hexo g ：生成静态文件。</li><li>hexo s ：本地发布预览。</li><li>hexo d ：远程发布。</li></ul></li></ul><h3 id="在coding上部署"><a href="#在coding上部署" class="headerlink" title="在coding上部署"></a>在coding上部署</h3><p>&emsp;&emsp;访问<a href="https://coding.net/" target="_blank" rel="noopener">coding官网</a>，注册账号，注册时的用户名，就是你访问自己博客地址的主体部分，注意点哦。</p><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目:"></a>创建项目:</h4><p>   <img src="http://img.wanglixia.top/hexo_install_new_proj-201915162221.png" alt="hexo_install_new_proj-201915162221"></p><h4 id="查看静态pages服务，Coding-Pages-已经运行在-https-你的用户名-coding-me时，说明你配置成功了，我这边是解析自己的域名，略有点不一样。如下图所示："><a href="#查看静态pages服务，Coding-Pages-已经运行在-https-你的用户名-coding-me时，说明你配置成功了，我这边是解析自己的域名，略有点不一样。如下图所示：" class="headerlink" title="查看静态pages服务，Coding Pages 已经运行在 https://[你的用户名].coding.me时，说明你配置成功了，我这边是解析自己的域名，略有点不一样。如下图所示："></a>查看静态pages服务，Coding Pages 已经运行在 https://[你的用户名].coding.me时，说明你配置成功了，我这边是解析自己的域名，略有点不一样。如下图所示：</h4><p>   <img src="http://img.wanglixia.top/hexo_install_static_pages-201915162251.png" alt="hexo_install_static_pages-201915162251"></p><h4 id="接下来就要开始准备把项目发布到coding上面了，需要先获取SSHKey，然后修改站点配置文件为coding的项目对应的ssh地址；"><a href="#接下来就要开始准备把项目发布到coding上面了，需要先获取SSHKey，然后修改站点配置文件为coding的项目对应的ssh地址；" class="headerlink" title="接下来就要开始准备把项目发布到coding上面了，需要先获取SSHKey，然后修改站点配置文件为coding的项目对应的ssh地址；"></a>接下来就要开始准备把项目发布到coding上面了，需要先获取SSHKey，然后修改站点配置文件为coding的项目对应的ssh地址；</h4><p><em>设置Git的user name和email：</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的git用户名，可以随便起一个"</span></span><br><span class="line">git config --global user.email <span class="string">"你的邮箱地址"</span></span><br></pre></td></tr></table></figure><p><em>执行以下命令，查看是否已经有了ssh密钥：cd ~/.ssh，输入第二条命令之后，连续3次enter</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱地址"</span></span><br></pre></td></tr></table></figure><p><em>在<code>C:\Users\你的电脑用户名.ssh</code> 目录下，会有两个文件id_rsa和id_rsa.pub，使用记事本打开id_rsa.pub，复制里面的值，然后浏览器打开你的coding到如下页面，将复制的内容粘贴到公钥内容的文本框里面，点击保存。如下图：</em><br><img src="http://img.wanglixia.top/hexo_install_ssh_key1-201915162310.png" alt="hexo_install_ssh_key1-201915162310"><br><em>测试公钥是否配置成功：<code>ssh -T <a href="mailto:git@git.coding.net" target="_blank" rel="noopener">git@git.coding.net</a></code>，输入之后，会提示你是否确认，输入yes，回车；提示你通过ssh协议认证。</em><br><em>修改你的站点配置文件，这个是在你的本地配置远程服务器地址，hexo项目根目录下的_config.yml，这种文件的格式非常严格，多一个空格就可能会报错。</em></p><p>码云和GitHub双线部署的配置，站点配置文件<code>_config.yml</code>下修改配置，修改为自己的仓库：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.coding.net:weyoung/weyoung.coding.me.git,master</span></span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:nelucifer/nelucifer.github.io.git,master</span></span><br></pre></td></tr></table></figure></p><p><em>执行命令,就将你的博客部署到coding上了，如果要解析为自己的域名的话，可以百度、google查看步骤。</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><em>github 的部署和在coding上部署基本是一样的</em> </p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PowerDesigner导出PDM和rtf文件</title>
      <link href="/PowerDesigner-export-PDM-rtf.html"/>
      <url>/PowerDesigner-export-PDM-rtf.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;power designer是能进行数据库设计的强大的软件，是一款开发人员常用的数据库建模工具。使用它可以分别从概念数据模型(Conceptual Data Model)和物理数据模型(Physical Data Model)两个层次对数据库进行设计。</p><ul><li>使用PowerDesigner导出rtf文件和PDM<a id="more"></a><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2></li><li>PowerDesigner 16.5<h3 id="已有pdm导出rtf"><a href="#已有pdm导出rtf" class="headerlink" title="已有pdm导出rtf"></a>已有pdm导出rtf</h3>打开pdm后，右键点击后选择New-&gt;Report。<br><img src="http://img.wanglixia.top/pdm-新建report-20191517453.png" alt="pdm-新建report-20191517453"></li></ul><p>出现以下界面，里面的结构可以按你的要求自由组合。<br><img src="http://img.wanglixia.top/pdm-新建report-1-201915174539.png" alt="pdm-新建report-1-201915174539"><br><img src="http://img.wanglixia.top/pdm-新建report-2-201915175423.png" alt="pdm-新建report-2-201915175423"><br>一般将名称、代码、数据类型、注释<br><img src="http://img.wanglixia.top/pdm-新建report-3-201915175526.png" alt="pdm-新建report-3-201915175526"><br>选择导出即可。<br><img src="http://img.wanglixia.top/pdm-新建report-4-20191518343.png" alt="pdm-新建report-4-20191518343"><br><img src="http://img.wanglixia.top/pdm-新建report-5-2019151867.png" alt="pdm-新建report-5-2019151867"></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> PowerDesigner </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信授权登录(微信订阅号使用测试账号)</title>
      <link href="/wechat-login.html"/>
      <url>/wechat-login.html</url>
      <content type="html"><![CDATA[<p>微信作为现在最火的社交App，使用微信扫描二维码登录也更加方便和快捷，也不至于注册一大堆账号，想起来都烦。使用花生壳+微信测试账号+微信公众号+java做一个demo熟悉下微信开发。<br><a id="more"></a><br>demo地址：<a href="https://gitee.com/nelucifer/wxlogin-demo.git" target="_blank" rel="noopener">wxlogin-demo</a><br><em>Updated By Mr.wang 2019-1-4： 这个文章是在2017-09-17 在博客园写的，边写代码边写博客，记录的不够详细，还请包涵。微信把接口好像调整了，订阅号现在没有这个测试登录的权限了，但是整体实现应该是没有区别的。</em></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>花生壳：用来作为内网穿透，以便微信登录接口（需要公网中能够访问到的地址）回调，<a href="http://hsk.oray.com/download/" target="_blank" rel="noopener">花生壳下载链接</a></li><li>微信公众号：设置【授权回调页面域名】；</li><li>微信公众号开发测试账号：<a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="noopener">点击访问申请地址</a><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头；</li></ul><p><img src="http://img.wanglixia.top/网页授权获取用户基本信息_授权回调页面域名-20191423110.png" alt="网页授权获取用户基本信息_授权回调页面域名-20191423110"><br><img src="http://img.wanglixia.top/微信测试账号申请成功后-201914231111.png" alt="微信测试账号申请成功后-201914231111"></p><h3 id="开发demo所需要的jar包"><a href="#开发demo所需要的jar包" class="headerlink" title="开发demo所需要的jar包"></a>开发demo所需要的jar包</h3><p><img src="http://img.wanglixia.top/微信登录-所需要的jar包-201914231314.png" alt="微信登录-所需要的jar包-201914231314"></p><h3 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h3><h4 id="AuthUtil-java"><a href="#AuthUtil-java" class="headerlink" title="AuthUtil.java"></a>AuthUtil.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wanglixia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.DefaultHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述:</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Created by Mr.wang on 2017/9/17 11:57.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String APPID = <span class="string">"这块填appid"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String APPSECRET = <span class="string">"这块是appsecret"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">doGetJson</span><span class="params">(String url)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        JSONObject jsonObject = <span class="keyword">null</span>;</span><br><span class="line">        DefaultHttpClient client = <span class="keyword">new</span> DefaultHttpClient();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        HttpResponse httpResponse = client.execute(httpGet);</span><br><span class="line">        HttpEntity entity = httpResponse.getEntity();</span><br><span class="line">        <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String result = EntityUtils.toString(entity, <span class="string">"UTF-8"</span>);</span><br><span class="line">            jsonObject = JSONObject.fromObject(result);</span><br><span class="line">        &#125;</span><br><span class="line">        httpGet.releaseConnection();</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CallBackServlet-java"><a href="#CallBackServlet-java" class="headerlink" title="CallBackServlet.java"></a>CallBackServlet.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wanglixia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述:</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Created by Mr.wang on 2017/9/17 13:06.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/callBack"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CallBackServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String code = req.getParameter(<span class="string">"code"</span>);</span><br><span class="line">        String url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?"</span> +</span><br><span class="line">                <span class="string">"appid="</span> + AuthUtil.APPID +</span><br><span class="line">                <span class="string">"&amp;secret="</span> + AuthUtil.APPSECRET +</span><br><span class="line">                <span class="string">"&amp;code="</span> + code +</span><br><span class="line">                <span class="string">"&amp;grant_type=authorization_code"</span>;</span><br><span class="line">        JSONObject jsonObject = AuthUtil.doGetJson(url);</span><br><span class="line">        System.out.println(jsonObject.toString());</span><br><span class="line">        String openid = jsonObject.getString(<span class="string">"openid"</span>);</span><br><span class="line">        String token = jsonObject.getString(<span class="string">"access_token"</span>);</span><br><span class="line"><span class="comment">//        String expires_in = jsonObject.getString("expires_in");</span></span><br><span class="line"><span class="comment">//        String refresh_token = jsonObject.getString("refresh_token");</span></span><br><span class="line"><span class="comment">//        String scope = jsonObject.getString("scope");</span></span><br><span class="line">        String infoUrl = <span class="string">"https://api.weixin.qq.com/sns/userinfo?"</span> +</span><br><span class="line">                <span class="string">"access_token="</span> + token +</span><br><span class="line">                <span class="string">"&amp;openid="</span> + openid +</span><br><span class="line">                <span class="string">"&amp;lang=zh_CN"</span>;</span><br><span class="line">        JSONObject userInfo = AuthUtil.doGetJson(infoUrl);</span><br><span class="line">        System.out.println(userInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、使用微信用户信息直接登录，无需注册和绑定</span></span><br><span class="line"><span class="comment">//        req.setAttribute("info", userInfo);</span></span><br><span class="line"><span class="comment">//        req.getRequestDispatcher("/index1.jsp").forward(req, resp);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="WxLogin-java"><a href="#WxLogin-java" class="headerlink" title="WxLogin.java"></a>WxLogin.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wanglixia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述:</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Created by Mr.wang on 2017/9/17 11:17.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/wxLogin"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxLogin</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String backUrl = <span class="string">"http://这儿是你的回调地址，上图填的那个/callBack"</span>;</span><br><span class="line">        String url = <span class="string">"https://open.weixin.qq.com/connect/oauth2/authorize?"</span> +</span><br><span class="line">                <span class="string">"appid="</span> + AuthUtil.APPID +</span><br><span class="line">                <span class="string">"&amp;redirect_uri="</span> + URLEncoder.encode(backUrl) +</span><br><span class="line">                <span class="string">"&amp;response_type=code"</span> +</span><br><span class="line">                <span class="string">"&amp;scope=snsapi_userinfo"</span> +</span><br><span class="line">                <span class="string">"&amp;state=STATE#wechat_redirect"</span>;</span><br><span class="line">        resp.sendRedirect(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Created</span> <span class="attr">by</span> <span class="attr">IntelliJ</span> <span class="attr">IDEA.</span></span></span><br><span class="line"><span class="tag">  <span class="attr">User:</span> <span class="attr">Mr.wang</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Date:</span> <span class="attr">2017</span>/<span class="attr">9</span>/<span class="attr">17</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Time:</span> <span class="attr">11:02</span></span></span><br><span class="line"><span class="tag">  <span class="attr">To</span> <span class="attr">change</span> <span class="attr">this</span> <span class="attr">template</span> <span class="attr">use</span> <span class="attr">File</span> | <span class="attr">Settings</span> | <span class="attr">File</span> <span class="attr">Templates.</span></span></span><br><span class="line"><span class="tag"><span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>$Title$<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"font-size: 40px;text-align: center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/wxLogin"</span>&gt;</span>微信公众授权登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="index1-jsp"><a href="#index1-jsp" class="headerlink" title="index1.jsp"></a>index1.jsp</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Created</span> <span class="attr">by</span> <span class="attr">IntelliJ</span> <span class="attr">IDEA.</span></span></span><br><span class="line"><span class="tag">  <span class="attr">User:</span> <span class="attr">Mr.wang</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Date:</span> <span class="attr">2017</span>/<span class="attr">9</span>/<span class="attr">17</span></span></span><br><span class="line"><span class="tag">  <span class="attr">Time:</span> <span class="attr">11:02</span></span></span><br><span class="line"><span class="tag">  <span class="attr">To</span> <span class="attr">change</span> <span class="attr">this</span> <span class="attr">template</span> <span class="attr">use</span> <span class="attr">File</span> | <span class="attr">Settings</span> | <span class="attr">File</span> <span class="attr">Templates.</span></span></span><br><span class="line"><span class="tag"><span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>$Title$<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>登录成功！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>$&#123;info&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"width: 100px;height: 100px;"</span> <span class="attr">src</span>=<span class="string">"$&#123;info.headimgurl&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="中间遇到的问题："><a href="#中间遇到的问题：" class="headerlink" title="中间遇到的问题："></a>中间遇到的问题：</h3><ul><li>接口回调地址设置错误，这个地址需要是公网中能够访问到的地址，因此需要用花生壳来进行内网映射；</li><li>因为没有微信公众服务号，因此，找了半天，突然想起有个测试账号。</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>慕课网教程：<a href="http://www.imooc.com/learn/713" target="_blank" rel="noopener">http://www.imooc.com/learn/713</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端模板引擎Freemarker的使用（一）</title>
      <link href="/freemarker-1.html"/>
      <url>/freemarker-1.html</url>
      <content type="html"><![CDATA[<blockquote><p>介绍：FreeMarker 是一款 模板引擎： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。 它不是面向最终用户的，而是一个Java类库，是一款程序员可以嵌入他们所开发产品的组件。<br>模板编写为FreeMarker Template Language (FTL)。它是简单的，专用的语言， 不是 像PHP那样成熟的编程语言。 那就意味着要准备数据在真实编程语言中来显示，比如数据库查询和业务运算， 之后模板显示已经准备好的数据。在模板中，你可以专注于如何展现数据， 而在模板之外可以专注于要展示什么数据。</p></blockquote><p>记录Freemarker在项目中的配置与使用<br><a id="more"></a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>框架：Spring+SpringMvc+Mybatis</li><li>Freemarker：<a href="http://freemarker.foofun.cn/" target="_blank" rel="noopener">官网介绍</a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="Maven中需要引入的依赖"><a href="#Maven中需要引入的依赖" class="headerlink" title="Maven中需要引入的依赖"></a>Maven中需要引入的依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- freemarker的版本号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.20<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;freemarker.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="视图解析器，一般在spring-mvc-xml中配置"><a href="#视图解析器，一般在spring-mvc-xml中配置" class="headerlink" title="视图解析器，一般在spring-mvc.xml中配置"></a>视图解析器，一般在spring-mvc.xml中配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ViewResolver For FreeMarker --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.springframework.web.servlet.view.freemarker.FreeMarkerView<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".ftl"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentType"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"requestContextAttribute"</span> <span class="attr">value</span>=<span class="string">"request"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ViewResolver For FreeMarkerConfigurer --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPaths"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">value</span>&gt;</span>/front-end/<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">value</span>&gt;</span>/front-end/main-frame<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">value</span>&gt;</span>/<span class="tag">&lt;/<span class="name">value</span>&gt;</span><span class="comment">&lt;!-- 配置文件路径 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span><span class="comment">&lt;!-- 设置FreeMarker环境属性 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--刷新模板的周期，单位为秒 --&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"default_encoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!--模板的编码格式 --&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span><span class="comment">&lt;!-- 本地化设置 --&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>0.####<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"boolean_format"</span>&gt;</span>true,false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"whitespace_stripping"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"tag_syntax"</span>&gt;</span>auto_detect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"url_escaping_charset"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="前端-ftl文件结构"><a href="#前端-ftl文件结构" class="headerlink" title="前端.ftl文件结构"></a>前端.ftl文件结构</h4><p><img src="http://img.wanglixia.top/Freemarker-1-201914234817.png" alt="Freemarker-1-201914234817"></p><h4 id="Controller-java"><a href="#Controller-java" class="headerlink" title="Controller.java"></a>Controller.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">mav.setViewName(<span class="string">"/main-frame"</span>);</span><br><span class="line"><span class="keyword">return</span> mav;</span><br></pre></td></tr></table></figure><h4 id="公用布局模板拆分"><a href="#公用布局模板拆分" class="headerlink" title="公用布局模板拆分"></a>公用布局模板拆分</h4><p><em>使用freemarker的macro、import、include指令，我们可以将布局模板拆分为如下几个文件</em></p><ul><li>/layout<ul><li>defaultLayout.ftl</li><li>footer.ftl</li><li>header.ftl</li><li>sidebar.ftl<h5 id="defaultLayout-ftl"><a href="#defaultLayout-ftl" class="headerlink" title="defaultLayout.ftl"></a>defaultLayout.ftl</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;#macro layout&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div style=&quot;width: 700px; text-align:center; font-size:30px;&quot;&gt;</span><br><span class="line">        &lt;#include &quot;header.ftl&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;#include &quot;sidebar.ftl&quot;&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;#-- 在这里嵌入main content --&gt;</span><br><span class="line">        &lt;#nested&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;#include &quot;footer.ftl&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;/#macro&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="header-ftl"><a href="#header-ftl" class="headerlink" title="header.ftl"></a>header.ftl</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: #b4efb8;"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="sidebar-ftl"><a href="#sidebar-ftl" class="headerlink" title="sidebar.ftl"></a>sidebar.ftl</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:30%; height:300px; float:left; background-color: #8825ae;"</span>&gt;</span></span><br><span class="line">    sidebar</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="footer-ftl"><a href="#footer-ftl" class="headerlink" title="footer.ftl"></a>footer.ftl</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: #B3D3F3;"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="那么在任何一个使用该布局的页面，我们只要写如下的代码，修改要嵌入到layout中的main-content就好了。"><a href="#那么在任何一个使用该布局的页面，我们只要写如下的代码，修改要嵌入到layout中的main-content就好了。" class="headerlink" title="那么在任何一个使用该布局的页面，我们只要写如下的代码，修改要嵌入到layout中的main content就好了。"></a>那么在任何一个使用该布局的页面，我们只要写如下的代码，修改要嵌入到layout中的main content就好了。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;#-- 引入布局指令的命名空间 --&gt;</span><br><span class="line">&lt;#import &quot;../layout/defaultLayout.ftl&quot; as defaultLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;#-- 调用布局指令 --&gt;</span><br><span class="line">&lt;@defaultLayout.layout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;#-- 将下面这个main content嵌入到layout指令的nested块中 --&gt;</span><br><span class="line">    &lt;div style=&quot;width:70%; height:300px; float:left; background-color: #12c5ae;&quot;&gt;</span><br><span class="line">           main content&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/@defaultLayout.layout&gt;</span><br><span class="line"></span><br><span class="line">&lt;#-- 引入布局指令的命名空间 --&gt;</span><br><span class="line">&lt;#import &quot;../layout/defaultLayout.ftl&quot; as defaultLayout&gt;</span><br><span class="line"> </span><br><span class="line">&lt;#-- 调用布局指令 --&gt;</span><br><span class="line">&lt;@defaultLayout.layout&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;#-- 将下面这个main content嵌入到layout指令的nested块中 --&gt;</span><br><span class="line">    &lt;div style=&quot;width:70%; height:300px; float:left; background-color: #12c5ae;&quot;&gt;</span><br><span class="line">           main content&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/@defaultLayout.layout&gt;</span><br></pre></td></tr></table></figure><h3 id="而且如果要更换布局，比如修改header，也不用每个页面都去改一遍了。这就实现了模板的可复用。"><a href="#而且如果要更换布局，比如修改header，也不用每个页面都去改一遍了。这就实现了模板的可复用。" class="headerlink" title="而且如果要更换布局，比如修改header，也不用每个页面都去改一遍了。这就实现了模板的可复用。"></a>而且如果要更换布局，比如修改header，也不用每个页面都去改一遍了。这就实现了模板的可复用。</h3><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="使用模板拆分，遇到的问题："><a href="#使用模板拆分，遇到的问题：" class="headerlink" title="使用模板拆分，遇到的问题："></a>使用模板拆分，遇到的问题：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.io.FileNotFoundException: Template <span class="string">"../main-frame/main-frame.ftl"</span> not found.</span><br><span class="line">    at freemarker.template.Configuration.getTemplate(Configuration.java:742)</span><br><span class="line">    at freemarker.core.Environment.getTemplateForInclusion(Environment.java:1694)</span><br><span class="line">    at freemarker.core.Environment.getTemplateForImporting(Environment.java:1748)</span><br><span class="line">    at freemarker.core.LibraryLoad.accept(LibraryLoad.java:111)</span><br><span class="line">    ... 48 more</span><br></pre></td></tr></table></figure><p>处理方法：模板路径不对，需要找到模板所在文件夹的上一级再往下找。<br><img src="http://img.wanglixia.top/Freemarker-3-201914235828.png" alt="Freemarker-3-201914235828"></p><h4 id="freemarker默认配置使用时，如果传到前端的值为null或者不存在，后台会报错。"><a href="#freemarker默认配置使用时，如果传到前端的值为null或者不存在，后台会报错。" class="headerlink" title="freemarker默认配置使用时，如果传到前端的值为null或者不存在，后台会报错。"></a>freemarker默认配置使用时，如果传到前端的值为null或者不存在，后台会报错。</h4><p>处理方法：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPath"</span> <span class="attr">value</span>=<span class="string">"/template/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置默认的编码方式，原先是GBK，需要设置成utf-8 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--用于解决前端报空指针问题--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"classic_compatible"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"defaultEncoding"</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_exception_handler"</span>&gt;</span>rethrow<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>增加了一行：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"classic_compatible"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>参考链接：<a href="http://blog.csdn.net/achilles12345/article/details/38085225" target="_blank" rel="noopener">点击查看原文</a><br>问题原因：在freemarker中的空值的处理，默认情况以${xxx}的方式取值会报错，我们一般都采用${xxx?if_exists} 的方式去处理，烦死人了。经过查资料，很多人都建议使用classic_compatible=true的方式来处理，目测单词的意思应该是：“兼容传统模式”的意思。但是经过使用发现这个属性设置为true时，也有很多其他问题，比如boolean值的处理，比如include指令必须使用绝对路径，总之也会带来很多烦人的事情。最后找到源码，在Freemarker源码的Configurable类的isClassicCompatible方法上找到了详细的注释，这里翻译下，不过本人英语比较差，可能会有错误，如果有人不确定可以去看源码。</p><blockquote><p>  原注释大意如下：<br>   该方法返回Freemarker模板解析引擎是否工作在“Classic Compatibile”模式下。如果这个模式被激活，则Freemarker模板解析引擎将以以下的方式工作：（类似于1.7.x这个版本的运行方式，这个也是1.7.x的版本被称为“经典的Freemarker”的由来）。（译者注：以下的1、2、3、4、5、6是译者自己加的，方便读者看）<br>   处理未定义的表达式，也就是说”expr”为null值。<br>   1、作为像表达式“<assign varname="expr">”、“${expr}”、“ otherexpr == expr“、“otherexpr != expr”条件表达式或者是“hash[expr]”表达式的参数，这个参数将被当成空字符来对待。（译者注：这里注意空字符和null是不一样的).<br>   2、作为“<list expr="" as="" item="">”、“<foreach item="" in="" expr="">”这样的表达式的参数，其循环体将不会被执行，和list的长度为0是一样的。<br>   3、作为“<if>”或者其他布尔表达式命令的参数，空值将被当成是false来处理。非布尔数据模型或者逻辑操作数也可以放在“<if>”表达式中，空模型（长度为零的字符串，空的数组或者hash集合）都被当成是false来对待，其他情况下都被当成是true来处理。<br>   4、当布尔值被当成字符串（比如用${…}输出，或者是和其他字符串连接），true值将被转换成“true”字符串处理，false值将被转换成空字符串。<br>   5、提供给<list>和<foreach>的标量数据模型参数将被当成只包含一个该模型的list来处理。（译者注：就是说，传给<list>和<foreach>的参数不是list或者数组类型的，而是单个元素，则会被当成只有一个元素的list或者数组）<br>   6、“<include>”标签的路径参数将被作为绝对路径处理。（译者注：这里很多网上的文档都没有提过，是本人经过观察发现的，然后从源码和其注释中找到的。在这种情况下，如果传入的ftl路径是相对路径，则会报找不到文件的异常）。<br>   在其他方面，甚至是在兼容模式下，这个Freemaker解析引擎是2.1引擎，你不会因此而丢掉其他新的功能。<br>  以上就是译文， 那么如果我们设置了全局的classic_compatible属性，而在某个页面上又不想遵守这个属性该怎么办呢？这样就可以在当前这个页面上采用以下的办法，让当前的页面不再支持传统模式：&lt;#setting classic_compatible=false&gt;</include></foreach></list></foreach></list></if></if></foreach></list></assign></p></blockquote>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Freemarker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery学习笔记（三）DOM篇</title>
      <link href="/jQuery-usage-2.html"/>
      <url>/jQuery-usage-2.html</url>
      <content type="html"><![CDATA[<p><img src="http://img.wanglixia.top/logo-jquery-20191111489.jpg" alt="logo-jquery-20191111489"></p><p>本文内容有：</p><ol><li>DOM内部插入append()与appendTo()</li><li>DOM内部插入prepend()与prependTo()</li><li>DOM外部插入after()与before()</li><li>DOM外部插入insertAfter()与insertBefore()</li><li>DOM节点删除之empty()的基本用法</li><li>DOM节点删除之empty和remove区别</li><li>DOM节点删除之保留数据的删除操作detach()</li><li>DOM节点删除之detach()和remove()区别</li></ol><a id="more"></a><h3 align="center"> （一）DOM内部插入append()与appendTo()</h3><p>创建节点及节点属性</p><ul><li>创建元素：document.createElement</li><li>设置属性：setAttribute</li><li>添加文本：innerHTML</li><li>加入文档：appendChild</li></ul><p>几个问题：</p><ol><li>每一个元素节点都必须单独创建</li><li>节点是属性需要单独设置，而且设置的接口不是很统一</li><li>添加到指定的元素位置不灵活<br>最后还有一个最重要的：浏览器兼容问题处理</li></ol><p>jQuery节点创建与属性的处理</p><ol><li>把这个节点的结构给通过HTML标记字符串描述出来，通过$()函数处理，$(“html结构”)；<br>eg： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = $(<span class="string">"&lt;div class='right'&gt;&lt;div class='aaron'&gt;动态创建DIV元素节点&lt;/div&gt;&lt;/div&gt;"</span>)</span><br><span class="line">    $body.append(div)</span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th style="text-align:left">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">append(content)</td><td style="text-align:left">向每个匹配的元素内部追加内容</td></tr><tr><td style="text-align:left">$(A).appentTo(B)</td><td style="text-align:left">把所有匹配的元素追加到指定的元素集合中，把A追加到B中</td></tr></tbody></table><h3 align="center"> （二）DOM内部插入prepend()与prependTo()</h3><table><thead><tr><th style="text-align:left">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">prepend</td><td style="text-align:left">向每个匹配的元素内部前置内容</td></tr><tr><td style="text-align:left">prependTo</td><td style="text-align:left">把所有匹配的元素前置到指定的元素集合中，把A追加到B中</td></tr></tbody></table><p>方法详解：</p><ul><li>.prepend()方法将指定元素插入到匹配元素里面作为它的第一个子元素 (如果要作为最后一个子元素插入用.append()).</li><li>.prepend()和.prependTo()实现同样的功能，主要的不同是语法，插入的内容和目标的位置不同</li><li>对于.prepend() 而言，选择器表达式写在方法的前面，作为待插入内容的容器，将要被插入的内容作为方法的参数</li><li>而.prependTo() 正好相反，将要被插入的内容写在方法的前面，可以是选择器表达式或动态创建的标记，待插入内容的容器作为参数。</li></ul><p>这里总结下内部操作四个方法的区别：</p><ul><li>append()向每个匹配的元素内部追加内容</li><li>prepend()向每个匹配的元素内部前置内容</li><li>appendTo()把所有匹配的元素追加到另一个指定元素的集合中</li><li>prependTo()把所有匹配的元素前置到另一个指定的元素集合中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到class="aaron1"的div节点</span></span><br><span class="line"><span class="comment">//然后通过prepend在内部的首位置添加一个新的p节点 </span></span><br><span class="line">$(<span class="string">'.aaron1'</span>).prepend(<span class="string">'&lt;p&gt;prepend增加的p元素&lt;/p&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到class="aaron2"的div节点</span></span><br><span class="line"><span class="comment">//然后通过prependTo内部的首位置添加一个新的p节点</span></span><br><span class="line">$(<span class="string">'&lt;p&gt;prependTo增加的p元素&lt;/p&gt;'</span>).prependTo($(<span class="string">'.aaron2'</span>))</span><br></pre></td></tr></table></figure><h3 align="center"> （三）DOM外部插入after()与before()</h3><p>|:—|:—|<br>|.after(content)|在匹配元素集合中的每个元素后面插入参数所指定的内容，作为其兄弟节点|<br>|.before(content)|在匹配元素的前面插入内容|</p><ul><li>before与after都是用来对相对选中元素外部增加相邻的兄弟节点</li><li>2个方法都是都可以接收HTML字符串，DOM 元素，元素数组，或者jQuery对象，用来插入到集合中每个匹配元素的前面或者后面</li><li>2个方法都支持多个参数传递after(div1,div2,….) 可以参考右边案例代码</li></ul><p>注意点：</p><ul><li>after向元素的后边添加html代码，如果元素后面有元素了，那将后面的元素后移，然后将html代码插入</li><li>before向元素的前边添加html代码，如果元素前面有元素了，那将前面的元素前移，然后将html代码插入</li></ul><h3 align="center"> （四）DOM外部插入insertAfter()与insertBefore()</h3><p>|:—|:—|<br>|.insertBefore(content)|在匹配元素前面插入集合中每个匹配的元素|<br>|.insertAfter(content)|在匹配元素后面插入集合中每个匹配的元素|</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在test1元素前后插入集合中每个匹配的元素</span></span><br><span class="line"><span class="comment">//不支持多参数</span></span><br><span class="line">$(<span class="string">'&lt;p style="color:red"&gt;测试insertBefore方法增加&lt;/p&gt;'</span>, <span class="string">'&lt;p style="color:red"&gt;多参数&lt;/p&gt;'</span>).insertBefore($(<span class="string">".test1"</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment">//在test2元素前后插入集合中每个匹配的元素</span></span><br><span class="line"><span class="comment">//不支持多参数</span></span><br><span class="line">$(<span class="string">'&lt;p style="color:red"&gt;测试insertAfter方法增加&lt;/p&gt;'</span>, <span class="string">'&lt;p style="color:red"&gt;多参数&lt;/p&gt;'</span>).insertAfter($(<span class="string">".test2"</span>))</span><br></pre></td></tr></table></figure><h3 align="center"> （五）DOM节点删除之empty()的基本用法</h3><p>这个方法不仅移除子元素（和其他后代元素），同样移除元素里的文本。因为，根据说明，元素里任何文本字符串都被看做是该元素的子节点。</p><p>过remove方法移除div及其内部所有元素，remove内部会自动操作事件销毁方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过remove处理</span></span><br><span class="line">$(<span class="string">'.hello'</span>).remove()</span><br><span class="line"><span class="comment">//结果：&lt;div class="hello"&gt;&lt;p&gt;慕课网&lt;/p&gt;&lt;/div&gt; 全部被移除</span></span><br><span class="line"><span class="comment">//节点不存在了,同事事件也会被销毁</span></span><br></pre></td></tr></table></figure><p>remove表达式参数：<br>remove比empty好用的地方就是可以传递一个选择器表达式用来过滤将被移除的匹配元素集合，可以选择性的删除指定的节点<br>我们可以通过$()选择一组相同的元素，然后通过remove（）传递筛选的规则处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).filter(<span class="string">":contains('3')"</span>).remove()</span><br><span class="line"></span><br><span class="line">$(<span class="string">"button:last"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="comment">//找到所有p元素中，包含了3的元素</span></span><br><span class="line">        <span class="comment">//这个也是一个过滤器的处理</span></span><br><span class="line">        $(<span class="string">"p"</span>).remove(<span class="string">":contains('3')"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 align="center"> （六）DOM节点删除之empty和remove区别</h3><p>要用到移除指定元素的时候，jQuery提供了empty()与remove([expr])二个方法，两个都是删除元素，但是两者还是有区别<br>empty方法</p><ul><li>严格地讲，empty()方法并不是删除节点，而是清空节点，它能清空元素中的所有后代节点</li><li>empty不能删除自己本身这个节点</li></ul><p>remove方法</p><ul><li>该节点与该节点所包含的所有后代节点将同时被删除</li><li>提供传递一个筛选的表达式，删除指定合集中的元素</li></ul><h3 align="center"> （七）DOM节点删除之保留数据的删除操作detach()</h3><p>如果我们希望临时删除页面上的节点，但是又不希望节点上的数据与事件丢失，并且能在下一个时间段让这个删除的节点显示到页面，这时候就可以使用detach方法来处理<br>detach从字面上就很容易理解。让一个web元素托管。即从当前页面中移除该元素，但保留这个元素的内存模型对象。<br>来看看jquery官方文档的解释：<br>这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来。<br>$(“div”).detach()这一句会移除对象，仅仅是显示效果没有了。但是内存中还是存在的。当你append之后，又重新回到了文档流中。就又显示出来了。<br>当然这里要特别注意，detach方法是JQuery特有的，所以它只能处理通过JQuery的方法绑定的事件或者数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!$(<span class="string">"p"</span>).length) <span class="keyword">return</span>; <span class="comment">//去重</span></span><br><span class="line"><span class="comment">//通过detach方法删除元素</span></span><br><span class="line"><span class="comment">//只是页面不可见，但是这个节点还是保存在内存中</span></span><br><span class="line"><span class="comment">//数据与事件都不会丢失</span></span><br><span class="line">p = $(<span class="string">"p"</span>).detach()</span><br></pre></td></tr></table></figure><h3 align="center"> （八）DOM节点删除之detach()和remove()区别</h3><p>remove()和detach()可能就是其中的一个，可能remove()我们用得比较多，而detach()就可能会很少了<br> 通过一张对比表来解释2个方法之间的不同<br>|方法名|参数|事件及数据是否也被移除|元素自身是否被移除|<br>|:—|:—|:—|:—|<br>|remove|支持选择器表达|是|是（无参数时），有参数时要根据参数所涉及的范围|<br>|detach|参数同remove|否|情况同remove|</p><p>remove：移除节点</p><ul><li>无参数，移除自身整个节点以及该节点的内部的所有节点，包括节点上事件与数据</li><li>有参数，移除筛选出的节点以及该节点的内部的所有节点，包括节点上事件与数据</li></ul><p>detach：移除节点</p><ul><li>移除的处理与remove一致</li><li>与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来</li><li>例如：$(“p”).detach()这一句会移除对象，仅仅是显示效果没有了。但是内存中还是存在的。当你append之后，又重新回到了文档流中。就又显示出来了。</li></ul>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery学习笔记（二）样式篇</title>
      <link href="/jQuery-usage-1.html"/>
      <url>/jQuery-usage-1.html</url>
      <content type="html"><![CDATA[<p><img src="http://img.wanglixia.top/logo-jquery-20191111489.jpg" alt="logo-jquery-20191111489"></p><p>本文内容有：</p><ol><li>jQuery的属性与样式之html()及.text()</li><li>jQuery的属性与样式之增加样式.addClass()</li><li>jQuery的属性与样式之删除样式.removeClass()</li><li>jQuery的属性与样式之切换样式.toggleClass()</li><li>jQuery的属性与样式之样式操作.css()</li><li>.css()与.addClass()设置样式的区别</li><li>jQuery的属性与样式之.val()</li><li>jQuery的属性与样式之元素的数据存储<a id="more"></a><h3 align="center"> （一）jQuery的属性与样式之html()及.text()</h3></li></ol><h3 id="html-方法："><a href="#html-方法：" class="headerlink" title=".html()方法："></a><code>.html()</code>方法：</h3><p>&emsp;&emsp;获取集合中第一个匹配元素的HTML内容 或 设置每一个匹配元素的html内容，具体有3种用法：</p><ol><li><code>.html()</code> 不传入值，就是获取集合中第一个匹配元素的HTML内容</li><li><code>.html(htmlString)</code>  设置每一个匹配元素的html内容</li><li><code>.html(function(index, oldhtml))</code> 用来返回设置HTML内容的一个函数</li></ol><p><strong>注意事项：</strong><br><code>.html()</code>方法内部使用的是DOM的innerHTML属性来处理的，所以在设置与获取上需要注意<strong>这个操作是针对整个HTML内容（不仅仅只是文本内容）</strong></p><h3 id="text-方法"><a href="#text-方法" class="headerlink" title=".text()方法"></a><code>.text()</code>方法</h3><p>得到匹配元素集合中每个元素的文本内容结合，包括他们的后代，或设置匹配元素集合中每个元素的文本内容为指定的文本内容。，具体有3种用法：</p><ol><li><code>.text()</code> 得到匹配元素集合中每个元素的合并文本，包括他们的后代</li><li><code>.text(textString)</code> 用于设置匹配元素内容的文本</li><li><code>.text(function(index, text))</code> 用来返回设置文本内容的一个函数</li></ol><p><strong>注意事项：</strong><br><code>.text()</code>结果返回一个字符串，包含所有匹配元素的合并文本</p><h3 id="html与-text的异同"><a href="#html与-text的异同" class="headerlink" title=".html与.text的异同:"></a><code>.html</code>与<code>.text</code>的异同:</h3><ol><li><code>.html</code>与<code>.text</code>的方法操作是一样，只是在具体针对处理对象不同</li><li><code>.html</code>处理的是元素内容，<code>.text</code>处理的是文本内容</li><li><code>.html</code>只能使用在HTML文档中，<code>.text</code> 在XML 和 HTML 文档中都能使用</li><li>如果处理的对象只有一个子文本节点，那么html处理的结果与text是一样的</li></ol><p><strong>火狐不支持innerText属性，用了类似的textContent属性，.text()方法综合了2个属性的支持，所以可以兼容所有浏览器</strong></p><h3 align="center"> （二）jQuery的属性与样式之增加样式.addClass()</h3><p>&emsp;&emsp;在HTML结构中里，多个class以空格分隔，当一个节点（或称为一个标签）含有多个class时，DOM元素响应的className属性获取的不是class名称的数组，而是一个含有空格的字符串，这就使得多class操作变得很麻烦。</p><p><strong><code>.addClass(className)</code>方法</strong></p><ol><li><code>.addClass(className) </code>: 为每个匹配元素所要增加的一个或多个样式名</li><li><code>.addClass(function(index, currentClass))</code>: 这个函数返回一个或更多用空格隔开的要增加的样式名</li></ol><p><strong>注意事项：</strong></p><p><code>.addClass()</code>方法不会替换一个样式类名。它只是简单的添加一个样式类名到元素上</p><h3 align="center"> （三）jQuery的属性与样式之删除样式.removeClass()</h3><br>jQuery的属性与样式之删除样式.removeClass()<br>jQuery通过.addClass()方法可以很便捷的增加样式。如果需要样式之间的切换，同样jQuery提供了一个很方便的.removeClass()，它的作用是从匹配的元素中删除全部或者指定的class<br>.removeClass( )方法<br>1. .removeClass( [className ] )：每个匹配元素移除的一个或多个用空格隔开的样式名<br>2. .removeClass( function(index, class) ) ： 一个函数，返回一个或多个将要被移除的样式名<br>注意事项<br>如果一个样式类名作为一个参数,只有这样式类会被从匹配的元素集合中删除 。 如果没有样式名作为参数，那么所有的样式类将被移除<br><br><h3 align="center"> （四）jQuery的属性与样式之切换样式.toggleClass()</h3><p>&emsp;&emsp;jQuery提供一个toggleClass方法用于简化互斥的逻辑，通过<code>toggleClass</code>方法动态添加删除Class，一次执行相当于<code>addClass</code>，再次执行相当于<code>removeClass</code>。</p><p>&emsp;&emsp;<code>.toggleClass()</code>方法：在匹配的元素集合中的每个元素上添加或删除一个或多个样式类,如果存在（不存在）就删除（添加）一个类。</p><ol><li><code>.toggleClass(className)</code>：在匹配的元素集合中的每个元素上用来切换的一个或多个（用空格隔开）样式类名</li><li><code>.toggleClass(className, switch)</code>：一个布尔值，用于判断样式是否应该被添加或移除</li><li><code>.toggleClass([switch])</code>：一个用来判断样式类添加还是移除的 布尔值</li><li><code>.toggleClass(function(index, class, switch) [,switch])</code>：用来返回在匹配的元素集合中的每个元素上用来切换的样式类名的一个函数。接收元素的索引位置和元素旧的样式类作为参数</li></ol><p><strong>注意事项：</strong></p><ol><li><code>toggleClass</code>是一个互斥的逻辑，也就是通过判断对应的元素上是否存在指定的Class名，如果有就删除，如果没有就增加；</li><li><code>toggleClass</code>会保留原有的Class名后新增，通过空格隔开。</li></ol><h3 align="center"> （五）jQuery的属性与样式之样式操作.css()</h3><p>.css() 方法：获取元素样式属性的计算值或者设置元素的CSS属性<br>获取：</p><ol><li>.css( propertyName ) ：获取匹配元素集合中的第一个元素的样式属性的计算值</li><li>.css( propertyNames )：传递一组数组，返回一个对象结果<br>设置：</li><li>.css(propertyName, value )：设置CSS</li><li>.css( propertyName, function )：可以传入一个回调函数，返回取到对应的值进行处理</li><li>.css( properties )：可以传一个对象，同时设置多个样式<br>注意事项：</li><li>浏览器属性获取方式不同，在获取某些值的时候都jQuery采用统一的处理，比如颜色采用RBG，尺寸采用px</li><li>.css()方法支持驼峰写法与大小写混搭的写法，内部做了容错的处理<br>当一个数只被作为值（value）的时候， jQuery会将其转换为一个字符串，并添在字符串的结尾处添加px，例如 .css(“width”,50}) 与 .css(“width”,”50px”})一样</li></ol><h3 align="center"> （六）.css()与.addClass()设置样式的区别</h3><p>&emsp;&emsp;对于样式的设置，我们学了addClass与css方法，那么两者之间有什么区别？</p><p><strong>可维护性：</strong></p><ol><li>&emsp;&emsp;<code>.addClass()</code>的本质是通过定义个class类的样式规则，给元素添加一个或多个类。css方法是通过JavaScript大量代码进行改变元素的样式。</li><li>&emsp;&emsp;通过<code>.addClass()</code>我们可以批量的给相同的元素设置统一规则，变动起来比较方便，可以统一修改删除。如果通过.css()方法就需要指定每一个元素是一一的修改，日后维护也要一一的修改，比较麻烦</li></ol><p><strong>灵活性：</strong></p><p>&emsp;&emsp;通过<code>.css()</code>方式可以很容易动态的去改变一个样式的属性，不需要在去繁琐的定义个class类的规则。一般来说在不确定开始布局规则，通过动态生成的HTML代码结构中，都是通过<code>.css()</code>方法处理的</p><p><strong>样式值：</strong></p><p>&emsp;&emsp;.addClass()本质只是针对class的类的增加删除，不能获取到指定样式的属性的值，.css()可以获取到指定的样式值。</p><p><strong>样式的优先级：</strong></p><p>css的样式是有优先级的，当外部样式、内部样式和内联样式同一样式规则同时应用于同一个元素的时候，优先级如下<br><strong>外部样式 &lt; 内部样式 &lt; 内联样式</strong></p><ol><li><code>.addClass()</code>方法是通过增加class名的方式，那么这个样式是在外部文件或者内部样式中先定义好的，等到需要的时候在附加到元素上；</li><li>通过<code>.css()</code>方法处理的是内联样式，直接通过元素的style属性附加到元素上的<br>通过.css方法设置的样式属性优先级要高于.addClass方法。</li></ol><p><strong>总结：</strong></p><ol><li>&emsp;&emsp;<code>.addClass</code>与<code>.css</code>方法各有利弊，一般是静态的结构，都确定了布局的规则，可以用addClass的方法，增加统一的类规则</li><li>&emsp;&emsp;如果是动态的HTML结构，在不确定规则，或者经常变化的情况下，一般多考虑.css()方式</li></ol><h3 align="center"> （七）jQuery的属性与样式之.val()</h3><p>jQuery中有一个.val()方法主要是用于处理表单元素的值，比如 input, select 和 textarea。</p><p><strong>.val()方法</strong></p><ol><li>.val()无参数，获取匹配的元素集合中第一个元素的当前值</li><li>.val( value )，设置匹配的元素集合中每个元素的值</li><li>.val( function ) ，一个用来返回设置值的函数</li></ol><p><strong>注意事项：</strong></p><ol><li>通过.val()处理select元素， 当没有选择项被选中，它返回null</li><li>.val()方法多用来设置表单的字段的值</li><li>如果select元素有multiple（多选）属性，并且至少一个选择项被选中， .val()方法返回一个数组，这个数组包含每个选中选择项的值</li></ol><p><strong>.html(),.text()和.val()的差异总结：</strong></p><ol><li>.html(),.text(),.val()三种方法都是用来读取选定元素的内容；只不过.html()是用来读取元素的html内容（包括html标签），.text()用来读取元素的纯文本内容，包括其后代元素，.val()是用来读取表单元素的”value”值。其中.html()和.text()方法不能使用在表单元素上,而.val()只能使用在表单元素上；另外.html()方法使用在多个元素上时，只读取第一个元素；.val()方法和.html()相同，如果其应用在多个元素上时，只能读取第一个表单元素的”value”值，但是.text()和他们不一样，如果.text()应用在多个元素上时，将会读取所有选中元素的文本内容。</li><li>.html(htmlString),.text(textString)和.val(value)三种方法都是用来替换选中元素的内容，如果三个方法同时运用在多个元素上时，那么将会替换所有选中元素的内容。</li><li>.html(),.text(),.val()都可以使用回调函数的返回值来动态的改变多个元素的内容。</li></ol><h3 align="center"> （八）jQuery的属性与样式之元素的数据存储</h3><p><strong>jQuery提供的存储接口</strong></p><ol><li>jQuery.data( element, key, value )   //静态接口,存数据</li><li>jQuery.data( element, key )  //静态接口,取数据</li></ol><p>.data( key, value ) //实例接口,存数据</p><p>.data( key ) //实例接口,存数据</p><p>&emsp;&emsp;2个方法在使用上存取都是通一个接口，传递元素，键值数据。在jQuery的官方文档中，建议用.data()方法来代替。</p><p>&emsp;&emsp;把DOM可以看作一个对象，那么我们往对象上是可以存在基本类型，引用类型的数据的，但是这里会引发一个问题，可能会存在循环引用的内存泄漏风险</p><p>&emsp;&emsp;通过jQuery提供的数据接口，就很好的处理了这个问题了，我们不需要关心它底层是如何实现，只需要按照对应的data方法使用就行了。<br>&emsp;&emsp;同样的也提供2个对应的删除接口，使用上与data方法其实是一致的，只不过是一个是增加一个是删除罢了<br>jQuery.removeData(element [, name])<br>.removeData([name])</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>本文属于学习过程中整理自慕课网jQuery基础：</p><p>课程链接：<a href="https://www.imooc.com/learn/418" target="_blank" rel="noopener">https://www.imooc.com/learn/418</a>；</p><p>作者：Aaron艾伦<a href="https://www.imooc.com/u/290139/courses?sort=publish" target="_blank" rel="noopener">https://www.imooc.com/u/290139/courses?sort=publish</a></p><p>谢谢</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery学习笔记（一）样式篇</title>
      <link href="/jQuery-usage.html"/>
      <url>/jQuery-usage.html</url>
      <content type="html"><![CDATA[<p><img src="http://img.wanglixia.top/logo-jquery-20191111489.jpg" alt="logo-jquery-20191111489"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>jQuery是一个JavaScript代码库（或者JavaScript框架）。jQuery的宗旨是“Write Less，Do more”（写更少的代码，做更多的事情）。<br>jQuery的核心特性可以总结为：具有独特的链式语法和短小清晰的多功能接口；具有高效灵活的css选择器，并且可对CSS选择器进行扩展；拥有便捷的插件扩展机制和丰富的插件。jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等。</p><h2 id="jQuery学习之样式篇"><a href="#jQuery学习之样式篇" class="headerlink" title="jQuery学习之样式篇"></a>jQuery学习之样式篇</h2><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">$(“parent &gt; child”)</td><td style="text-align:left"><strong>子选择器</strong>：选择所有指定的“parent”元素中指定的“child”的直接子元素，相邻上下级关系</td></tr><tr><td style="text-align:center">$(“ancestor descendant”)</td><td style="text-align:left"><strong>后代选择器</strong>：选择给定的祖先元素的所有后代元素，包含这个元素的直接子元素或者、孙子、曾孙等</td></tr><tr><td style="text-align:center">$(“prev + next”)</td><td style="text-align:left"><strong>相邻兄弟选择器</strong>：选择紧跟在“prev”元素后的“next”元素</td></tr><tr><td style="text-align:center">$(“prev ~ siblings”)</td><td style="text-align:left"><strong>一般兄弟选择器</strong>：匹配“prev”元素之后的所有兄弟元素。一般兄弟指具有相同的父元素，并匹配过滤“siblings”选择器</td></tr><tr><td style="text-align:center">$(“:first”)</td><td style="text-align:left">匹配第一个元素，如$(“input:first”)找到的是第一个input</td></tr><tr><td style="text-align:center">$(“:last”)</td><td style="text-align:left">匹配最后一个元素</td></tr><tr><td style="text-align:center">$(“:not(selector)”)</td><td style="text-align:left">选择所有不是给定选择器的元素</td></tr><tr><td style="text-align:center">$(“:eq(index)”)</td><td style="text-align:left">选择索引值为index的元素</td></tr><tr><td style="text-align:center">$(“:gt(index)”)</td><td style="text-align:left">选择所有索引值大于index的元素</td></tr><tr><td style="text-align:center">$(“:lt(index)”)</td><td style="text-align:left">选择所有索引值小于index的元素</td></tr><tr><td style="text-align:center">$(“:even”)</td><td style="text-align:left">索引值为偶数的元素，从零开始</td></tr><tr><td style="text-align:center">$(“:odd”)</td><td style="text-align:left">索引值为奇数的元素，从零开始</td></tr><tr><td style="text-align:center">$(“:header”)</td><td style="text-align:left">选择所有标题元素，如h1，h2等</td></tr><tr><td style="text-align:center">$(“:lang(language)”)</td><td style="text-align:left">选择指定语言的元素</td></tr><tr><td style="text-align:center">$(“:root”)</td><td style="text-align:left">选择该文档的根元素</td></tr><tr><td style="text-align:center">$(“:animated”)</td><td style="text-align:left">所有正在执行动画效果的元素</td></tr><tr><td style="text-align:center">$(“:contains(text)”)</td><td style="text-align:left">所有包含指定文本的元素，如果匹配的文本包含在其子元素中，同样匹配</td></tr><tr><td style="text-align:center">$(“:has(selector)”)</td><td style="text-align:left">所有元素中至少包含指定选择器的元素</td></tr><tr><td style="text-align:center">$(“:parent”)</td><td style="text-align:left">所有包含子元素或者文本的元素</td></tr><tr><td style="text-align:center">$(“:empty”)</td><td style="text-align:left">所有没有子元素的元素</td></tr></tbody></table><hr><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">$(“:visible”)</td><td style="text-align:left">选择所有显示的元素</td></tr><tr><td style="text-align:center">$(“:hidden”)</td><td style="text-align:left">选择所有隐藏的元素</td></tr></tbody></table><hr><h4 id="属性选择器-“input-name-‘objname’-”"><a href="#属性选择器-“input-name-‘objname’-”" class="headerlink" title="属性选择器 $(“input[name~-‘objname’]”)"></a>属性选择器 <code>$(“input[name~-‘objname’]”)</code></h4><p>$(“[attribute|-‘value’]”)选择指定属性值等于给定字符串或以该文字串为前缀（该字符串后跟一个连字符”-“）的元素</p><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">$(“[attribute*=’value’]”)</td><td style="text-align:left">选择指定属性包含给定的子字符串的元素</td></tr><tr><td style="text-align:center">$(“[attribute~-‘value’]”)</td><td style="text-align:left">选择指定属性用空格分割的值中包含一个给定值的元素</td></tr><tr><td style="text-align:center">$(“[attribute=’value’]”)</td><td style="text-align:left">选择指定属性是给定值的元素</td></tr><tr><td style="text-align:center">$(“[attribute!=’value’]”)</td><td style="text-align:left">选择指定属性不等于给定值的元素</td></tr><tr><td style="text-align:center">$(“[attribute^=’value’]”)</td><td style="text-align:left">选择指定属性是以给定字符串开始的元素</td></tr><tr><td style="text-align:center">$(“[attribute$-‘value’]”)</td><td style="text-align:left">选择指定属性是以给定字符串结尾的元素</td></tr><tr><td style="text-align:center">$(“[attribute]”)</td><td style="text-align:left">选择所有具有指定属性的元素</td></tr><tr><td style="text-align:center">$(“[attributeFilter1][attributeFilterN]”)</td><td style="text-align:left">选择匹配所有指定的属性筛选器的元素</td></tr></tbody></table><hr><h4 id="表单元素选择器"><a href="#表单元素选择器" class="headerlink" title="表单元素选择器"></a>表单元素选择器</h4><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">$(“:input”)</td><td style="text-align:left">选择所有input，textarea，select和button元素</td></tr><tr><td style="text-align:center">$(“:text”)</td><td style="text-align:left">所有文本框</td></tr><tr><td style="text-align:center">$(“:password”)</td><td style="text-align:left">所有密码框</td></tr><tr><td style="text-align:center">$(“:radio”)</td><td style="text-align:left">所有单选按钮</td></tr><tr><td style="text-align:center">$(“:checkbox”)</td><td style="text-align:left">所有复选框</td></tr><tr><td style="text-align:center">$(“:submit”)</td><td style="text-align:left">所有提交按钮</td></tr><tr><td style="text-align:center">$(“:image”)</td><td style="text-align:left">所有图像域</td></tr><tr><td style="text-align:center">$(“:reset”)</td><td style="text-align:left">所有重置按钮</td></tr><tr><td style="text-align:center">$(“:button”)</td><td style="text-align:left">所有按钮</td></tr><tr><td style="text-align:center">$(“:file”)</td><td style="text-align:left">所有文件域</td></tr></tbody></table><hr><h4 id="表单对象属性筛选选择器"><a href="#表单对象属性筛选选择器" class="headerlink" title="表单对象属性筛选选择器"></a>表单对象属性筛选选择器</h4><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">$(“:enabled”)</td><td style="text-align:left">匹配可用的表单元素</td></tr><tr><td style="text-align:center">$(“:disabled”)</td><td style="text-align:left">匹配不可用的表单元素</td></tr><tr><td style="text-align:center">$(“:checked”)</td><td style="text-align:left">匹配被选中的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">|$(&quot;:selected&quot;)|匹配被选中的```&lt;option&gt;```元素|</span><br><span class="line"></span><br><span class="line">### jQuery选择器之特殊选择器this</span><br><span class="line">this和$(this) 的区别？</span><br><span class="line">答：this 是JavaScript中的关键字，指的是当前的上下文对象，简单的说就是方法/属性的拥有者；</span><br><span class="line">eg:</span><br><span class="line">```js</span><br><span class="line">var ilucifer = &#123;</span><br><span class="line">name:&quot;寒江&quot;,</span><br><span class="line">getName:funcion()&#123;</span><br><span class="line">//this,就是imooc对象</span><br><span class="line">return this.name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ilucifer .getName();//寒江</span><br></pre></td></tr></table></figure></td></tr></tbody></table><p>在JavaScript中this是动态的，即这个上下文对象都是可以被动态改变的(可以通过call,apply等方法)<br>同样的在DOM中this就是指向了这个html元素对象，因为this就是DOM元素本身的一个引用<br>通过把$()方法传入当前的元素对象的引用this，把这个this加工成jQuery对象。</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>本文整理自慕课网jQuery基础 (一)—样式篇，课程链接：<a href="https://www.imooc.com/learn/418" target="_blank" rel="noopener">https://www.imooc.com/learn/418</a>；<br>作者：Aaron艾伦<a href="https://www.imooc.com/u/290139/courses?sort=publish" target="_blank" rel="noopener">https://www.imooc.com/u/290139/courses?sort=publish</a><br>谢谢</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用SoapUI 5.3.0调试webservice接口（参数格式XML）</title>
      <link href="/soapUI-webservice.html"/>
      <url>/soapUI-webservice.html</url>
      <content type="html"><![CDATA[<p>最近项目中经常要调试webservice接口，从朋友处了解到他们调试webservice接口时使用SoapUI，觉得十分好用，个人也对此十分感兴趣，因此简要记录一下这个工具的使用。<br><a id="more"></a></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>下载SoapUI，我使用的是5.3.0 <a href="https://www.soapui.org/downloads/latest-release.html" target="_blank" rel="noopener">下载SoapUI传送门</a></li><li>WebService 服务接口<h2 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h2><h3 id="新建调试项目"><a href="#新建调试项目" class="headerlink" title="新建调试项目"></a>新建调试项目</h3><img src="http://img.wanglixia.top/soapUI-webservice-1-20191423308.png" alt="soapUI-webservice-1-20191423308"><h4 id="输入项目名称及要调试的接口有效地址，输入完毕点击OK"><a href="#输入项目名称及要调试的接口有效地址，输入完毕点击OK" class="headerlink" title="输入项目名称及要调试的接口有效地址，输入完毕点击OK"></a>输入项目名称及要调试的接口有效地址，输入完毕点击OK</h4><img src="http://img.wanglixia.top/soapUI-webservice-2-201914233049.png" alt="soapUI-webservice-2-201914233049"><h4 id="soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new-request-输入名称后如下图会自动生成如下格式代码；其中-web-in0中填写入参"><a href="#soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new-request-输入名称后如下图会自动生成如下格式代码；其中-web-in0中填写入参" class="headerlink" title="soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new request,输入名称后如下图会自动生成如下格式代码；其中 web:in0中填写入参"></a>soapUI会自动获取所有已开放接口，在想要调试的接口方法上面选中右击，选择new request,输入名称后如下图会自动生成如下格式代码；其中 <a href="web:in0" target="_blank" rel="noopener">web:in0</a>中填写入参</h4><img src="http://img.wanglixia.top/soapUI-webservice-3-201914233131.png" alt="soapUI-webservice-3-201914233131"><br><em>注意：xml格式的入参最好使用 &lt;[CDATA[]]&gt; 包起来。点击左上角的绿色三角就可以调试接口了。</em><h3 id="新建测试套件-New-TestSuite"><a href="#新建测试套件-New-TestSuite" class="headerlink" title="新建测试套件 New TestSuite"></a>新建测试套件 New TestSuite</h3><h4 id="在项目名称上右击，选择-New-TestSuite-输入名称保存"><a href="#在项目名称上右击，选择-New-TestSuite-输入名称保存" class="headerlink" title="在项目名称上右击，选择 New TestSuite,输入名称保存"></a>在项目名称上右击，选择 New TestSuite,输入名称保存</h4><img src="http://img.wanglixia.top/soapUI-webservice-4-201914233313.png" alt="soapUI-webservice-4-201914233313"><h4 id="在自己新建的TestSuite名称上右击，选择-New-TestCase-输入名称保存"><a href="#在自己新建的TestSuite名称上右击，选择-New-TestCase-输入名称保存" class="headerlink" title="在自己新建的TestSuite名称上右击，选择 New TestCase,输入名称保存"></a>在自己新建的TestSuite名称上右击，选择 New TestCase,输入名称保存</h4><img src="http://img.wanglixia.top/soapUI-webservice-5-201914233350.png" alt="soapUI-webservice-5-201914233350"><h4 id="在Test-Steps上右击-选择-Add-Step-–-gt-SOAP-Request-输入名称并选择接口，名称最好容易识别一点"><a href="#在Test-Steps上右击-选择-Add-Step-–-gt-SOAP-Request-输入名称并选择接口，名称最好容易识别一点" class="headerlink" title="在Test Steps上右击 选择 Add Step –&gt;SOAP Request,输入名称并选择接口，名称最好容易识别一点"></a>在Test Steps上右击 选择 Add Step –&gt;SOAP Request,输入名称并选择接口，名称最好容易识别一点</h4><img src="http://img.wanglixia.top/soapUI-webservice-6-201914233419.png" alt="soapUI-webservice-6-201914233419"><br><img src="http://img.wanglixia.top/soapUI-webservice-7-201914233447.png" alt="soapUI-webservice-7-201914233447"><h4 id="接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。"><a href="#接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。" class="headerlink" title="接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。"></a>接下来就可以加入入参进行调试。一次简单的工具使用，记录下来，希望可以帮助到你，祝你好运。</h4></li></ul>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 接口 </tag>
            
            <tag> SoapUI </tag>
            
            <tag> Webservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>javascript操作数组array</title>
      <link href="/javascript-array.html"/>
      <url>/javascript-array.html</url>
      <content type="html"><![CDATA[<ul><li>shift：删除原数组第一项，并返回删除元素的值，原数组为空则返回undefined。</li><li>unshift:将参数添加到原数组开头，并返回数组的长度。</li><li>pop:删除原数组最后一项，并返回删除元素的值，原数组为空则返回undefined。</li><li>push:将参数添加到原数组末尾，并返回数组的长度。<a id="more"></a><h3 id="shift：删除原数组第一项，并返回删除元素的值，原数组为空则返回undefined。"><a href="#shift：删除原数组第一项，并返回删除元素的值，原数组为空则返回undefined。" class="headerlink" title="shift：删除原数组第一项，并返回删除元素的值，原数组为空则返回undefined。"></a>shift：删除原数组第一项，并返回删除元素的值，原数组为空则返回undefined。</h3><img src="http://img.wanglixia.top/javascript-array-1-2019150759.png" alt="javascript-array-1-2019150759"><h3 id="unshift-将参数添加到原数组开头，并返回数组的长度。"><a href="#unshift-将参数添加到原数组开头，并返回数组的长度。" class="headerlink" title="unshift:将参数添加到原数组开头，并返回数组的长度。"></a>unshift:将参数添加到原数组开头，并返回数组的长度。</h3><img src="http://img.wanglixia.top/javascript-array-2-201915085.png" alt="javascript-array-2-201915085"><h3 id="pop-删除原数组最后一项，并返回删除元素的值，原数组为空则返回undefined。"><a href="#pop-删除原数组最后一项，并返回删除元素的值，原数组为空则返回undefined。" class="headerlink" title="pop:删除原数组最后一项，并返回删除元素的值，原数组为空则返回undefined。"></a>pop:删除原数组最后一项，并返回删除元素的值，原数组为空则返回undefined。</h3><img src="http://img.wanglixia.top/javascript-array-3-2019150810.png" alt="javascript-array-3-2019150810"><h3 id="push-将参数添加到原数组末尾，并返回数组的长度。"><a href="#push-将参数添加到原数组末尾，并返回数组的长度。" class="headerlink" title="push:将参数添加到原数组末尾，并返回数组的长度。"></a>push:将参数添加到原数组末尾，并返回数组的长度。</h3></li></ul>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql导出导入数据库</title>
      <link href="/mysql-export-database.html"/>
      <url>/mysql-export-database.html</url>
      <content type="html"><![CDATA[<p>要在两台不同的电脑上进行开发，数据库需要统一，由于自己第一次完整的设计表结构，因此多次更改表结构，造成了很多不必要的麻烦，<br>需要将数据库导出成sql脚本。<br><a id="more"></a></p><h3 id="命令行下具体用法如下：-mysqldump-用户名-p密码-d-数据库名-表名-脚本名"><a href="#命令行下具体用法如下：-mysqldump-用户名-p密码-d-数据库名-表名-脚本名" class="headerlink" title="命令行下具体用法如下： mysqldump -用户名 -p密码 -d 数据库名 表名 脚本名;"></a>命令行下具体用法如下： mysqldump -用户名 -p密码 -d 数据库名 表名 脚本名;</h3><h4 id="导出数据库名为ssm-web的表结构（其中用户名为root-密码为root-生成的脚本名为db-sql）"><a href="#导出数据库名为ssm-web的表结构（其中用户名为root-密码为root-生成的脚本名为db-sql）" class="headerlink" title="导出数据库名为ssm_web的表结构（其中用户名为root,密码为root,生成的脚本名为db.sql）"></a>导出数据库名为ssm_web的表结构（其中用户名为root,密码为root,生成的脚本名为db.sql）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -proot -d ssm_web&gt;db.sql;</span><br></pre></td></tr></table></figure><h4 id="导出数据库名为ssm-web某张表-test-结构"><a href="#导出数据库名为ssm-web某张表-test-结构" class="headerlink" title="导出数据库名为ssm_web某张表(test)结构"></a>导出数据库名为ssm_web某张表(test)结构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -proot -d ssm_web <span class="built_in">test</span>&gt;test.sql;</span><br></pre></td></tr></table></figure><h4 id="导出数据库名为ssm-web所有表结构及表数据（不加-d）"><a href="#导出数据库名为ssm-web所有表结构及表数据（不加-d）" class="headerlink" title="导出数据库名为ssm_web所有表结构及表数据（不加-d）"></a>导出数据库名为ssm_web所有表结构及表数据（不加-d）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -proot ssm_web&gt;e:\lucifer\ssm_web.sql</span><br></pre></td></tr></table></figure><h4 id="导出数据库名为ssm-web某张表-test-结构及表数据（不加-d）"><a href="#导出数据库名为ssm-web某张表-test-结构及表数据（不加-d）" class="headerlink" title="导出数据库名为ssm_web某张表(test)结构及表数据（不加-d）"></a>导出数据库名为ssm_web某张表(test)结构及表数据（不加-d）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -proot ssm_web <span class="built_in">test</span>&gt;test.sql;</span><br></pre></td></tr></table></figure><h3 id="导入脚本"><a href="#导入脚本" class="headerlink" title="导入脚本"></a>导入脚本</h3><p>####<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; select now();</span><br><span class="line">+---------------------+</span><br><span class="line">| now() |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2013-09-18 13:55:45 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure></p><h4 id="执行编写好的sql脚本"><a href="#执行编写好的sql脚本" class="headerlink" title="执行编写好的sql脚本"></a>执行编写好的sql脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">source</span> H:/1.sql</span><br><span class="line">+---------------------+</span><br><span class="line">| now() |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2013-09-18 13:54:04 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="select-…into-outfile-方式执行sql"><a href="#select-…into-outfile-方式执行sql" class="headerlink" title="select …into outfile 方式执行sql"></a>select …into outfile 方式执行sql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select now() into outfile <span class="string">'h:/data/2.sql'</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">4.使用mysql命令执行</span><br><span class="line">H:&gt;mysql -uaHmin -p -e <span class="string">"select now()"</span></span><br><span class="line">Enter passworH: ****</span><br><span class="line">+---------------------+</span><br><span class="line">| now() |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2013-09-18 13:57:09 |</span><br><span class="line">+---------------------+</span><br></pre></td></tr></table></figure><h4 id="mysql命令执行sql，并将查询结果保存到文本中"><a href="#mysql命令执行sql，并将查询结果保存到文本中" class="headerlink" title="mysql命令执行sql，并将查询结果保存到文本中"></a>mysql命令执行sql，并将查询结果保存到文本中</h4><ul><li><p>执行简单sql，如果sql很长，这种方式就不是很适合了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uaHmin -proot <span class="built_in">test</span> -e <span class="string">"select now()"</span> -N &gt;H:/work/target1.txt</span><br></pre></td></tr></table></figure></li><li><p>执行复杂sql，可以将复杂的sql事先编辑好，存放到文本中在执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H:&gt; mysql -uroot -pmypwH -h127.0.0.1 -p3306 <span class="built_in">test</span> &lt; H:/work/source.sql &gt; H:/work/target.txt</span><br></pre></td></tr></table></figure></li></ul><p>将最后一种执行方式加上操作系统的定时任务，就可以在mysql中实现定时执行sql，并保存执行结果的目的了。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>防止js全局变量污染方法总结</title>
      <link href="/%E9%98%B2%E6%AD%A2js%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E6%B1%A1%E6%9F%93%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.html"/>
      <url>/%E9%98%B2%E6%AD%A2js%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E6%B1%A1%E6%9F%93%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<p><strong>转载自<a href="http://blog.csdn.net/xllily_11/article/details/52816699" target="_blank" rel="noopener">防止js全局变量污染方法总结-待续</a></strong><br>javaScript 可以随意定义保存所有应用资源的全局变量。但全局变量可以削弱程序灵活性，增大了模块之间的耦合性。<br>在多人协作时，如果定义过多的全局变量 有可能造成全局变量冲突，也就是全局变量污染问题,以下是两种解决办法<br><a id="more"></a></p><h3 id="定义全局变量命名空间"><a href="#定义全局变量命名空间" class="headerlink" title="定义全局变量命名空间"></a>定义全局变量命名空间</h3><p>只创建一个全局变量，并定义该变量为当前应用容器，把其他全局变量追加在该命名空间下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MY=&#123;&#125;;</span><br><span class="line">    my.name=&#123;</span><br><span class="line">    big_name:<span class="string">"zhangsan"</span>,</span><br><span class="line">    small_name:<span class="string">"lisi"</span></span><br><span class="line">&#125;;</span><br><span class="line">my.work=&#123;</span><br><span class="line">    school_work:<span class="string">"study"</span>,</span><br><span class="line">    family_work:<span class="string">"we are"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="利用匿名函数将脚本包裹起来"><a href="#利用匿名函数将脚本包裹起来" class="headerlink" title="利用匿名函数将脚本包裹起来"></a>利用匿名函数将脚本包裹起来</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> exp=&#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> name=<span class="string">"aa"</span>;</span><br><span class="line">    exp.method=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;;</span><br><span class="line">    <span class="built_in">window</span>.ex=exp;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SqlServer2008R2-问题汇总</title>
      <link href="/sqlserver2008r2.html"/>
      <url>/sqlserver2008r2.html</url>
      <content type="html"><![CDATA[<ul><li>新安装数据库sqlserver2008r2,使用客户端登录不上问题处理<a id="more"></a><h3 id="1-新安装数据库sqlserver2008r2-使用客户端登录不上问题处理"><a href="#1-新安装数据库sqlserver2008r2-使用客户端登录不上问题处理" class="headerlink" title="1. 新安装数据库sqlserver2008r2,使用客户端登录不上问题处理"></a>1. 新安装数据库sqlserver2008r2,使用客户端登录不上问题处理</h3>问题处理：鼠标右键【计算机】–&gt;【管理】，打开界面如下：<br><img src="http://img.wanglixia.top/SqlServer2008R2-error-1-20191505531.png" alt="SqlServer2008R2-error-1-20191505531"><br><img src="http://img.wanglixia.top/SqlServer2008R2-error-2-20191505542.png" alt="SqlServer2008R2-error-2-20191505542"><br>选择自己数据库的实例名：<br><img src="http://img.wanglixia.top/SqlServer2008R2-error-3-20191505548.png" alt="SqlServer2008R2-error-3-20191505548"><br>选择TCP/IP：右键【属性】，将所有TCP动态端口的【0】删掉，TCP端口设为1433；重启服务，即可连接。</li></ul>]]></content>
      
      <categories>
          
          <category> 错误 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SqlServer </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>javascript常用功能</title>
      <link href="/javascript-utils.html"/>
      <url>/javascript-utils.html</url>
      <content type="html"><![CDATA[<h3 id="使用JS获取request参数"><a href="#使用JS获取request参数" class="headerlink" title="使用JS获取request参数"></a>使用JS获取request参数</h3><ol><li>document.write(‘&lt;%=request.getAttribute(“param”)%&gt;’);</li><li>window.navigator.userAgent 记录浏览器信息以及操作系统信息。</li><li>var searchParam = location.search.配合使用string的相关方法即可得到。</li></ol><h3 id="js获取上下文路径："><a href="#js获取上下文路径：" class="headerlink" title="js获取上下文路径："></a>js获取上下文路径：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getContextPath: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pathName = <span class="built_in">document</span>.location.pathname;</span><br><span class="line">        <span class="keyword">var</span> index = pathName.substr(<span class="number">1</span>).indexOf(<span class="string">"/"</span>);</span><br><span class="line">        <span class="keyword">var</span> result = pathName.substr(<span class="number">0</span>, index + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="js获取项目路径："><a href="#js获取项目路径：" class="headerlink" title="js获取项目路径："></a>js获取项目路径：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRootPath</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    <span class="comment">//获取当前网址，如： http://localhost:8083/uimcardprj/share/meun.jsp  </span></span><br><span class="line">    <span class="keyword">var</span> curWwwPath=<span class="built_in">window</span>.document.location.href;  </span><br><span class="line">    <span class="comment">//获取主机地址之后的目录，如： uimcardprj/share/meun.jsp  </span></span><br><span class="line">    <span class="keyword">var</span> pathName=<span class="built_in">window</span>.document.location.pathname;  </span><br><span class="line">   <span class="keyword">var</span> pos=curWwwPath.indexOf(pathName);  </span><br><span class="line">    <span class="comment">//获取主机地址，如： http://localhost:8083  </span></span><br><span class="line">    <span class="keyword">var</span> localhostPaht=curWwwPath.substring(<span class="number">0</span>,pos);  </span><br><span class="line">    <span class="comment">//获取带"/"的项目名，如：/uimcardprj  </span></span><br><span class="line">    <span class="keyword">var</span> projectName=pathName.substring(<span class="number">0</span>,pathName.substr(<span class="number">1</span>).indexOf(<span class="string">'/'</span>)+<span class="number">1</span>);  </span><br><span class="line">    <span class="keyword">return</span>(localhostPaht+projectName);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用apache的poi组件上传并解析excel</title>
      <link href="/excel-upload-parse.html"/>
      <url>/excel-upload-parse.html</url>
      <content type="html"><![CDATA[<p>通过apache的poi组件解析excel，以便将数据存储到数据库中。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;String[]&gt; paseUserStoryFile(MultipartFile file) &#123;</span><br><span class="line">        List&lt;String[]&gt; list = <span class="keyword">new</span> ArrayList&lt;String[]&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            POIFSFileSystem pois = <span class="keyword">new</span> POIFSFileSystem(file.getInputStream());</span><br><span class="line">            <span class="comment">//新建WorkBook</span></span><br><span class="line">            HSSFWorkbook wb = <span class="keyword">new</span> HSSFWorkbook(pois);</span><br><span class="line">            <span class="comment">//获取Sheet（工作薄）总个数</span></span><br><span class="line">            <span class="keyword">int</span> sheetNumber = wb.getNumberOfSheets();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sheetNumber; i++) &#123;</span><br><span class="line">                <span class="comment">//获取Sheet（工作薄）</span></span><br><span class="line">                HSSFSheet sheet = wb.getSheetAt(i);</span><br><span class="line">                <span class="comment">//开始行数</span></span><br><span class="line">                <span class="keyword">int</span> firstRow = sheet.getFirstRowNum();</span><br><span class="line">                <span class="comment">//结束行数</span></span><br><span class="line">                <span class="keyword">int</span> lastRow = sheet.getLastRowNum();</span><br><span class="line">                <span class="comment">//判断该Sheet（工作薄)是否为空</span></span><br><span class="line">                <span class="keyword">boolean</span> isEmpty = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (firstRow == lastRow) &#123;</span><br><span class="line">                    isEmpty = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!isEmpty) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = firstRow + <span class="number">1</span>; j &lt;= lastRow; j++) &#123;</span><br><span class="line">                        <span class="comment">//获取一行</span></span><br><span class="line">                        HSSFRow row = sheet.getRow(j);</span><br><span class="line">                        <span class="comment">//开始列数</span></span><br><span class="line">                        <span class="keyword">int</span> firstCell = row.getFirstCellNum();</span><br><span class="line">                        <span class="comment">//结束列数</span></span><br><span class="line">                        <span class="keyword">int</span> lastCell = row.getLastCellNum();</span><br><span class="line">                        <span class="comment">//判断该行是否为空</span></span><br><span class="line">                        String[] value = <span class="keyword">new</span> String[lastCell];</span><br><span class="line">                        <span class="keyword">if</span> (firstCell != lastCell) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">int</span> k = firstCell; k &lt; lastCell; k++) &#123;</span><br><span class="line">                                <span class="comment">//获取一个单元格</span></span><br><span class="line">                                HSSFCell cell = row.getCell(k);</span><br><span class="line">                                Object str = <span class="keyword">null</span>;</span><br><span class="line">                                <span class="comment">//获取单元格，值的类型</span></span><br><span class="line">                                <span class="keyword">int</span> cellType = cell.getCellType();</span><br><span class="line">                                <span class="keyword">if</span> (cellType == <span class="number">0</span>) &#123;</span><br><span class="line">                                    str = cell.getNumericCellValue();</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == <span class="number">1</span>) &#123;</span><br><span class="line">                                    str = cell.getStringCellValue();</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == <span class="number">2</span>) &#123;</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == <span class="number">4</span>) &#123;</span><br><span class="line">                                    str = cell.getBooleanCellValue();</span><br><span class="line">                                &#125;</span><br><span class="line">                                value[k] = (String) str;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//每一行循环完对应的就是一个用户故事的所有属性全部拿到</span></span><br><span class="line">                        list.add(value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> java </tag>
            
            <tag> excel </tag>
            
            <tag> poi </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
